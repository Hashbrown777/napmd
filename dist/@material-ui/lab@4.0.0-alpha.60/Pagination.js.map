{"version":3,"file":"Pagination.js","sources":["../../../node_modules/@material-ui/lab/es/Pagination/Pagination.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport usePagination from './usePagination';\nimport PaginationItem from '../PaginationItem';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ul element. */\n  ul: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction defaultGetAriaLabel(type, page, selected) {\n  if (type === 'page') {\n    return `${selected ? '' : 'Go to '}page ${page}`;\n  }\n\n  return `Go to ${type} page`;\n}\n\nconst Pagination = /*#__PURE__*/React.forwardRef(function Pagination(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'standard',\n    getItemAriaLabel = defaultGetAriaLabel,\n    renderItem = item => /*#__PURE__*/React.createElement(PaginationItem, item),\n    shape = 'round',\n    size = 'medium',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"boundaryCount\", \"classes\", \"className\", \"color\", \"count\", \"defaultPage\", \"disabled\", \"getItemAriaLabel\", \"hideNextButton\", \"hidePrevButton\", \"onChange\", \"page\", \"renderItem\", \"shape\", \"showFirstButton\", \"showLastButton\", \"siblingCount\", \"size\", \"variant\"]);\n\n  const {\n    items\n  } = usePagination(_extends({}, props, {\n    componentName: 'Pagination'\n  }));\n  return /*#__PURE__*/React.createElement(\"nav\", _extends({\n    \"aria-label\": \"pagination navigation\",\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.ul\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index\n  }, renderItem(_extends({}, item, {\n    color,\n    'aria-label': getItemAriaLabel(item.type, item.page, item.selected),\n    shape,\n    size,\n    variant\n  }))))));\n}); // @default tags synced with default values from usePagination\n\nprocess.env.NODE_ENV !== \"production\" ? Pagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Number of always visible pages at the beginning and end.\r\n   * @default 1\r\n   */\n  boundaryCount: PropTypes.number,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The active color.\r\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n\n  /**\r\n   * The total number of pages.\r\n   * @default 1\r\n   */\n  count: PropTypes.number,\n\n  /**\r\n   * The page selected by default when the component is uncontrolled.\r\n   * @default 1\r\n   */\n  defaultPage: PropTypes.number,\n\n  /**\r\n   * If `true`, the pagination component will be disabled.\r\n   * @default false\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   *\r\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\r\n   * @param {number} page The page number to format.\r\n   * @param {bool} selected If true, the current page is selected.\r\n   * @returns {string}\r\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\r\n   * If `true`, hide the next-page button.\r\n   * @default false\r\n   */\n  hideNextButton: PropTypes.bool,\n\n  /**\r\n   * If `true`, hide the previous-page button.\r\n   * @default false\r\n   */\n  hidePrevButton: PropTypes.bool,\n\n  /**\r\n   * Callback fired when the page is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {number} page The page selected.\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * The current page.\r\n   */\n  page: PropTypes.number,\n\n  /**\r\n   * Render the item.\r\n   *\r\n   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.\r\n   * @returns {ReactNode}\r\n   */\n  renderItem: PropTypes.func,\n\n  /**\r\n   * The shape of the pagination items.\r\n   */\n  shape: PropTypes.oneOf(['round', 'rounded']),\n\n  /**\r\n   * If `true`, show the first-page button.\r\n   * @default false\r\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\r\n   * If `true`, show the last-page button.\r\n   * @default false\r\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\r\n   * Number of always visible pages before and after the current page.\r\n   * @default 1\r\n   */\n  siblingCount: PropTypes.number,\n\n  /**\r\n   * The size of the pagination component.\r\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPagination'\n})(Pagination);"],"names":["styles","root","ul","display","flexWrap","alignItems","padding","margin","listStyle","defaultGetAriaLabel","type","page","selected","Pagination","React","forwardRef","props","ref","classes","className","color","getItemAriaLabel","renderItem","item","createElement","PaginationItem","shape","size","variant","other","_objectWithoutPropertiesLoose","items","usePagination","_extends","componentName","clsx","map","index","key","process","env","NODE_ENV","propTypes","boundaryCount","PropTypes","number","object","string","oneOf","count","defaultPage","disabled","bool","func","hideNextButton","hidePrevButton","onChange","showFirstButton","showLastButton","siblingCount","withStyles","name"],"mappings":"8yBAQaA,EAAS,CAEpBC,KAAM,GAGNC,GAAI,CACFC,QAAS,OACTC,SAAU,OACVC,WAAY,SACZC,QAAS,EACTC,OAAQ,EACRC,UAAW,SAIf,SAASC,EAAoBC,EAAMC,EAAMC,GACvC,MAAa,SAATF,EACK,GAAGE,EAAW,GAAK,gBAAgBD,IAGrC,SAASD,SAGlB,MAAMG,EAA0BC,EAAMC,YAAW,SAAoBC,EAAOC,GAC1E,MAAMC,QACJA,EAAOC,UACPA,EAASC,MACTA,EAAQ,WAAUC,iBAClBA,EAAmBZ,EAAmBa,WACtCA,EAAaC,CAAAA,GAAqBT,EAAMU,cAAcC,UAAgBF,IAAKG,MAC3EA,EAAQ,QAAOC,KACfA,EAAO,SAAQC,QACfA,EAAU,QACRZ,EACEa,EAAQC,gCAA8Bd,EAAO,CAAC,gBAAiB,UAAW,YAAa,QAAS,QAAS,cAAe,WAAY,mBAAoB,iBAAkB,iBAAkB,WAAY,OAAQ,aAAc,QAAS,kBAAmB,iBAAkB,eAAgB,OAAQ,aAEpSe,MACJA,GACEC,EAAcC,WAAS,GAAIjB,EAAO,CACpCkB,cAAe,gBAEjB,OAAoBpB,EAAMU,cAAc,MAAOS,WAAS,CACtD,aAAc,wBACdd,UAAWgB,UAAKjB,EAAQjB,KAAMkB,GAC9BF,IAAKA,GACJY,GAAqBf,EAAMU,cAAc,KAAM,CAChDL,UAAWD,EAAQhB,IAClB6B,EAAMK,KAAI,CAACb,EAAMc,IAAuBvB,EAAMU,cAAc,KAAM,CACnEc,IAAKD,GACJf,EAAWW,WAAS,GAAIV,EAAM,CAC/BH,MAAAA,EACA,aAAcC,EAAiBE,EAAKb,KAAMa,EAAKZ,KAAMY,EAAKX,UAC1Dc,MAAAA,EACAC,KAAAA,EACAC,QAAAA,aAIqB,eAAzBW,QAAQC,IAAIC,WAA4B5B,EAAW6B,UAAY,CAU7DC,cAAeC,UAAUC,OAMzB3B,QAAS0B,UAAUE,OAKnB3B,UAAWyB,UAAUG,OAKrB3B,MAAOwB,UAAUI,MAAM,CAAC,UAAW,YAAa,aAMhDC,MAAOL,UAAUC,OAMjBK,YAAaN,UAAUC,OAMvBM,SAAUP,UAAUQ,KAYpB/B,iBAAkBuB,UAAUS,KAM5BC,eAAgBV,UAAUQ,KAM1BG,eAAgBX,UAAUQ,KAQ1BI,SAAUZ,UAAUS,KAKpB1C,KAAMiC,UAAUC,OAQhBvB,WAAYsB,UAAUS,KAKtB3B,MAAOkB,UAAUI,MAAM,CAAC,QAAS,YAMjCS,gBAAiBb,UAAUQ,KAM3BM,eAAgBd,UAAUQ,KAM1BO,aAAcf,UAAUC,OAKxBlB,KAAMiB,UAAUI,MAAM,CAAC,QAAS,SAAU,UAK1CpB,QAASgB,UAAUI,MAAM,CAAC,WAAY,iBAEzBY,aAAW5D,EAAQ,CAChC6D,KAAM,iBADOD,CAEZ/C"}