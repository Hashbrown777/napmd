{"version":3,"file":"TreeItem.js","sources":["../../../node_modules/@material-ui/lab/es/TreeItem/TreeItem.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { alpha, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    outline: 0,\n    WebkitTapHighlightColor: 'transparent',\n    '&:focus > $content $label': {\n      backgroundColor: theme.palette.action.hover\n    },\n    '&$selected > $content $label': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    },\n    '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Pseudo-class applied to the root element when expanded. */\n  expanded: {},\n\n  /* Pseudo-class applied to the root element when selected. */\n  selected: {},\n\n  /* Styles applied to the `role=\"group\"` element. */\n  group: {\n    margin: 0,\n    padding: 0,\n    marginLeft: 17\n  },\n\n  /* Styles applied to the tree node content. */\n  content: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer'\n  },\n\n  /* Styles applied to the tree node icon and collapse/expand icon. */\n  iconContainer: {\n    marginRight: 4,\n    width: 15,\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'center',\n    '& svg': {\n      fontSize: 18\n    }\n  },\n\n  /* Styles applied to the label element. */\n  label: {\n    width: '100%',\n    paddingLeft: 4,\n    position: 'relative',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }\n});\n\nconst isPrintableCharacter = str => {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nconst TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    collapseIcon,\n    endIcon,\n    expandIcon,\n    icon: iconProp,\n    label,\n    nodeId,\n    onClick,\n    onLabelClick,\n    onIconClick,\n    onFocus,\n    onKeyDown,\n    onMouseDown,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const {\n    icons: contextIcons,\n    focus,\n    focusFirstNode,\n    focusLastNode,\n    focusNextNode,\n    focusPreviousNode,\n    focusByFirstCharacter,\n    selectNode,\n    selectRange,\n    selectNextNode,\n    selectPreviousNode,\n    rangeSelectToFirst,\n    rangeSelectToLast,\n    selectAllNodes,\n    expandAllSiblings,\n    toggleExpansion,\n    isExpanded,\n    isFocused,\n    isSelected,\n    isTabbable,\n    multiSelect,\n    getParent,\n    mapFirstChar,\n    addNodeToNodeMap,\n    removeNodeFromNodeMap\n  } = React.useContext(TreeViewContext);\n  const nodeRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const handleRef = useForkRef(nodeRef, ref);\n  let icon = iconProp;\n  const expandable = Boolean(Array.isArray(children) ? children.length : children);\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const tabbable = isTabbable ? isTabbable(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n  const icons = contextIcons || {};\n  const theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  const handleClick = event => {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    const multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const handleMouseDown = event => {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  const handleNextArrow = event => {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  const handlePreviousArrow = event => {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    const parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  const handleKeyDown = event => {\n    let flag = false;\n    const key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    const ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleFocus = event => {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(() => {\n    if (addNodeToNodeMap) {\n      const childIds = [];\n      React.Children.forEach(children, child => {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(() => {\n    if (removeNodeFromNodeMap) {\n      return () => {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(() => {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(() => {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  let ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The icon used to collapse the node.\r\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\r\n   * The icon displayed next to a end node.\r\n   */\n  endIcon: PropTypes.node,\n\n  /**\r\n   * The icon used to expand the node.\r\n   */\n  expandIcon: PropTypes.node,\n\n  /**\r\n   * The icon to display next to the tree node's label.\r\n   */\n  icon: PropTypes.node,\n\n  /**\r\n   * The tree node label.\r\n   */\n  label: PropTypes.node,\n\n  /**\r\n   * The id of the node.\r\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  onClick: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onFocus: PropTypes.func,\n\n  /**\r\n   * `onClick` handler for the icon container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\r\n   */\n  onIconClick: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\r\n   * `onClick` handler for the label container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\r\n   */\n  onLabelClick: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\r\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);"],"names":["styles","theme","root","listStyle","margin","padding","outline","WebkitTapHighlightColor","backgroundColor","palette","action","hover","alpha","primary","main","selectedOpacity","hoverOpacity","expanded","selected","group","marginLeft","content","width","display","alignItems","cursor","iconContainer","marginRight","flexShrink","justifyContent","fontSize","label","paddingLeft","position","TreeItem","React","forwardRef","props","ref","children","classes","className","collapseIcon","endIcon","expandIcon","icon","iconProp","nodeId","onClick","onLabelClick","onIconClick","onFocus","onKeyDown","onMouseDown","TransitionComponent","Collapse","TransitionProps","other","_objectWithoutPropertiesLoose","icons","contextIcons","focus","focusFirstNode","focusLastNode","focusNextNode","focusPreviousNode","focusByFirstCharacter","selectNode","selectRange","selectNextNode","selectPreviousNode","rangeSelectToFirst","rangeSelectToLast","selectAllNodes","expandAllSiblings","toggleExpansion","isExpanded","isFocused","isSelected","isTabbable","multiSelect","getParent","mapFirstChar","addNodeToNodeMap","removeNodeFromNodeMap","useContext","TreeViewContext","nodeRef","useRef","contentRef","handleRef","useForkRef","expandable","Boolean","Array","isArray","length","focused","tabbable","useTheme","defaultCollapseIcon","defaultExpandIcon","defaultParentIcon","defaultEndIcon","handleNextArrow","event","handlePreviousArrow","parent","ariaSelected","useEffect","childIds","Children","forEach","child","isValidElement","push","current","textContent","substring","toLowerCase","createElement","_extends","clsx","role","flag","key","altKey","currentTarget","target","ctrlPressed","ctrlKey","metaKey","shiftKey","end","stopPropagation","direction","str","match","preventDefault","tabIndex","multiple","defaultPrevented","Typography","component","unmountOnExit","in","process","env","NODE_ENV","propTypes","PropTypes","node","object","string","isRequired","func","elementType","withStyles","name"],"mappings":"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"}