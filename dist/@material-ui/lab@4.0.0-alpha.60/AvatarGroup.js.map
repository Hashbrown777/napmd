{"version":3,"file":"AvatarGroup.js","sources":["../../../node_modules/@material-ui/lab/es/AvatarGroup/AvatarGroup.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { chainPropTypes } from '@material-ui/utils';\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex'\n  },\n\n  /* Styles applied to the avatar elements. */\n  avatar: {\n    border: `2px solid ${theme.palette.background.default}`,\n    marginLeft: -8,\n    '&:first-child': {\n      marginLeft: 0\n    }\n  }\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(props, ref) {\n  const {\n    children: childrenProp,\n    classes,\n    className,\n    max = 5,\n    spacing = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"max\", \"spacing\"]);\n\n  const clampedMax = max < 2 ? 2 : max;\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const extraAvatars = children.length > clampedMax ? children.length - clampedMax + 1 : 0;\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children.slice(0, children.length - extraAvatars).map((child, index) => {\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(child.props.className, classes.avatar),\n      style: _extends({\n        zIndex: children.length - index,\n        marginLeft: index === 0 ? undefined : marginLeft\n      }, child.props.style)\n    });\n  }), extraAvatars ? /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    style: {\n      zIndex: 0,\n      marginLeft\n    }\n  }, \"+\", extraAvatars) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The avatars to stack.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Max avatars to show before +x.\r\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      throw new Error(['Material-UI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n  }),\n\n  /**\r\n   * Spacing between avatars.\r\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatarGroup'\n})(AvatarGroup);"],"names":["SPACINGS","small","medium","styles","theme","root","display","avatar","border","palette","background","default","marginLeft","AvatarGroup","React","forwardRef","props","ref","children","childrenProp","classes","className","max","spacing","other","_objectWithoutPropertiesLoose","clampedMax","Children","toArray","filter","child","process","env","NODE_ENV","isFragment","console","error","join","isValidElement","extraAvatars","length","undefined","createElement","_extends","clsx","slice","map","index","cloneElement","style","zIndex","Avatar","propTypes","PropTypes","node","object","string","chainPropTypes","number","Error","oneOfType","oneOf","withStyles","name"],"mappings":"+mBASA,MAAMA,EAAW,CACfC,OAAQ,GACRC,OAAQ,MAEGC,EAASC,KAEpBC,KAAM,CACJC,QAAS,QAIXC,OAAQ,CACNC,OAAQ,aAAaJ,EAAMK,QAAQC,WAAWC,UAC9CC,YAAa,EACb,gBAAiB,CACfA,WAAY,MAIZC,EAA2BC,EAAMC,YAAW,SAAqBC,EAAOC,GAC5E,MACEC,SAAUC,EAAYC,QACtBA,EAAOC,UACPA,EAASC,IACTA,EAAM,EAACC,QACPA,EAAU,UACRP,EACEQ,EAAQC,gCAA8BT,EAAO,CAAC,WAAY,UAAW,YAAa,MAAO,YAEzFU,EAAaJ,EAAM,EAAI,EAAIA,EAC3BJ,EAAWJ,EAAMa,SAASC,QAAQT,GAAcU,QAAOC,IAC9B,eAAzBC,QAAQC,IAAIC,UACVC,aAAWJ,IACbK,QAAQC,MAAM,CAAC,+EAAgF,wCAAwCC,KAAK,OAI5HvB,EAAMwB,eAAeR,MAErCS,EAAerB,EAASsB,OAASd,EAAaR,EAASsB,OAASd,EAAa,EAAI,EACjFd,EAAaW,QAAiCkB,IAAtBzC,EAASuB,GAAyBvB,EAASuB,IAAYA,EACrF,OAAoBT,EAAM4B,cAAc,MAAOC,WAAS,CACtDtB,UAAWuB,UAAKxB,EAAQf,KAAMgB,GAC9BJ,IAAKA,GACJO,GAAQN,EAAS2B,MAAM,EAAG3B,EAASsB,OAASD,GAAcO,KAAI,CAAChB,EAAOiB,IACnDjC,EAAMkC,aAAalB,EAAO,CAC5CT,UAAWuB,UAAKd,EAAMd,MAAMK,UAAWD,EAAQb,QAC/C0C,MAAON,WAAS,CACdO,OAAQhC,EAASsB,OAASO,EAC1BnC,WAAsB,IAAVmC,OAAcN,EAAY7B,GACrCkB,EAAMd,MAAMiC,WAEfV,EAA4BzB,EAAM4B,cAAcS,UAAQ,CAC1D9B,UAAWD,EAAQb,OACnB0C,MAAO,CACLC,OAAQ,EACRtC,WAAAA,IAED,IAAK2B,GAAgB,SAED,eAAzBR,QAAQC,IAAIC,WAA4BpB,EAAYuC,UAAY,CAS9DlC,SAAUmC,UAAUC,KAMpBlC,QAASiC,UAAUE,OAKnBlC,UAAWgC,UAAUG,OAKrBlC,IAAKmC,iBAAeJ,UAAUK,QAAQ1C,IACpC,GAAIA,EAAMM,IAAM,EACd,MAAM,IAAIqC,MAAM,CAAC,6DAA8D,kCAAkCtB,KAAK,UAO1Hd,QAAS8B,UAAUO,UAAU,CAACP,UAAUQ,MAAM,CAAC,SAAU,UAAWR,UAAUK,iBAEjEI,aAAW3D,EAAQ,CAChC4D,KAAM,kBADOD,CAEZjD"}