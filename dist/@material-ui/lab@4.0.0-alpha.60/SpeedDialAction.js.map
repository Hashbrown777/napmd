{"version":3,"file":"SpeedDialAction.js","sources":["../../../node_modules/@material-ui/lab/es/SpeedDialAction/SpeedDialAction.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent Tooltip\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { capitalize } from '@material-ui/core/utils';\nexport const styles = theme => ({\n  /* Styles applied to the Fab component. */\n  fab: {\n    margin: 8,\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.background.paper,\n    '&:hover': {\n      backgroundColor: emphasize(theme.palette.background.paper, 0.15)\n    },\n    transition: `${theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shorter\n    })}, opacity 0.8s`,\n    opacity: 1\n  },\n\n  /* Styles applied to the Fab component if `open={false}`. */\n  fabClosed: {\n    opacity: 0,\n    transform: 'scale(0)'\n  },\n\n  /* Styles applied to the root element if `tooltipOpen={true}`. */\n  staticTooltip: {\n    position: 'relative',\n    display: 'flex',\n    '& $staticTooltipLabel': {\n      transition: theme.transitions.create(['transform', 'opacity'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      opacity: 1\n    }\n  },\n\n  /* Styles applied to the root element if `tooltipOpen={true}` and `open={false}`. */\n  staticTooltipClosed: {\n    '& $staticTooltipLabel': {\n      opacity: 0,\n      transform: 'scale(0.5)'\n    }\n  },\n\n  /* Styles applied to the static tooltip label if `tooltipOpen={true}`. */\n  staticTooltipLabel: _extends({\n    position: 'absolute'\n  }, theme.typography.body1, {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[1],\n    color: theme.palette.text.secondary,\n    padding: '4px 16px',\n    wordBreak: 'keep-all'\n  }),\n\n  /* Styles applied to the root if `tooltipOpen={true}` and `tooltipPlacement=\"left\"`` */\n  tooltipPlacementLeft: {\n    alignItems: 'center',\n    '& $staticTooltipLabel': {\n      transformOrigin: '100% 50%',\n      right: '100%',\n      marginRight: 8\n    }\n  },\n\n  /* Styles applied to the root if `tooltipOpen={true}` and `tooltipPlacement=\"right\"`` */\n  tooltipPlacementRight: {\n    alignItems: 'center',\n    '& $staticTooltipLabel': {\n      transformOrigin: '0% 50%',\n      left: '100%',\n      marginLeft: 8\n    }\n  }\n});\nconst SpeedDialAction = /*#__PURE__*/React.forwardRef(function SpeedDialAction(props, ref) {\n  const {\n    classes,\n    className,\n    delay = 0,\n    FabProps = {},\n    icon,\n    id,\n    open,\n    TooltipClasses,\n    tooltipOpen: tooltipOpenProp = false,\n    tooltipPlacement = 'left',\n    tooltipTitle\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"delay\", \"FabProps\", \"icon\", \"id\", \"open\", \"TooltipClasses\", \"tooltipOpen\", \"tooltipPlacement\", \"tooltipTitle\"]);\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(tooltipOpenProp);\n\n  const handleTooltipClose = () => {\n    setTooltipOpen(false);\n  };\n\n  const handleTooltipOpen = () => {\n    setTooltipOpen(true);\n  };\n\n  const transitionStyle = {\n    transitionDelay: `${delay}ms`\n  };\n  const fab = /*#__PURE__*/React.createElement(Fab, _extends({\n    size: \"small\",\n    className: clsx(classes.fab, className, !open && classes.fabClosed),\n    tabIndex: -1,\n    role: \"menuitem\",\n    \"aria-describedby\": `${id}-label`\n  }, FabProps, {\n    style: _extends({}, transitionStyle, FabProps.style)\n  }), icon);\n\n  if (tooltipOpenProp) {\n    return /*#__PURE__*/React.createElement(\"span\", _extends({\n      id: id,\n      ref: ref,\n      className: clsx(classes.staticTooltip, classes[`tooltipPlacement${capitalize(tooltipPlacement)}`], !open && classes.staticTooltipClosed)\n    }, other), /*#__PURE__*/React.createElement(\"span\", {\n      style: transitionStyle,\n      id: `${id}-label`,\n      className: classes.staticTooltipLabel\n    }, tooltipTitle), fab);\n  }\n\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({\n    id: id,\n    ref: ref,\n    title: tooltipTitle,\n    placement: tooltipPlacement,\n    onClose: handleTooltipClose,\n    onOpen: handleTooltipOpen,\n    open: open && tooltipOpen,\n    classes: TooltipClasses\n  }, other), fab);\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.\r\n   */\n  delay: PropTypes.number,\n\n  /**\r\n   * Props applied to the [`Fab`](/api/fab/) component.\r\n   */\n  FabProps: PropTypes.object,\n\n  /**\r\n   * The Icon to display in the SpeedDial Fab.\r\n   */\n  icon: PropTypes.node,\n\n  /**\r\n   * This prop is used to help implement the accessibility logic.\r\n   * If you don't provide this prop. It falls back to a randomly generated id.\r\n   */\n  id: PropTypes.string,\n\n  /**\r\n   * If `true`, the tooltip is shown.\r\n   */\n  open: PropTypes.bool,\n\n  /**\r\n   * `classes` prop applied to the [`Tooltip`](/api/tooltip/) element.\r\n   */\n  TooltipClasses: PropTypes.object,\n\n  /**\r\n   * Make the tooltip always visible when the SpeedDial is open.\r\n   */\n  tooltipOpen: PropTypes.bool,\n\n  /**\r\n   * Placement of the tooltip.\r\n   */\n  tooltipPlacement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\r\n   * Label to display in the tooltip.\r\n   */\n  tooltipTitle: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSpeedDialAction'\n})(SpeedDialAction);"],"names":["styles","theme","fab","margin","color","palette","text","secondary","backgroundColor","background","paper","emphasize","transition","transitions","create","duration","shorter","opacity","fabClosed","transform","staticTooltip","position","display","staticTooltipClosed","staticTooltipLabel","_extends","typography","body1","borderRadius","shape","boxShadow","shadows","padding","wordBreak","tooltipPlacementLeft","alignItems","transformOrigin","right","marginRight","tooltipPlacementRight","left","marginLeft","SpeedDialAction","React","forwardRef","props","ref","classes","className","delay","FabProps","icon","id","open","TooltipClasses","tooltipOpen","tooltipOpenProp","tooltipPlacement","tooltipTitle","other","_objectWithoutPropertiesLoose","setTooltipOpen","useState","transitionStyle","transitionDelay","createElement","Fab","size","clsx","tabIndex","role","style","capitalize","Tooltip","title","placement","onClose","onOpen","process","env","NODE_ENV","propTypes","PropTypes","object","string","number","node","bool","oneOf","withStyles","name"],"mappings":"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"}