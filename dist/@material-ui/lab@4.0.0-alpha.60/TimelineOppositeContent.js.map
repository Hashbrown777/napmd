{"version":3,"file":"TimelineOppositeContent.js","sources":["../../../node_modules/@material-ui/lab/es/TimelineOppositeContent/TimelineOppositeContent.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from '../Timeline/TimelineContext';\nimport TimelineItemContext from '../TimelineItem/TimelineItemContext';\nexport const styles = () => ({\n  /* Styles applied to the root element. */\n  root: {\n    padding: '6px 16px',\n    marginRight: 'auto',\n    textAlign: 'right',\n    flex: 1\n  },\n\n  /* Styles applied to the root element if `align=\"right\"`. */\n  alignRight: {\n    textAlign: 'left'\n  }\n});\nconst TimelineOppositeContent = /*#__PURE__*/React.forwardRef(function TimelineOppositeContent(props, ref) {\n  const {\n    classes,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\"]);\n\n  const {\n    align = 'left'\n  } = React.useContext(TimelineContext);\n  const {\n    classes: contextClasses = {}\n  } = React.useContext(TimelineItemContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, contextClasses.oppositeContent, classes[`align${capitalize(align)}`], className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineOppositeContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string\n} : void 0;\nTimelineOppositeContent.muiName = 'TimelineOppositeContent';\nexport default withStyles(styles, {\n  name: 'MuiTimelineOppositeContent'\n})(TimelineOppositeContent);"],"names":["styles","root","padding","marginRight","textAlign","flex","alignRight","TimelineOppositeContent","React","forwardRef","props","ref","classes","className","other","_objectWithoutPropertiesLoose","align","useContext","TimelineContext","contextClasses","TimelineItemContext","createElement","_extends","clsx","oppositeContent","capitalize","process","env","NODE_ENV","propTypes","children","PropTypes","node","object","string","muiName","withStyles","name"],"mappings":"4oBASaA,EAAS,MAEpBC,KAAM,CACJC,QAAS,WACTC,YAAa,OACbC,UAAW,QACXC,KAAM,GAIRC,WAAY,CACVF,UAAW,UAGTG,EAAuCC,EAAMC,YAAW,SAAiCC,EAAOC,GACpG,MAAMC,QACJA,EAAOC,UACPA,GACEH,EACEI,EAAQC,gCAA8BL,EAAO,CAAC,UAAW,eAEzDM,MACJA,EAAQ,QACNR,EAAMS,WAAWC,IAEnBN,QAASO,EAAiB,IACxBX,EAAMS,WAAWG,GACrB,OAAoBZ,EAAMa,cAAc,MAAOC,WAAS,CACtDT,UAAWU,UAAKX,EAAQX,KAAMkB,EAAeK,gBAAiBZ,EAAQ,QAAQa,aAAWT,MAAWH,GACpGF,IAAKA,GACJG,OAEoB,eAAzBY,QAAQC,IAAIC,WAA4BrB,EAAwBsB,UAAY,CAS1EC,SAAUC,UAAUC,KAMpBpB,QAASmB,UAAUE,OAKnBpB,UAAWkB,UAAUG,SAEvB3B,EAAwB4B,QAAU,gCACnBC,aAAWpC,EAAQ,CAChCqC,KAAM,8BADOD,CAEZ7B"}