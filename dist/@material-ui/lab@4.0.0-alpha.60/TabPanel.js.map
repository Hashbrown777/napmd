{"version":3,"file":"TabPanel.js","sources":["../../../node_modules/@material-ui/lab/es/TabPanel/TabPanel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nexport const styles = theme => {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      padding: theme.spacing(3)\n    }\n  };\n};\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(props, ref) {\n  const {\n    children,\n    className,\n    classes,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"classes\", \"value\"]);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\"\n  }, other), value === context.value && children);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\r\n   * no `value` was passed to `Tab`.\r\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabPanel'\n})(TabPanel);"],"names":["styles","theme","root","padding","spacing","TabPanel","React","forwardRef","props","ref","children","className","classes","value","other","_objectWithoutPropertiesLoose","context","useTabContext","TypeError","id","getPanelId","tabId","getTabId","createElement","_extends","clsx","hidden","role","process","env","NODE_ENV","propTypes","PropTypes","node","object","string","isRequired","withStyles","name"],"mappings":"2jBAOaA,EAASC,IACb,CAELC,KAAM,CACJC,QAASF,EAAMG,QAAQ,MAIvBC,EAAwBC,EAAMC,YAAW,SAAkBC,EAAOC,GACtE,MAAMC,SACJA,EAAQC,UACRA,EAASC,QACTA,EAAOC,MACPA,GACEL,EACEM,EAAQC,gCAA8BP,EAAO,CAAC,WAAY,YAAa,UAAW,UAElFQ,EAAUC,kBAEhB,GAAgB,OAAZD,EACF,MAAM,IAAIE,UAAU,0BAGtB,MAAMC,EAAKC,aAAWJ,EAASH,GACzBQ,EAAQC,WAASN,EAASH,GAChC,OAAoBP,EAAMiB,cAAc,MAAOC,WAAS,CACtD,kBAAmBH,EACnBV,UAAWc,UAAKb,EAAQV,KAAMS,GAC9Be,OAAQb,IAAUG,EAAQH,MAC1BM,GAAIA,EACJV,IAAKA,EACLkB,KAAM,YACLb,GAAQD,IAAUG,EAAQH,OAASH,MAEf,eAAzBkB,QAAQC,IAAIC,WAA4BzB,EAAS0B,UAAY,CAS3DrB,SAAUsB,UAAUC,KAMpBrB,QAASoB,UAAUE,OAKnBvB,UAAWqB,UAAUG,OAMrBtB,MAAOmB,UAAUG,OAAOC,mBAEXC,aAAWrC,EAAQ,CAChCsC,KAAM,eADOD,CAEZhC"}