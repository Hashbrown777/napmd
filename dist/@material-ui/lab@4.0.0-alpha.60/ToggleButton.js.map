{"version":3,"file":"ToggleButton.js","sources":["../../../node_modules/@material-ui/lab/es/ToggleButton/ToggleButton.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { alpha, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({}, theme.typography.button, {\n    boxSizing: 'border-box',\n    borderRadius: theme.shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${alpha(theme.palette.action.active, 0.12)}`,\n    color: alpha(theme.palette.action.active, 0.38),\n    '&$selected': {\n      color: theme.palette.action.active,\n      backgroundColor: alpha(theme.palette.action.active, 0.12),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.action.active, 0.15)\n      },\n      '& + &': {\n        borderLeft: 0,\n        marginLeft: 0\n      }\n    },\n    '&$disabled': {\n      color: alpha(theme.palette.action.disabled, 0.12)\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: alpha(theme.palette.text.primary, 0.05),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }),\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if `selected={true}`. */\n  selected: {},\n\n  /* Styles applied to the `label` wrapper element. */\n  label: {\n    width: '100%',\n    // Ensure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit'\n  },\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"`. */\n  sizeLarge: {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  }\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    disabled = false,\n    disableFocusRipple = false,\n    onChange,\n    onClick,\n    selected,\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[`size${capitalize(size)}`]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    \"aria-pressed\": selected\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes = {\n  /**\r\n   * The content of the button.\r\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the  keyboard focus ripple will be disabled.\r\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\r\n   * If `true`, the ripple effect will be disabled.\r\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onClick: PropTypes.func,\n\n  /**\r\n   * If `true`, the button will be rendered in an active state.\r\n   */\n  selected: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\r\n   * The value to associate with the button when selected in a\r\n   * ToggleButtonGroup.\r\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);"],"names":["styles","theme","root","_extends","typography","button","boxSizing","borderRadius","shape","padding","border","alpha","palette","action","active","color","backgroundColor","borderLeft","marginLeft","disabled","textDecoration","text","primary","selected","label","width","display","alignItems","justifyContent","sizeSmall","fontSize","pxToRem","sizeLarge","ToggleButton","React","forwardRef","props","ref","children","classes","className","disableFocusRipple","onChange","onClick","size","value","other","_objectWithoutPropertiesLoose","createElement","ButtonBase","clsx","capitalize","focusRipple","event","isDefaultPrevented","process","env","NODE_ENV","propTypes","PropTypes","node","isRequired","object","string","bool","disableRipple","func","oneOf","any","withStyles","name"],"mappings":"8mBASaA,EAASC,KAEpBC,KAAMC,WAAS,GAAIF,EAAMG,WAAWC,OAAQ,CAC1CC,UAAW,aACXC,aAAcN,EAAMO,MAAMD,aAC1BE,QAAS,GACTC,OAAQ,aAAaC,QAAMV,EAAMW,QAAQC,OAAOC,OAAQ,OACxDC,MAAOJ,QAAMV,EAAMW,QAAQC,OAAOC,OAAQ,KAC1C,aAAc,CACZC,MAAOd,EAAMW,QAAQC,OAAOC,OAC5BE,gBAAiBL,QAAMV,EAAMW,QAAQC,OAAOC,OAAQ,KACpD,UAAW,CACTE,gBAAiBL,QAAMV,EAAMW,QAAQC,OAAOC,OAAQ,MAEtD,QAAS,CACPG,WAAY,EACZC,WAAY,IAGhB,aAAc,CACZH,MAAOJ,QAAMV,EAAMW,QAAQC,OAAOM,SAAU,MAE9C,UAAW,CACTC,eAAgB,OAEhBJ,gBAAiBL,QAAMV,EAAMW,QAAQS,KAAKC,QAAS,KACnD,uBAAwB,CACtBN,gBAAiB,eAEnB,aAAc,CACZA,gBAAiB,kBAMvBG,SAAU,GAGVI,SAAU,GAGVC,MAAO,CACLC,MAAO,OAEPC,QAAS,UACTC,WAAY,UACZC,eAAgB,WAIlBC,UAAW,CACTpB,QAAS,EACTqB,SAAU7B,EAAMG,WAAW2B,QAAQ,KAIrCC,UAAW,CACTvB,QAAS,GACTqB,SAAU7B,EAAMG,WAAW2B,QAAQ,OAGjCE,EAA4BC,EAAMC,YAAW,SAAsBC,EAAOC,GAC9E,MAAMC,SACJA,EAAQC,QACRA,EAAOC,UACPA,EAASrB,SACTA,GAAW,EAAKsB,mBAChBA,GAAqB,EAAKC,SAC1BA,EAAQC,QACRA,EAAOpB,SACPA,EAAQqB,KACRA,EAAO,SAAQC,MACfA,GACET,EACEU,EAAQC,gCAA8BX,EAAO,CAAC,WAAY,UAAW,YAAa,WAAY,qBAAsB,WAAY,UAAW,WAAY,OAAQ,UAgBrK,OAAoBF,EAAMc,cAAcC,UAAY9C,WAAS,CAC3DqC,UAAWU,UAAKX,EAAQrC,KAAMsC,EAAWrB,GAAYoB,EAAQpB,SAAUI,GAAYgB,EAAQhB,SAAmB,WAATqB,GAAqBL,EAAQ,OAAOY,aAAWP,OACpJzB,SAAUA,EACViC,aAAcX,EACdJ,IAAKA,EACLM,QAnBmBU,IACfV,IACFA,EAAQU,EAAOR,GAEXQ,EAAMC,uBAKRZ,GACFA,EAASW,EAAOR,IAUlBH,SAAUA,EACVG,MAAOA,EACP,eAAgBtB,GACfuB,GAAqBZ,EAAMc,cAAc,OAAQ,CAClDR,UAAWD,EAAQf,OAClBc,OAEoB,eAAzBiB,QAAQC,IAAIC,WAA4BxB,EAAayB,UAAY,CAI/DpB,SAAUqB,UAAUC,KAAKC,WAMzBtB,QAASoB,UAAUG,OAAOD,WAK1BrB,UAAWmB,UAAUI,OAKrB5C,SAAUwC,UAAUK,KAKpBvB,mBAAoBkB,UAAUK,KAK9BC,cAAeN,UAAUK,KAKzBtB,SAAUiB,UAAUO,KAKpBvB,QAASgB,UAAUO,KAKnB3C,SAAUoC,UAAUK,KAKpBpB,KAAMe,UAAUQ,MAAM,CAAC,QAAS,SAAU,UAM1CtB,MAAOc,UAAUS,IAAIP,mBAERQ,aAAWrE,EAAQ,CAChCsE,KAAM,mBADOD,CAEZpC"}