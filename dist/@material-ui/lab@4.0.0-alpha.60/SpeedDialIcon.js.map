{"version":3,"file":"SpeedDialIcon.js","sources":["../../../node_modules/@material-ui/lab/es/SpeedDialIcon/SpeedDialIcon.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddIcon from '../internal/svg-icons/Add';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    height: 24\n  },\n\n  /* Styles applied to the icon component. */\n  icon: {\n    transition: theme.transitions.create(['transform', 'opacity'], {\n      duration: theme.transitions.duration.short\n    })\n  },\n\n  /* Styles applied to the icon component if `open={true}`. */\n  iconOpen: {\n    transform: 'rotate(45deg)'\n  },\n\n  /* Styles applied to the icon when and `openIcon` is provided and if `open={true}`. */\n  iconWithOpenIconOpen: {\n    opacity: 0\n  },\n\n  /* Styles applied to the `openIcon` if provided. */\n  openIcon: {\n    position: 'absolute',\n    transition: theme.transitions.create(['transform', 'opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    transform: 'rotate(-45deg)'\n  },\n\n  /* Styles applied to the `openIcon` if provided and if `open={true}`. */\n  openIconOpen: {\n    transform: 'rotate(0deg)',\n    opacity: 1\n  }\n});\nconst SpeedDialIcon = /*#__PURE__*/React.forwardRef(function SpeedDialIcon(props, ref) {\n  const {\n    className,\n    classes,\n    icon: iconProp,\n    open,\n    openIcon: openIconProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"classes\", \"icon\", \"open\", \"openIcon\"]);\n\n  const iconClassName = clsx(classes.icon, open && [classes.iconOpen, openIconProp && classes.iconWithOpenIconOpen]);\n  const openIconClassName = clsx(classes.openIcon, open && classes.openIconOpen);\n\n  function formatIcon(icon, newClassName) {\n    if ( /*#__PURE__*/React.isValidElement(icon)) {\n      return /*#__PURE__*/React.cloneElement(icon, {\n        className: newClassName\n      });\n    }\n\n    return icon;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), openIconProp ? formatIcon(openIconProp, openIconClassName) : null, iconProp ? formatIcon(iconProp, iconClassName) : /*#__PURE__*/React.createElement(AddIcon, {\n    className: iconClassName\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The icon to display in the SpeedDial Floating Action Button.\r\n   */\n  icon: PropTypes.node,\n\n  /**\r\n   * @ignore\r\n   * If `true`, the SpeedDial is open.\r\n   */\n  open: PropTypes.bool,\n\n  /**\r\n   * The icon to display in the SpeedDial Floating Action Button when the SpeedDial is open.\r\n   */\n  openIcon: PropTypes.node\n} : void 0;\nSpeedDialIcon.muiName = 'SpeedDialIcon';\nexport default withStyles(styles, {\n  name: 'MuiSpeedDialIcon'\n})(SpeedDialIcon);"],"names":["styles","theme","root","height","icon","transition","transitions","create","duration","short","iconOpen","transform","iconWithOpenIconOpen","opacity","openIcon","position","openIconOpen","SpeedDialIcon","React","forwardRef","props","ref","className","classes","iconProp","open","openIconProp","other","_objectWithoutPropertiesLoose","iconClassName","clsx","openIconClassName","formatIcon","newClassName","isValidElement","cloneElement","createElement","_extends","AddIcon","process","env","NODE_ENV","propTypes","PropTypes","object","string","node","bool","muiName","withStyles","name"],"mappings":"mmBAOaA,EAASC,KAEpBC,KAAM,CACJC,OAAQ,IAIVC,KAAM,CACJC,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,YAAa,WAAY,CAC7DC,SAAUP,EAAMK,YAAYE,SAASC,SAKzCC,SAAU,CACRC,UAAW,iBAIbC,qBAAsB,CACpBC,QAAS,GAIXC,SAAU,CACRC,SAAU,WACVV,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,YAAa,WAAY,CAC7DC,SAAUP,EAAMK,YAAYE,SAASC,QAEvCI,QAAS,EACTF,UAAW,kBAIbK,aAAc,CACZL,UAAW,eACXE,QAAS,KAGPI,EAA6BC,EAAMC,YAAW,SAAuBC,EAAOC,GAChF,MAAMC,UACJA,EAASC,QACTA,EACAnB,KAAMoB,EAAQC,KACdA,EACAX,SAAUY,GACRN,EACEO,EAAQC,gCAA8BR,EAAO,CAAC,YAAa,UAAW,OAAQ,OAAQ,aAEtFS,EAAgBC,UAAKP,EAAQnB,KAAMqB,GAAQ,CAACF,EAAQb,SAAUgB,GAAgBH,EAAQX,uBACtFmB,EAAoBD,UAAKP,EAAQT,SAAUW,GAAQF,EAAQP,cAEjE,SAASgB,EAAW5B,EAAM6B,GACxB,OAAkBf,EAAMgB,eAAe9B,GACjBc,EAAMiB,aAAa/B,EAAM,CAC3CkB,UAAWW,IAIR7B,EAGT,OAAoBc,EAAMkB,cAAc,OAAQC,WAAS,CACvDf,UAAWQ,UAAKP,EAAQrB,KAAMoB,GAC9BD,IAAKA,GACJM,GAAQD,EAAeM,EAAWN,EAAcK,GAAqB,KAAMP,EAAWQ,EAAWR,EAAUK,GAA8BX,EAAMkB,cAAcE,EAAS,CACvKhB,UAAWO,QAGU,eAAzBU,QAAQC,IAAIC,WAA4BxB,EAAcyB,UAAY,CAUhEnB,QAASoB,UAAUC,OAKnBtB,UAAWqB,UAAUE,OAKrBzC,KAAMuC,UAAUG,KAMhBrB,KAAMkB,UAAUI,KAKhBjC,SAAU6B,UAAUG,OAEtB7B,EAAc+B,QAAU,sBACTC,aAAWjD,EAAQ,CAChCkD,KAAM,oBADOD,CAEZhC"}