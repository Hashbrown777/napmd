{"version":3,"file":"useAutocomplete.js","sources":["../../../node_modules/@material-ui/lab/es/useAutocomplete/useAutocomplete.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    debug = false,\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => option,\n    getOptionSelected = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  if (process.env.NODE_ENV !== 'production') {\n    getOptionLabel = option => {\n      const optionLabel = getOptionLabelProp(option);\n\n      if (typeof optionLabel !== 'string') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`Material-UI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return optionLabel;\n    };\n  }\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValue] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = useEventCallback((event, newValue) => {\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(() => {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && getOptionSelected(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => getOptionSelected(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`Material-UI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => getOptionSelected(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => getOptionSelected(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  filteredOptions.length === 0, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValue(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'select-option', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => getOptionSelected(option, val));\n\n        if (matches.length > 1) {\n          console.error([`Material-UI: The \\`getOptionSelected\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => getOptionSelected(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    switch (event.key) {\n      case 'Home':\n        if (popupOpen && handleHomeEndKeys) {\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 'start',\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n        }\n\n        break;\n\n      case 'End':\n        if (popupOpen && handleHomeEndKeys) {\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 'end',\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n        }\n\n        break;\n\n      case 'PageUp':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex({\n          diff: -pageSize,\n          direction: 'previous',\n          reason: 'keyboard',\n          event\n        });\n        handleOpen(event);\n        break;\n\n      case 'PageDown':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex({\n          diff: pageSize,\n          direction: 'next',\n          reason: 'keyboard',\n          event\n        });\n        handleOpen(event);\n        break;\n\n      case 'ArrowDown':\n        // Prevent cursor move\n        event.preventDefault();\n        changeHighlightedIndex({\n          diff: 1,\n          direction: 'next',\n          reason: 'keyboard',\n          event\n        });\n        handleOpen(event);\n        break;\n\n      case 'ArrowUp':\n        // Prevent cursor move\n        event.preventDefault();\n        changeHighlightedIndex({\n          diff: -1,\n          direction: 'previous',\n          reason: 'keyboard',\n          event\n        });\n        handleOpen(event);\n        break;\n\n      case 'ArrowLeft':\n        handleFocusTag(event, 'previous');\n        break;\n\n      case 'ArrowRight':\n        handleFocusTag(event, 'next');\n        break;\n\n      case 'Enter':\n        // Wait until IME is settled.\n        if (event.which === 229) {\n          break;\n        }\n\n        if (highlightedIndexRef.current !== -1 && popupOpen) {\n          const option = filteredOptions[highlightedIndexRef.current];\n          const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // We don't want to validate the form.\n\n          event.preventDefault();\n\n          if (disabled) {\n            return;\n          }\n\n          selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n          if (autoComplete) {\n            inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n          }\n        } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n          if (multiple) {\n            // Allow people to add new values before they submit the form.\n            event.preventDefault();\n          }\n\n          selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n        }\n\n        break;\n\n      case 'Escape':\n        if (popupOpen) {\n          // Avoid Opera to exit fullscreen mode.\n          event.preventDefault(); // Avoid the Modal to handle the event.\n\n          event.stopPropagation();\n          handleClose(event, 'escape');\n        } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n          // Avoid Opera to exit fullscreen mode.\n          event.preventDefault(); // Avoid the Modal to handle the event.\n\n          event.stopPropagation();\n          handleClear(event);\n        }\n\n        break;\n\n      case 'Backspace':\n        if (multiple && inputValue === '' && value.length > 0) {\n          const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n          const newValue = value.slice();\n          newValue.splice(index, 1);\n          handleValue(event, newValue, 'remove-option', {\n            option: value[index]\n          });\n        }\n\n        break;\n\n      default:\n    }\n\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'remove-option', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`Material-UI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': popupOpen ? `${id}-popup` : null,\n      role: 'combobox',\n      'aria-expanded': popupOpen\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': popupOpen ? `${id}-popup` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-popup`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && getOptionSelected(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}"],"names":["stripDiacritics","string","normalize","replace","createFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","length","defaultFilterOptions","props","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","debug","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","getOptionSelected","value","groupBy","handleHomeEndKeys","id","idProp","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","open","openProp","openOnFocus","selectOnFocus","valueProp","useId","process","env","NODE_ENV","optionLabel","erroneousReturn","undefined","console","error","JSON","ignoreFocus","React","useRef","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","useState","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setValue","useControlled","controlled","default","name","setInputValue","state","focused","setFocused","resetInputValue","useEventCallback","event","newValue","newInputValue","useEffect","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","missingValue","warn","join","focusTag","tagToFocus","current","focus","querySelector","setHighlightedIndex","index","reason","removeAttribute","setAttribute","prev","listboxNode","parentElement","scrollTop","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","useCallback","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","matches","push","splice","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","key","preventDefault","which","stopPropagation","onKeyDown","handleFocus","handleBlur","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","indexBy","Map","reduce","acc","group","get","set","getRootProps","_extends","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart"],"mappings":"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"}