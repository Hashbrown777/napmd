{"version":3,"file":"Paper.js","sources":["../../../node_modules/@material-ui/core/es/Paper/Paper.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => {\n  const elevations = {};\n  theme.shadows.forEach((shadow, index) => {\n    elevations[`elevation${index}`] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: `1px solid ${theme.palette.divider}`\n    }\n  }, elevations);\n};\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div',\n    square = false,\n    elevation = 1,\n    variant = 'elevation'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[`elevation${elevation}`], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, props => {\n    const {\n      classes,\n      elevation\n    } = props; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[`elevation${elevation}`] === undefined) {\n      return new Error(`Material-UI: This elevation \\`${elevation}\\` is not implemented.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);"],"names":["styles","theme","elevations","shadows","forEach","shadow","index","boxShadow","_extends","root","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","rounded","borderRadius","shape","outlined","border","divider","Paper","React","forwardRef","props","ref","classes","className","component","Component","square","elevation","variant","other","_objectWithoutPropertiesLoose","createElement","clsx","process","env","NODE_ENV","propTypes","children","PropTypes","node","object","string","elementType","chainPropTypes","number","undefined","Error","bool","oneOf","withStyles","name"],"mappings":"wjCAOaA,EAASC,IACpB,MAAMC,EAAa,GAMnB,OALAD,EAAME,QAAQC,SAAQ,CAACC,EAAQC,KAC7BJ,EAAW,YAAYI,KAAW,CAChCC,UAAWF,MAGRG,WAAS,CAEdC,KAAM,CACJC,gBAAiBT,EAAMU,QAAQC,WAAWC,MAC1CC,MAAOb,EAAMU,QAAQI,KAAKC,QAC1BC,WAAYhB,EAAMiB,YAAYC,OAAO,eAIvCC,QAAS,CACPC,aAAcpB,EAAMqB,MAAMD,cAI5BE,SAAU,CACRC,OAAQ,aAAavB,EAAMU,QAAQc,YAEpCvB,IAECwB,EAAqBC,EAAMC,YAAW,SAAeC,EAAOC,GAChE,MAAMC,QACJA,EAAOC,UACPA,EACAC,UAAWC,EAAY,MAAKC,OAC5BA,GAAS,EAAKC,UACdA,EAAY,EAACC,QACbA,EAAU,aACRR,EACES,EAAQC,gCAA8BV,EAAO,CAAC,UAAW,YAAa,YAAa,SAAU,YAAa,YAEhH,OAAoBF,EAAMa,cAAcN,EAAW1B,WAAS,CAC1DwB,UAAWS,UAAKV,EAAQtB,KAAMuB,EAAuB,aAAZK,EAAyBN,EAAQR,SAAWQ,EAAQ,YAAYK,MAAeD,GAAUJ,EAAQX,SAC1IU,IAAKA,GACJQ,OAEoB,eAAzBI,QAAQC,IAAIC,WAA4BlB,EAAMmB,UAAY,CASxDC,SAAUC,UAAUC,KAMpBjB,QAASgB,UAAUE,OAKnBjB,UAAWe,UAAUG,OAMrBjB,UAAWc,UAEVI,YAMDf,UAAWgB,iBAAeL,UAAUM,QAAQxB,IAC1C,MAAME,QACJA,EAAOK,UACPA,GACEP,EAEJ,YAAgByB,IAAZvB,EACK,KAGQ,MAAbK,QAA0DkB,IAArCvB,EAAQ,YAAYK,KACpC,IAAImB,MAAM,iCAAiCnB,2BAG7C,QAMTD,OAAQY,UAAUS,KAKlBnB,QAASU,UAAUU,MAAM,CAAC,YAAa,qBAE1BC,EAAW1D,EAAQ,CAChC2D,KAAM,YADOD,CAEZhC"}