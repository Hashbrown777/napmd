{"version":3,"file":"ImageList.js","sources":["../../../node_modules/@material-ui/core/es/ImageList/ImageList.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflowY: 'auto',\n    listStyle: 'none',\n    padding: 0,\n    WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n  }\n};\nconst ImageList = /*#__PURE__*/React.forwardRef(function ImageList(props, ref) {\n  const {\n    cellHeight,\n    children,\n    classes,\n    className,\n    cols = 2,\n    component: Component = 'ul',\n    gap: gapProp = 4,\n    rowHeight: rowHeightProp = 180,\n    spacing,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"cellHeight\", \"children\", \"classes\", \"className\", \"cols\", \"component\", \"gap\", \"rowHeight\", \"spacing\", \"style\"]);\n\n  const gap = spacing || gapProp;\n  const rowHeight = cellHeight || rowHeightProp;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    style: _extends({\n      margin: -gap / 2\n    }, style)\n  }, other), React.Children.map(children, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ImageList component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childCols = child.props.cols || 1;\n    const childRows = child.props.rows || 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      style: _extends({\n        width: `${100 / cols * childCols}%`,\n        height: rowHeight === 'auto' ? 'auto' : rowHeight * childRows + gap,\n        padding: gap / 2\n      }, child.props.style)\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ImageList.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Cell height in `px`.\n   * Set to `'auto'` to let the children determine the height.\n   * @deprecated Use rowHeight instead.\n   */\n  cellHeight: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]), 'Use the `rowHeight` prop instead.'),\n\n  /**\n   * Items that will be in the image list.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   */\n  cols: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The gap between items in `px`.\n   */\n  gap: PropTypes.number,\n\n  /**\n   * The height of one row in `px`.\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n\n  /**\n   * The spacing between items in `px`.\n   * @deprecated Use gap instead.\n   */\n  spacing: deprecatedPropType(PropTypes.number, 'Use the `gap` prop instead.'),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiImageList'\n})(ImageList);"],"names":["styles","root","display","flexWrap","overflowY","listStyle","padding","WebkitOverflowScrolling","ImageList","React","forwardRef","props","ref","cellHeight","children","classes","className","cols","component","Component","gap","gapProp","rowHeight","rowHeightProp","spacing","style","other","_objectWithoutPropertiesLoose","createElement","_extends","clsx","margin","Children","map","child","isValidElement","process","env","NODE_ENV","isFragment","console","error","join","childCols","childRows","rows","cloneElement","width","height","propTypes","deprecatedPropType","PropTypes","oneOfType","number","oneOf","node","object","string","elementType","withStyles","name"],"mappings":"omCAQaA,EAAS,CAEpBC,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,UAAW,OACXC,UAAW,OACXC,QAAS,EACTC,wBAAyB,UAIvBC,EAAyBC,EAAMC,YAAW,SAAmBC,EAAOC,GACxE,MAAMC,WACJA,EAAUC,SACVA,EAAQC,QACRA,EAAOC,UACPA,EAASC,KACTA,EAAO,EACPC,UAAWC,EAAY,KACvBC,IAAKC,EAAU,EACfC,UAAWC,EAAgB,IAAGC,QAC9BA,EAAOC,MACPA,GACEd,EACEe,EAAQC,gCAA8BhB,EAAO,CAAC,aAAc,WAAY,UAAW,YAAa,OAAQ,YAAa,MAAO,YAAa,UAAW,UAEpJS,EAAMI,GAAWH,EACjBC,EAAYT,GAAcU,EAChC,OAAoBd,EAAMmB,cAAcT,EAAWU,WAAS,CAC1Db,UAAWc,UAAKf,EAAQd,KAAMe,GAC9BJ,IAAKA,EACLa,MAAOI,WAAS,CACdE,QAASX,EAAM,GACdK,IACFC,GAAQjB,EAAMuB,SAASC,IAAInB,GAAUoB,IACtC,IAAmBzB,EAAM0B,eAAeD,GACtC,OAAO,KAGoB,eAAzBE,QAAQC,IAAIC,UACVC,aAAWL,IACbM,QAAQC,MAAM,CAAC,6EAA8E,wCAAwCC,KAAK,OAI9I,MAAMC,EAAYT,EAAMvB,MAAMM,MAAQ,EAChC2B,EAAYV,EAAMvB,MAAMkC,MAAQ,EACtC,OAAoBpC,EAAMqC,aAAaZ,EAAO,CAC5CT,MAAOI,WAAS,CACdkB,MAAU,IAAM9B,EAAO0B,EAAhB,IACPK,OAAsB,SAAd1B,EAAuB,OAASA,EAAYsB,EAAYxB,EAChEd,QAASc,EAAM,GACdc,EAAMvB,MAAMc,gBAII,eAAzBW,QAAQC,IAAIC,WAA4B9B,EAAUyC,UAAY,CAW5DpC,WAAYqC,EAAmBC,UAAUC,UAAU,CAACD,UAAUE,OAAQF,UAAUG,MAAM,CAAC,WAAY,qCAKnGxC,SAAUqC,UAAUI,KAMpBxC,QAASoC,UAAUK,OAKnBxC,UAAWmC,UAAUM,OAKrBxC,KAAMkC,UAAUE,OAMhBnC,UAAWiC,UAEVO,YAKDtC,IAAK+B,UAAUE,OAKf/B,UAAW6B,UAAUC,UAAU,CAACD,UAAUG,MAAM,CAAC,SAAUH,UAAUE,SAMrE7B,QAAS0B,EAAmBC,UAAUE,OAAQ,+BAK9C5B,MAAO0B,UAAUK,eAEJG,EAAW3D,EAAQ,CAChC4D,KAAM,gBADOD,CAEZnD"}