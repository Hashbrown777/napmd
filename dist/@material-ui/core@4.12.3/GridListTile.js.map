{"version":3,"file":"GridListTile.js","sources":["../../../node_modules/@material-ui/core/es/GridListTile/GridListTile.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport debounce from '../utils/debounce';\nimport withStyles from '../styles/withStyles';\nimport isMuiElement from '../utils/isMuiElement';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    boxSizing: 'border-box',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the `div` element that wraps the children. */\n  tile: {\n    position: 'relative',\n    display: 'block',\n    // In case it's not rendered with a div.\n    height: '100%',\n    overflow: 'hidden'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullHeight: {\n    height: '100%',\n    transform: 'translateX(-50%)',\n    position: 'relative',\n    left: '50%'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullWidth: {\n    width: '100%',\n    position: 'relative',\n    transform: 'translateY(-50%)',\n    top: '50%'\n  }\n};\n\nconst fit = (imgEl, classes) => {\n  if (!imgEl || !imgEl.complete) {\n    return;\n  }\n\n  if (imgEl.width / imgEl.height > imgEl.parentElement.offsetWidth / imgEl.parentElement.offsetHeight) {\n    imgEl.classList.remove(...classes.imgFullWidth.split(' '));\n    imgEl.classList.add(...classes.imgFullHeight.split(' '));\n  } else {\n    imgEl.classList.remove(...classes.imgFullHeight.split(' '));\n    imgEl.classList.add(...classes.imgFullWidth.split(' '));\n  }\n};\n\nfunction ensureImageCover(imgEl, classes) {\n  if (!imgEl) {\n    return;\n  }\n\n  if (imgEl.complete) {\n    fit(imgEl, classes);\n  } else {\n    imgEl.addEventListener('load', () => {\n      fit(imgEl, classes);\n    });\n  }\n}\n\nlet warnedOnce = false;\n/**\n * ⚠️ The GridList component was renamed to ImageList to align with the current Material Design naming.\n *\n * You should use `import { ImageListItem } from '@material-ui/core'`\n * or `import ImageListItem from '@material-ui/core/ImageListItem'`.\n */\n\nconst GridListTile = /*#__PURE__*/React.forwardRef(function GridListTile(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: The GridListTile component was renamed to ImageListItem to align with the current Material Design naming.', '', \"You should use `import { ImageListItem } from '@material-ui/core'`\", \"or `import ImageListItem from '@material-ui/core/ImageListItem'`.\"].join('\\n'));\n    }\n  } // cols rows default values are for docs only\n\n\n  const {\n    children,\n    classes,\n    className,\n    // eslint-disable-next-line no-unused-vars\n    cols = 1,\n    component: Component = 'li',\n    // eslint-disable-next-line no-unused-vars\n    rows = 1\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"cols\", \"component\", \"rows\"]);\n\n  const imgRef = React.useRef(null);\n  React.useEffect(() => {\n    ensureImageCover(imgRef.current, classes);\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      fit(imgRef.current, classes);\n    });\n    window.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [classes]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tile\n  }, React.Children.map(children, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (child.type === 'img' || isMuiElement(child, ['Image'])) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        ref: imgRef\n      });\n    }\n\n    return child;\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridListTile.propTypes = {\n  /**\n   * Theoretically you can pass any node as children, but the main use case is to pass an img,\n   * in which case GridListTile takes care of making the image \"cover\" available space\n   * (similar to `background-size: cover` or to `object-fit: cover`).\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Width of the tile in number of grid cells.\n   */\n  cols: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the tile in number of grid cells.\n   */\n  rows: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridListTile'\n})(GridListTile);"],"names":["styles","root","boxSizing","flexShrink","tile","position","display","height","overflow","imgFullHeight","transform","left","imgFullWidth","width","top","fit","imgEl","classes","complete","parentElement","offsetWidth","offsetHeight","classList","remove","split","add","warnedOnce","GridListTile","React","forwardRef","props","ref","process","env","NODE_ENV","console","error","join","children","className","cols","component","Component","rows","other","_objectWithoutPropertiesLoose","imgRef","useRef","useEffect","addEventListener","ensureImageCover","current","handleResize","debounce","window","clear","removeEventListener","createElement","_extends","clsx","Children","map","child","isValidElement","type","isMuiElement","cloneElement","propTypes","PropTypes","node","object","isRequired","string","number","elementType","withStyles","name"],"mappings":"smCAQaA,EAAS,CAEpBC,KAAM,CACJC,UAAW,aACXC,WAAY,GAIdC,KAAM,CACJC,SAAU,WACVC,QAAS,QAETC,OAAQ,OACRC,SAAU,UAIZC,cAAe,CACbF,OAAQ,OACRG,UAAW,mBACXL,SAAU,WACVM,KAAM,OAIRC,aAAc,CACZC,MAAO,OACPR,SAAU,WACVK,UAAW,mBACXI,IAAK,QAIHC,EAAM,CAACC,EAAOC,KACbD,GAAUA,EAAME,WAIjBF,EAAMH,MAAQG,EAAMT,OAASS,EAAMG,cAAcC,YAAcJ,EAAMG,cAAcE,cACrFL,EAAMM,UAAUC,UAAUN,EAAQL,aAAaY,MAAM,MACrDR,EAAMM,UAAUG,OAAOR,EAAQR,cAAce,MAAM,QAEnDR,EAAMM,UAAUC,UAAUN,EAAQR,cAAce,MAAM,MACtDR,EAAMM,UAAUG,OAAOR,EAAQL,aAAaY,MAAM,SAkBtD,IAAIE,GAAa,EAQjB,MAAMC,EAA4BC,EAAMC,YAAW,SAAsBC,EAAOC,GACjD,eAAzBC,QAAQC,IAAIC,WACTR,IACHA,GAAa,EACbS,QAAQC,MAAM,CAAC,yHAA0H,GAAI,qEAAsE,qEAAqEC,KAAK,SAKjS,MAAMC,SACJA,EAAQrB,QACRA,EAAOsB,UACPA,EAASC,KAETA,EAAO,EACPC,UAAWC,EAAY,KAAIC,KAE3BA,EAAO,GACLb,EACEc,EAAQC,gCAA8Bf,EAAO,CAAC,WAAY,UAAW,YAAa,OAAQ,YAAa,SAEvGgB,EAASlB,EAAMmB,OAAO,MAc5B,OAbAnB,EAAMoB,WAAU,MA5ClB,SAA0BhC,EAAOC,GAC1BD,IAIDA,EAAME,SACRH,EAAIC,EAAOC,GAEXD,EAAMiC,iBAAiB,QAAQ,KAC7BlC,EAAIC,EAAOC,OAoCbiC,CAAiBJ,EAAOK,QAASlC,MAEnCW,EAAMoB,WAAU,KACd,MAAMI,EAAeC,GAAS,KAC5BtC,EAAI+B,EAAOK,QAASlC,MAGtB,OADAqC,OAAOL,iBAAiB,SAAUG,GAC3B,KACLA,EAAaG,QACbD,OAAOE,oBAAoB,SAAUJ,MAEtC,CAACnC,IACgBW,EAAM6B,cAAcf,EAAWgB,WAAS,CAC1DnB,UAAWoB,UAAK1C,EAAQhB,KAAMsC,GAC9BR,IAAKA,GACJa,GAAqBhB,EAAM6B,cAAc,MAAO,CACjDlB,UAAWtB,EAAQb,MAClBwB,EAAMgC,SAASC,IAAIvB,GAAUwB,GACXlC,EAAMmC,eAAeD,GAIrB,QAAfA,EAAME,MAAkBC,EAAaH,EAAO,CAAC,UAC3BlC,EAAMsC,aAAaJ,EAAO,CAC5C/B,IAAKe,IAIFgB,EATE,YAYY,eAAzB9B,QAAQC,IAAIC,WAA4BP,EAAawC,UAAY,CAM/D7B,SAAU8B,UAAUC,KAMpBpD,QAASmD,UAAUE,OAAOC,WAK1BhC,UAAW6B,UAAUI,OAKrBhC,KAAM4B,UAAUK,OAMhBhC,UAAW2B,UAEVM,YAKD/B,KAAMyB,UAAUK,eAEHE,EAAW3E,EAAQ,CAChC4E,KAAM,mBADOD,CAEZhD"}