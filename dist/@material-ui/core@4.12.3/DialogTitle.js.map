{"version":3,"file":"DialogTitle.js","sources":["../../../node_modules/@material-ui/core/es/DialogTitle/DialogTitle.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    disableTypography = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);"],"names":["styles","root","margin","padding","flex","DialogTitle","React","forwardRef","props","ref","children","classes","className","disableTypography","other","_objectWithoutPropertiesLoose","createElement","_extends","clsx","Typography","component","variant","process","env","NODE_ENV","propTypes","PropTypes","node","object","string","bool","withStyles","name"],"mappings":"gmCAOaA,EAAS,CAEpBC,KAAM,CACJC,OAAQ,EACRC,QAAS,YACTC,KAAM,aAGJC,EAA2BC,EAAMC,YAAW,SAAqBC,EAAOC,GAC5E,MAAMC,SACJA,EAAQC,QACRA,EAAOC,UACPA,EAASC,kBACTA,GAAoB,GAClBL,EACEM,EAAQC,gCAA8BP,EAAO,CAAC,WAAY,UAAW,YAAa,sBAExF,OAAoBF,EAAMU,cAAc,MAAOC,WAAS,CACtDL,UAAWM,UAAKP,EAAQV,KAAMW,GAC9BH,IAAKA,GACJK,GAAQD,EAAoBH,EAAwBJ,EAAMU,cAAcG,UAAY,CACrFC,UAAW,KACXC,QAAS,MACRX,OAEoB,eAAzBY,QAAQC,IAAIC,WAA4BnB,EAAYoB,UAAY,CAS9Df,SAAUgB,UAAUC,KAMpBhB,QAASe,UAAUE,OAKnBhB,UAAWc,UAAUG,OAMrBhB,kBAAmBa,UAAUI,aAEhBC,EAAW/B,EAAQ,CAChCgC,KAAM,kBADOD,CAEZ1B"}