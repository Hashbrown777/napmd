{"version":3,"file":"createPalette.js","sources":["../../../../node_modules/@material-ui/core/es/styles/createPalette.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport { deepmerge } from '@material-ui/utils';\nimport common from '../colors/common';\nimport grey from '../colors/grey';\nimport indigo from '../colors/indigo';\nimport pink from '../colors/pink';\nimport red from '../colors/red';\nimport orange from '../colors/orange';\nimport blue from '../colors/blue';\nimport green from '../colors/green';\nimport { darken, getContrastRatio, lighten } from './colorManipulator';\nexport const light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.54)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)',\n    // Text hints.\n    hint: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: common.white,\n    default: grey[50]\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexport const dark = {\n  text: {\n    primary: common.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    hint: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: grey[800],\n    default: '#303030'\n  },\n  action: {\n    active: common.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\n\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = lighten(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = darken(intent.main, tonalOffsetDark);\n    }\n  }\n}\n\nexport default function createPalette(palette) {\n  const {\n    primary = {\n      light: indigo[300],\n      main: indigo[500],\n      dark: indigo[700]\n    },\n    secondary = {\n      light: pink.A200,\n      main: pink.A400,\n      dark: pink.A700\n    },\n    error = {\n      light: red[300],\n      main: red[500],\n      dark: red[700]\n    },\n    warning = {\n      light: orange[300],\n      main: orange[500],\n      dark: orange[700]\n    },\n    info = {\n      light: blue[300],\n      main: blue[500],\n      dark: blue[700]\n    },\n    success = {\n      light: green[300],\n      main: green[500],\n      dark: green[700]\n    },\n    type = 'light',\n    contrastThreshold = 3,\n    tonalOffset = 0.2\n  } = palette,\n        other = _objectWithoutPropertiesLoose(palette, [\"primary\", \"secondary\", \"error\", \"warning\", \"info\", \"success\", \"type\", \"contrastThreshold\", \"tonalOffset\"]); // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n\n\n  function getContrastText(background) {\n    const contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = getContrastRatio(background, contrastText);\n\n      if (contrast < 3) {\n        console.error([`Material-UI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n\n    return contrastText;\n  }\n\n  const augmentColor = (color, mainShade = 500, lightShade = 300, darkShade = 700) => {\n    color = _extends({}, color);\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n\n    if (!color.main) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The color provided to augmentColor(color) is invalid.\nThe color object needs to have a \\`main\\` property or a \\`${mainShade}\\` property.` : _formatMuiErrorMessage(4, mainShade));\n    }\n\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The color provided to augmentColor(color) is invalid.\n\\`color.main\\` should be a string, but \\`${JSON.stringify(color.main)}\\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport {Â green } from \"@material-ui/core/colors\";\n\nconst theme1 = createTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createTheme({ palette: {\n  primary: { main: green[500] },\n} });` : _formatMuiErrorMessage(5, JSON.stringify(color.main)));\n    }\n\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  };\n\n  const types = {\n    dark,\n    light\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!types[type]) {\n      console.error(`Material-UI: The palette type \\`${type}\\` is not supported.`);\n    }\n  }\n\n  const paletteOutput = deepmerge(_extends({\n    // A collection of common colors.\n    common,\n    // The palette type, can be light or dark.\n    type,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor(primary),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor(secondary, 'A400', 'A200', 'A700'),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor(error),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor(warning),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor(info),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor(success),\n    // The grey colors.\n    grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, types[type]), other);\n  return paletteOutput;\n}"],"names":["light","text","primary","secondary","disabled","hint","divider","background","paper","common","white","default","grey","action","active","hover","hoverOpacity","selected","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","dark","icon","addLightOrDark","intent","direction","shade","tonalOffset","tonalOffsetLight","tonalOffsetDark","hasOwnProperty","lighten","main","darken","palette","indigo","pink","A200","A400","A700","error","red","warning","orange","info","blue","success","green","type","contrastThreshold","other","_objectWithoutPropertiesLoose","getContrastText","contrastText","getContrastRatio","process","env","NODE_ENV","contrast","console","join","augmentColor","color","mainShade","lightShade","darkShade","_extends","Error","_formatMuiErrorMessage","JSON","stringify","types","deepmerge"],"mappings":"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"}