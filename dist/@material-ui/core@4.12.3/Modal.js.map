{"version":3,"file":"Modal.js","sources":["../../../node_modules/@material-ui/core/es/Modal/Modal.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'fixed',\n    zIndex: theme.zIndex.modal,\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0\n  },\n\n  /* Styles applied to the root element if the `Modal` has exited. */\n  hidden: {\n    visibility: 'hidden'\n  }\n});\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  const theme = useTheme();\n  const props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme\n  });\n\n  const {\n    BackdropComponent = SimpleBackdrop,\n    BackdropProps,\n    children,\n    closeAfterTransition = false,\n    container,\n    disableAutoFocus = false,\n    disableBackdropClick = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onEscapeKeyDown,\n    onRendered,\n    open\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\n\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (onRendered) {\n      onRendered();\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  const handleEnter = () => {\n    setExited(false);\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const inlineStyle = styles(theme || {\n    zIndex\n  });\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A HTML element, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire `onClose`.\n   */\n  disableBackdropClick: deprecatedPropType(PropTypes.bool, 'Use the onClose prop with the `reason` argument to filter the `backdropClick` events.'),\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire `onClose`.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  manager: PropTypes.object,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `backdropClick` events.'),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.'),\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   * It signals that the `open={true}` prop took effect.\n   *\n   * This prop will be removed in v5, the ref can be used instead.\n   */\n  onRendered: deprecatedPropType(PropTypes.func, 'Use the ref instead.'),\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;"],"names":["defaultManager","ModalManager","styles","theme","root","position","zIndex","modal","right","bottom","top","left","hidden","visibility","Modal","React","forwardRef","inProps","ref","useTheme","props","getThemeProps","name","_extends","BackdropComponent","SimpleBackdrop","BackdropProps","children","closeAfterTransition","container","disableAutoFocus","disableBackdropClick","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onEscapeKeyDown","onRendered","open","other","_objectWithoutPropertiesLoose","exited","setExited","useState","useRef","mountNodeRef","modalRef","handleRef","useForkRef","hasTransition","hasOwnProperty","getHasTransition","getDoc","ownerDocument","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","useEventCallback","resolvedContainer","ReactDOM","findDOMNode","getContainer","body","add","isTopModal","useCallback","handlePortalRef","node","ariaHidden","handleClose","remove","useEffect","handleEnter","handleExited","inlineStyle","childProps","undefined","tabIndex","onEnter","createChainedFunction","onExited","createElement","Portal","onKeyDown","event","key","stopPropagation","role","style","onClick","target","currentTarget","TrapFocus","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","PropTypes","elementType","object","elementAcceptingRef","isRequired","bool","oneOfType","HTMLElementType","instanceOf","Component","func","deprecatedPropType"],"mappings":"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"}