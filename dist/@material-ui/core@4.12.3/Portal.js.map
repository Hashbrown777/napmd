{"version":3,"file":"Portal.js","sources":["../../../node_modules/@material-ui/core/es/Portal/Portal.js"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType } from '@material-ui/utils';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport setRef from '../utils/setRef';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container; // #StrictMode ready\n\n  return ReactDOM.findDOMNode(container);\n}\n\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, ref) {\n  const {\n    children,\n    container,\n    disablePortal = false,\n    onRendered\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  const handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, ref);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return () => {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n  useEnhancedEffect(() => {\n    if (onRendered && (mountNode || disablePortal)) {\n      onRendered();\n    }\n  }, [onRendered, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A HTML element, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   *\n   * This prop will be removed in v5, the ref can be used instead.\n   * @deprecated Use the ref instead.\n   */\n  onRendered: deprecatedPropType(PropTypes.func, 'Use the ref instead.')\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;"],"names":["useEnhancedEffect","window","React","useLayoutEffect","useEffect","Portal","forwardRef","props","ref","children","container","disablePortal","onRendered","mountNode","setMountNode","useState","handleRef","useForkRef","isValidElement","ReactDOM","findDOMNode","getContainer","document","body","setRef","cloneElement","createPortal","process","env","NODE_ENV","propTypes","PropTypes","node","oneOfType","HTMLElementType","instanceOf","Component","func","bool","deprecatedPropType","exactProp"],"mappings":"8hBAcA,MAAMA,EAAsC,oBAAXC,OAAyBC,EAAMC,gBAAkBD,EAAME,UAMlFC,EAAsBH,EAAMI,YAAW,SAAgBC,EAAOC,GAClE,MAAMC,SACJA,EAAQC,UACRA,EAASC,cACTA,GAAgB,EAAKC,WACrBA,GACEL,GACGM,EAAWC,GAAgBZ,EAAMa,SAAS,MAC3CC,EAAYC,EAAyBf,EAAMgB,eAAeT,GAAYA,EAASD,IAAM,KAAMA,GAsBjG,OArBAR,GAAkB,KACXW,GACHG,EAvBN,SAAsBJ,GAGpB,OAFAA,EAAiC,mBAAdA,EAA2BA,IAAcA,EAErDS,EAASC,YAAYV,GAoBXW,CAAaX,IAAcY,SAASC,QAElD,CAACb,EAAWC,IACfX,GAAkB,KAChB,GAAIa,IAAcF,EAEhB,OADAa,EAAOhB,EAAKK,GACL,KACLW,EAAOhB,EAAK,SAKf,CAACA,EAAKK,EAAWF,IACpBX,GAAkB,KACZY,IAAeC,GAAaF,IAC9BC,MAED,CAACA,EAAYC,EAAWF,IAEvBA,EACgBT,EAAMgB,eAAeT,GACjBP,EAAMuB,aAAahB,EAAU,CAC/CD,IAAKQ,IAIFP,EAGFI,EAAyBM,EAASO,aAAajB,EAAUI,GAAaA,WAEtD,eAAzBc,QAAQC,IAAIC,WAA4BxB,EAAOyB,UAAY,CASzDrB,SAAUsB,UAAUC,KASpBtB,UAAWqB,UAEVE,UAAU,CAACC,kBAAiBH,UAAUI,WAAWjC,EAAMkC,WAAYL,UAAUM,OAM9E1B,cAAeoB,UAAUO,KAQzB1B,WAAY2B,EAAmBR,UAAUM,KAAM,0BAGpB,eAAzBV,QAAQC,IAAIC,WAEdxB,EAAuB,UAAImC,YAAUnC,EAAOyB"}