{"version":3,"file":"Checkbox.js","sources":["../../../node_modules/@material-ui/core/es/Checkbox/Checkbox.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    color: theme.palette.text.secondary\n  },\n\n  /* Pseudo-class applied to the root element if `checked={true}`. */\n  checked: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n  indeterminate: {},\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    '&$checked': {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    '&$checked': {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  }\n});\nconst defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nconst defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nconst defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  const {\n    checkedIcon = defaultCheckedIcon,\n    classes,\n    color = 'secondary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[`color${capitalize(color)}`], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"names":["styles","theme","root","color","palette","text","secondary","checked","disabled","indeterminate","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","colorSecondary","defaultCheckedIcon","React","createElement","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","forwardRef","props","ref","checkedIcon","classes","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","_objectWithoutPropertiesLoose","SwitchBase","_extends","type","clsx","capitalize","cloneElement","fontSize","undefined","process","env","NODE_ENV","propTypes","PropTypes","bool","node","object","oneOf","disableRipple","id","string","inputRef","refType","onChange","func","required","value","any","withStyles","name"],"mappings":"snDAaaA,GAASC,KAEpBC,KAAM,CACJC,MAAOF,EAAMG,QAAQC,KAAKC,WAI5BC,QAAS,GAGTC,SAAU,GAGVC,cAAe,GAGfC,aAAc,CACZ,YAAa,CACXP,MAAOF,EAAMG,QAAQO,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,QAAMb,EAAMG,QAAQO,QAAQC,KAAMX,EAAMG,QAAQW,OAAOC,cAExE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZV,MAAOF,EAAMG,QAAQW,OAAOP,WAKhCS,eAAgB,CACd,YAAa,CACXd,MAAOF,EAAMG,QAAQE,UAAUM,KAC/B,UAAW,CACTC,gBAAiBC,QAAMb,EAAMG,QAAQE,UAAUM,KAAMX,EAAMG,QAAQW,OAAOC,cAE1E,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZV,MAAOF,EAAMG,QAAQW,OAAOP,aAI5BU,GAAkCC,EAAMC,cAAcC,EAAc,MACpEC,GAA2BH,EAAMC,cAAcG,EAA0B,MACzEC,GAAwCL,EAAMC,cAAcK,EAA2B,MACvFC,GAAwBP,EAAMQ,YAAW,SAAkBC,EAAOC,GACtE,MAAMC,YACJA,EAAcZ,GAAkBa,QAChCA,EAAO5B,MACPA,EAAQ,YACR6B,KAAMC,EAAWX,GAAWb,cAC5BA,GAAgB,EAChByB,kBAAmBC,EAAwBX,GAAwBY,WACnEA,EAAUC,KACVA,EAAO,UACLT,EACEU,EAAQC,gCAA8BX,EAAO,CAAC,cAAe,UAAW,QAAS,OAAQ,gBAAiB,oBAAqB,aAAc,SAE7II,EAAOvB,EAAgB0B,EAAwBF,EAC/CC,EAAoBzB,EAAgB0B,EAAwBL,EAClE,OAAoBX,EAAMC,cAAcoB,UAAYC,WAAS,CAC3DC,KAAM,WACNX,QAAS,CACP7B,KAAMyC,WAAKZ,EAAQ7B,KAAM6B,EAAQ,QAAQa,EAAWzC,MAAWM,GAAiBsB,EAAQtB,eACxFF,QAASwB,EAAQxB,QACjBC,SAAUuB,EAAQvB,UAEpBL,MAAOA,EACPiC,WAAYK,WAAS,CACnB,qBAAsBhC,GACrB2B,GACHJ,KAAmBb,EAAM0B,aAAab,EAAM,CAC1Cc,cAAkCC,IAAxBf,EAAKJ,MAAMkB,UAAmC,UAATT,EAAmBA,EAAOL,EAAKJ,MAAMkB,WAEtFhB,YAA0BX,EAAM0B,aAAaX,EAAmB,CAC9DY,cAA+CC,IAArCb,EAAkBN,MAAMkB,UAAmC,UAATT,EAAmBA,EAAOH,EAAkBN,MAAMkB,WAEhHjB,IAAKA,GACJS,OAEoB,eAAzBU,QAAQC,IAAIC,WAA4BxB,GAASyB,UAAY,CAS3D5C,QAAS6C,WAAUC,KAKnBvB,YAAasB,WAAUE,KAMvBvB,QAASqB,WAAUG,OAKnBpD,MAAOiD,WAAUI,MAAM,CAAC,UAAW,UAAW,cAK9ChD,SAAU4C,WAAUC,KAKpBI,cAAeL,WAAUC,KAKzBrB,KAAMoB,WAAUE,KAKhBI,GAAIN,WAAUO,OAQdlD,cAAe2C,WAAUC,KAKzBnB,kBAAmBkB,WAAUE,KAK7BlB,WAAYgB,WAAUG,OAKtBK,SAAUC,UAQVC,SAAUV,WAAUW,KAKpBC,SAAUZ,WAAUC,KAMpBhB,KAAMe,WAAUI,MAAM,CAAC,SAAU,UAMjCS,MAAOb,WAAUc,aAEJC,EAAWnE,GAAQ,CAChCoE,KAAM,eADOD,CAEZzC"}