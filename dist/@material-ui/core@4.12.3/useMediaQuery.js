define(["../extends","react","@material-ui/styles"],(function(e,t,n){function r(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var o=r(t);return function(t,r={}){const i=n.useTheme(),a=n.getThemeProps({theme:i,name:"MuiUseMediaQuery",props:{}});"production"!==process.env.NODE_ENV&&"function"==typeof t&&null===i&&console.error(["Material-UI: The `query` argument provided is invalid.","You are providing a function without a theme in the context.","One of the parent elements needs to use a ThemeProvider."].join("\n"));let u="function"==typeof t?t(i):t;u=u.replace(/^@media( ?)/m,"");const c="undefined"!=typeof window&&void 0!==window.matchMedia,{defaultMatches:s=!1,matchMedia:d=(c?window.matchMedia:null),noSsr:f=!1,ssrMatchMedia:l=null}=e._extends({},a,r),[m,h]=o.useState((()=>f&&c?d(u).matches:l?l(u).matches:s));return o.useEffect((()=>{let e=!0;if(!c)return;const t=d(u),n=()=>{e&&h(t.matches)};return n(),t.addListener(n),()=>{e=!1,t.removeListener(n)}}),[u,d,c]),"production"!==process.env.NODE_ENV&&o.useDebugValue({query:u,match:m}),m}}));
//# sourceMappingURL=useMediaQuery.js.map
