{"version":3,"file":"Avatar.js","sources":["../../../node_modules/@material-ui/core/es/Avatar/Avatar.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexShrink: 0,\n    width: 40,\n    height: 40,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(20),\n    lineHeight: 1,\n    borderRadius: '50%',\n    overflow: 'hidden',\n    userSelect: 'none'\n  },\n\n  /* Styles applied to the root element if not `src` or `srcSet`. */\n  colorDefault: {\n    color: theme.palette.background.default,\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n  },\n\n  /* Styles applied to the root element if `variant=\"circle\"`. */\n  circle: {},\n\n  /* Styles applied to the root element if `variant=\"circular\"`. */\n  circular: {},\n\n  /* Styles applied to the root element if `variant=\"rounded\"`. */\n  rounded: {\n    borderRadius: theme.shape.borderRadius\n  },\n\n  /* Styles applied to the root element if `variant=\"square\"`. */\n  square: {\n    borderRadius: 0\n  },\n\n  /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n  img: {\n    width: '100%',\n    height: '100%',\n    textAlign: 'center',\n    // Handle non-square image. The property isn't supported by IE 11.\n    objectFit: 'cover',\n    // Hide alt text.\n    color: 'transparent',\n    // Hide the image broken icon, only works on Chrome.\n    textIndent: 10000\n  },\n\n  /* Styles applied to the fallback icon */\n  fallback: {\n    width: '75%',\n    height: '75%'\n  }\n});\n\nfunction useLoaded({\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return () => {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  const {\n    alt,\n    children: childrenProp,\n    classes,\n    className,\n    component: Component = 'div',\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  let children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  const loaded = useLoaded({\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, props => {\n    const {\n      classes\n    } = props;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(`Material-UI: The \\`circle\\` class is deprecated. Use \\`circular\\` instead.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), props => {\n    const {\n      variant\n    } = props;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` is deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);"],"names":["styles","theme","root","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","colorDefault","color","palette","background","default","backgroundColor","type","grey","circle","circular","rounded","shape","square","img","textAlign","objectFit","textIndent","fallback","Avatar","React","forwardRef","props","ref","alt","children","childrenProp","classes","className","component","Component","imgProps","sizes","src","srcSet","variant","other","_objectWithoutPropertiesLoose","loaded","setLoaded","useState","useEffect","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","createElement","_extends","Person","clsx","system","process","env","NODE_ENV","propTypes","PropTypes","string","node","chainPropTypes","object","split","length","Error","elementType","oneOf","withStyles","name"],"mappings":"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"}