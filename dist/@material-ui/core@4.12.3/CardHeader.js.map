{"version":3,"file":"CardHeader.js","sources":["../../../node_modules/@material-ui/core/es/CardHeader/CardHeader.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  const {\n    action,\n    avatar,\n    classes,\n    className,\n    component: Component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);"],"names":["styles","root","display","alignItems","padding","avatar","flex","marginRight","action","alignSelf","marginTop","content","title","subheader","CardHeader","React","forwardRef","props","ref","classes","className","component","Component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","type","Typography","createElement","_extends","variant","color","clsx","process","env","NODE_ENV","propTypes","PropTypes","node","children","object","string","elementType","bool","withStyles","name"],"mappings":"gmCAOaA,EAAS,CAEpBC,KAAM,CACJC,QAAS,OACTC,WAAY,SACZC,QAAS,IAIXC,OAAQ,CACNC,KAAM,WACNC,YAAa,IAIfC,OAAQ,CACNF,KAAM,WACNG,UAAW,aACXC,WAAY,EACZH,aAAc,GAIhBI,QAAS,CACPL,KAAM,YAIRM,MAAO,GAGPC,UAAW,IAEPC,EAA0BC,EAAMC,YAAW,SAAoBC,EAAOC,GAC1E,MAAMV,OACJA,EAAMH,OACNA,EAAMc,QACNA,EAAOC,UACPA,EACAC,UAAWC,EAAY,MAAKC,kBAC5BA,GAAoB,EACpBV,UAAWW,EAAaC,yBACxBA,EACAb,MAAOc,EAASC,qBAChBA,GACEV,EACEW,EAAQC,gCAA8BZ,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,YAAa,oBAAqB,YAAa,2BAA4B,QAAS,yBAEpL,IAAIL,EAAQc,EAEC,MAATd,GAAiBA,EAAMkB,OAASC,WAAeR,IACjDX,EAAqBG,EAAMiB,cAAcD,UAAYE,WAAS,CAC5DC,QAAS7B,EAAS,QAAU,KAC5Be,UAAWD,EAAQP,MACnBS,UAAW,OACXnB,QAAS,SACRyB,GAAuBf,IAG5B,IAAIC,EAAYW,EAYhB,OAViB,MAAbX,GAAqBA,EAAUiB,OAASC,WAAeR,IACzDV,EAAyBE,EAAMiB,cAAcD,UAAYE,WAAS,CAChEC,QAAS7B,EAAS,QAAU,QAC5Be,UAAWD,EAAQN,UACnBsB,MAAO,gBACPd,UAAW,OACXnB,QAAS,SACRuB,GAA2BZ,IAGZE,EAAMiB,cAAcV,EAAWW,WAAS,CAC1Db,UAAWgB,UAAKjB,EAAQlB,KAAMmB,GAC9BF,IAAKA,GACJU,GAAQvB,GAAuBU,EAAMiB,cAAc,MAAO,CAC3DZ,UAAWD,EAAQd,QAClBA,GAAsBU,EAAMiB,cAAc,MAAO,CAClDZ,UAAWD,EAAQR,SAClBC,EAAOC,GAAYL,GAAuBO,EAAMiB,cAAc,MAAO,CACtEZ,UAAWD,EAAQX,QAClBA,OAEoB,eAAzB6B,QAAQC,IAAIC,WAA4BzB,EAAW0B,UAAY,CAS7DhC,OAAQiC,UAAUC,KAKlBrC,OAAQoC,UAAUC,KAKlBC,SAAUF,UAAUC,KAMpBvB,QAASsB,UAAUG,OAKnBxB,UAAWqB,UAAUI,OAMrBxB,UAAWoB,UAEVK,YAQDvB,kBAAmBkB,UAAUM,KAK7BlC,UAAW4B,UAAUC,KAMrBjB,yBAA0BgB,UAAUG,OAKpChC,MAAO6B,UAAUC,KAMjBf,qBAAsBc,UAAUG,eAEnBI,EAAWhD,EAAQ,CAChCiD,KAAM,iBADOD,CAEZlC"}