{"version":3,"file":"useForkRef.js","sources":["../../../../node_modules/@material-ui/core/es/utils/useForkRef.js"],"sourcesContent":["import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior\n   */\n  return React.useMemo(() => {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return refValue => {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}"],"names":["refA","refB","React","useMemo","refValue","setRef"],"mappings":"4VAEe,SAAoBA,EAAMC,GAMvC,OAAOC,EAAMC,SAAQ,IACP,MAARH,GAAwB,MAARC,EACX,KAGFG,IACLC,EAAOL,EAAMI,GACbC,EAAOJ,EAAMG,KAEd,CAACJ,EAAMC"}