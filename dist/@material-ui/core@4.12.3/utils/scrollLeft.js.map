{"version":3,"file":"scrollLeft.js","sources":["../../../../node_modules/@material-ui/core/es/utils/scrollLeft.js"],"sourcesContent":["// Source from https://github.com/alitaheri/normalize-scroll-left\nlet cachedType;\n/**\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\n *\n * Types of scrollLeft, assuming scrollWidth=100 and direction is rtl.\n *\n * Type             | <- Most Left | Most Right -> | Initial\n * ---------------- | ------------ | ------------- | -------\n * default          | 0            | 100           | 100\n * negative (spec*) | -100         | 0             | 0\n * reverse          | 100          | 0             | 0\n *\n * Edge 85: default\n * Safari 14: negative\n * Chrome 85: negative\n * Firefox 81: negative\n * IE 11: reverse\n *\n * spec* https://drafts.csswg.org/cssom-view/#dom-window-scroll\n */\n\nexport function detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n\n  const dummy = document.createElement('div');\n  const container = document.createElement('div');\n  container.style.width = '10px';\n  container.style.height = '1px';\n  dummy.appendChild(container);\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n\n  document.body.removeChild(dummy);\n  return cachedType;\n} // Based on https://stackoverflow.com/a/24394376\n\nexport function getNormalizedScrollLeft(element, direction) {\n  const scrollLeft = element.scrollLeft; // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\n\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n\n  const type = detectScrollType();\n\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n\n    default:\n      return scrollLeft;\n  }\n}"],"names":["cachedType","detectScrollType","dummy","document","createElement","container","style","width","height","appendChild","dir","fontSize","position","top","overflow","body","scrollLeft","removeChild","element","direction","scrollWidth","clientWidth"],"mappings":"gCACA,IAAIA,EAqBG,SAASC,IACd,GAAID,EACF,OAAOA,EAGT,MAAME,EAAQC,SAASC,cAAc,OAC/BC,EAAYF,SAASC,cAAc,OAyBzC,OAxBAC,EAAUC,MAAMC,MAAQ,OACxBF,EAAUC,MAAME,OAAS,MACzBN,EAAMO,YAAYJ,GAClBH,EAAMQ,IAAM,MACZR,EAAMI,MAAMK,SAAW,OACvBT,EAAMI,MAAMC,MAAQ,MACpBL,EAAMI,MAAME,OAAS,MACrBN,EAAMI,MAAMM,SAAW,WACvBV,EAAMI,MAAMO,IAAM,UAClBX,EAAMI,MAAMQ,SAAW,SACvBX,SAASY,KAAKN,YAAYP,GAC1BF,EAAa,UAETE,EAAMc,WAAa,EACrBhB,EAAa,WAEbE,EAAMc,WAAa,EAEM,IAArBd,EAAMc,aACRhB,EAAa,aAIjBG,SAASY,KAAKE,YAAYf,GACnBF,iDAGF,SAAiCkB,EAASC,GAC/C,MAAMH,EAAaE,EAAQF,WAE3B,GAAkB,QAAdG,EACF,OAAOH,EAKT,OAFaf,KAGX,IAAK,WACH,OAAOiB,EAAQE,YAAcF,EAAQG,YAAcL,EAErD,IAAK,UACH,OAAOE,EAAQE,YAAcF,EAAQG,YAAcL,EAErD,QACE,OAAOA"}