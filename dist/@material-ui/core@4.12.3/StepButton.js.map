{"version":3,"file":"StepButton.js","sources":["../../../node_modules/@material-ui/core/es/StepButton/StepButton.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport StepLabel from '../StepLabel';\nimport isMuiElement from '../utils/isMuiElement';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    padding: '24px 16px',\n    margin: '-24px -16px',\n    boxSizing: 'content-box'\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {},\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    justifyContent: 'flex-start',\n    padding: '8px',\n    margin: '-8px'\n  },\n\n  /* Styles applied to the `ButtonBase` touch-ripple. */\n  touchRipple: {\n    color: 'rgba(0, 0, 0, 0.3)'\n  }\n};\nconst StepButton = /*#__PURE__*/React.forwardRef(function StepButton(props, ref) {\n  const {\n    active,\n    alternativeLabel,\n    children,\n    classes,\n    className,\n    completed,\n    disabled,\n    icon,\n    optional,\n    orientation\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"disabled\", \"expanded\", \"icon\", \"last\", \"optional\", \"orientation\"]);\n\n  const childProps = {\n    active,\n    alternativeLabel,\n    completed,\n    disabled,\n    icon,\n    optional,\n    orientation\n  };\n  const child = isMuiElement(children, ['StepLabel']) ? /*#__PURE__*/React.cloneElement(children, childProps) : /*#__PURE__*/React.createElement(StepLabel, childProps, children);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: true,\n    disabled: disabled,\n    TouchRippleProps: {\n      className: classes.touchRipple\n    },\n    className: clsx(classes.root, classes[orientation], className),\n    ref: ref\n  }, other), child);\n});\nprocess.env.NODE_ENV !== \"production\" ? StepButton.propTypes = {\n  /**\n   * @ignore\n   * Passed in via `Step` - passed through to `StepLabel`.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * @ignore\n   * Set internally by Stepper when it's supplied with the alternativeLabel property.\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\n   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   * Sets completed styling. Is passed to StepLabel.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * @ignore\n   * Disables the button and sets disabled styling. Is passed to StepLabel.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   * potentially passed from parent `Step`\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * The icon displayed by the step label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  last: PropTypes.bool,\n\n  /**\n   * The optional node to display.\n   */\n  optional: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepButton'\n})(StepButton);"],"names":["styles","root","width","padding","margin","boxSizing","horizontal","vertical","justifyContent","touchRipple","color","StepButton","React","forwardRef","props","ref","active","alternativeLabel","children","classes","className","completed","disabled","icon","optional","orientation","other","_objectWithoutPropertiesLoose","childProps","child","isMuiElement","cloneElement","createElement","StepLabel","ButtonBase","_extends","focusRipple","TouchRippleProps","clsx","process","env","NODE_ENV","propTypes","PropTypes","bool","node","object","isRequired","string","expanded","last","oneOf","withStyles","name"],"mappings":"y/CASaA,GAAS,CAEpBC,KAAM,CACJC,MAAO,OACPC,QAAS,YACTC,OAAQ,cACRC,UAAW,eAIbC,WAAY,GAGZC,SAAU,CACRC,eAAgB,aAChBL,QAAS,MACTC,OAAQ,QAIVK,YAAa,CACXC,MAAO,uBAGLC,GAA0BC,EAAMC,YAAW,SAAoBC,EAAOC,GAC1E,MAAMC,OACJA,EAAMC,iBACNA,EAAgBC,SAChBA,EAAQC,QACRA,EAAOC,UACPA,EAASC,UACTA,EAASC,SACTA,EAAQC,KACRA,EAAIC,SACJA,EAAQC,YACRA,GACEX,EACEY,EAAQC,gCAA8Bb,EAAO,CAAC,SAAU,mBAAoB,WAAY,UAAW,YAAa,YAAa,WAAY,WAAY,OAAQ,OAAQ,WAAY,gBAEjLc,EAAa,CACjBZ,OAAAA,EACAC,iBAAAA,EACAI,UAAAA,EACAC,SAAAA,EACAC,KAAAA,EACAC,SAAAA,EACAC,YAAAA,GAEII,EAAQC,EAAaZ,EAAU,CAAC,cAA6BN,EAAMmB,aAAab,EAAUU,GAA2BhB,EAAMoB,cAAcC,UAAWL,EAAYV,GACtK,OAAoBN,EAAMoB,cAAcE,UAAYC,WAAS,CAC3DC,aAAa,EACbd,SAAUA,EACVe,iBAAkB,CAChBjB,UAAWD,EAAQV,aAErBW,UAAWkB,UAAKnB,EAAQlB,KAAMkB,EAAQM,GAAcL,GACpDL,IAAKA,GACJW,GAAQG,MAEY,eAAzBU,QAAQC,IAAIC,WAA4B9B,GAAW+B,UAAY,CAK7D1B,OAAQ2B,UAAUC,KAMlB3B,iBAAkB0B,UAAUC,KAK5B1B,SAAUyB,UAAUE,KAMpB1B,QAASwB,UAAUG,OAAOC,WAK1B3B,UAAWuB,UAAUK,OAMrB3B,UAAWsB,UAAUC,KAMrBtB,SAAUqB,UAAUC,KAMpBK,SAAUN,UAAUC,KAKpBrB,KAAMoB,UAAUE,KAKhBK,KAAMP,UAAUC,KAKhBpB,SAAUmB,UAAUE,KAKpBpB,YAAakB,UAAUQ,MAAM,CAAC,aAAc,sBAE/BC,EAAWpD,GAAQ,CAChCqD,KAAM,iBADOD,CAEZzC"}