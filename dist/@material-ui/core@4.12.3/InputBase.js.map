{"version":3,"file":"InputBase.js","sources":["../../../node_modules/@material-ui/core/es/InputBase/InputBase.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport TextareaAutosize from '../TextareaAutosize';\nimport { isFilled } from './utils';\nexport const styles = theme => {\n  const light = theme.palette.type === 'light';\n  const placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  const placeholderHidden = {\n    opacity: '0 !important'\n  };\n  const placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return {\n    '@global': {\n      '@keyframes mui-auto-fill': {},\n      '@keyframes mui-auto-fill-cancel': {}\n    },\n\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, {\n      color: theme.palette.text.primary,\n      lineHeight: '1.1876em',\n      // Reset (19px), match the native input line-height\n      boxSizing: 'border-box',\n      // Prevent padding issue with fullWidth.\n      position: 'relative',\n      cursor: 'text',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '&$disabled': {\n        color: theme.palette.text.disabled,\n        cursor: 'default'\n      }\n    }),\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {},\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {},\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: `${8 - 2}px 0 ${8 - 1}px`,\n      '&$marginDense': {\n        paddingTop: 4 - 1\n      }\n    },\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the `input` element. */\n    input: {\n      font: 'inherit',\n      letterSpacing: 'inherit',\n      color: 'currentColor',\n      padding: `${8 - 2}px 0 ${8 - 1}px`,\n      border: 0,\n      boxSizing: 'content-box',\n      background: 'none',\n      height: '1.1876em',\n      // Reset (19px), match the native input line-height\n      margin: 0,\n      // Reset for Safari\n      WebkitTapHighlightColor: 'transparent',\n      display: 'block',\n      // Make the flex item shrink with Firefox\n      minWidth: 0,\n      width: '100%',\n      // Fix IE 11 width issue\n      animationName: 'mui-auto-fill-cancel',\n      animationDuration: '10ms',\n      '&::-webkit-input-placeholder': placeholder,\n      '&::-moz-placeholder': placeholder,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholder,\n      // IE 11\n      '&::-ms-input-placeholder': placeholder,\n      // Edge\n      '&:focus': {\n        outline: 0\n      },\n      // Reset Firefox invalid required input style\n      '&:invalid': {\n        boxShadow: 'none'\n      },\n      '&::-webkit-search-decoration': {\n        // Remove the padding when type=search.\n        '-webkit-appearance': 'none'\n      },\n      // Show and hide the placeholder logic\n      'label[data-shrink=false] + $formControl &': {\n        '&::-webkit-input-placeholder': placeholderHidden,\n        '&::-moz-placeholder': placeholderHidden,\n        // Firefox 19+\n        '&:-ms-input-placeholder': placeholderHidden,\n        // IE 11\n        '&::-ms-input-placeholder': placeholderHidden,\n        // Edge\n        '&:focus::-webkit-input-placeholder': placeholderVisible,\n        '&:focus::-moz-placeholder': placeholderVisible,\n        // Firefox 19+\n        '&:focus:-ms-input-placeholder': placeholderVisible,\n        // IE 11\n        '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n      },\n      '&$disabled': {\n        opacity: 1 // Reset iOS opacity\n\n      },\n      '&:-webkit-autofill': {\n        animationDuration: '5000s',\n        animationName: 'mui-auto-fill'\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 4 - 1\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      height: 'auto',\n      resize: 'none',\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {\n      // Improve type search style.\n      '-moz-appearance': 'textfield',\n      '-webkit-appearance': 'textfield'\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {},\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {},\n\n    /* Styles applied to the `input` element if `hiddenLabel={true}`. */\n    inputHiddenLabel: {}\n  };\n};\nconst useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nconst InputBase = /*#__PURE__*/React.forwardRef(function InputBase(props, ref) {\n  const {\n    'aria-describedby': ariaDescribedby,\n    autoComplete,\n    autoFocus,\n    classes,\n    className,\n    defaultValue,\n    disabled,\n    endAdornment,\n    fullWidth = false,\n    id,\n    inputComponent = 'input',\n    inputProps: inputPropsProp = {},\n    inputRef: inputRefProp,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onClick,\n    onFocus,\n    onKeyDown,\n    onKeyUp,\n    placeholder,\n    readOnly,\n    renderSuffix,\n    rows,\n    rowsMax,\n    rowsMin,\n    maxRows,\n    minRows,\n    startAdornment,\n    type = 'text',\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"autoComplete\", \"autoFocus\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderSuffix\", \"rows\", \"rowsMax\", \"rowsMin\", \"maxRows\", \"minRows\", \"startAdornment\", \"type\", \"value\"]);\n\n  const value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef();\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['Material-UI: You have provided a `inputComponent` to the input component', 'that does not correctly handle the `inputRef` prop.', 'Make sure the `inputRef` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning);\n  const handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp);\n  const handleInputRef = useForkRef(inputRef, handleInputRefProp);\n  const [focused, setFocused] = React.useState(false);\n  const muiFormControl = useFormControl();\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (muiFormControl) {\n        return muiFormControl.registerEffect();\n      }\n\n      return undefined;\n    }, [muiFormControl]);\n  }\n\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'disabled', 'error', 'hiddenLabel', 'margin', 'required', 'filled']\n  });\n  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(() => {\n    if (!muiFormControl && disabled && focused) {\n      setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [muiFormControl, disabled, focused, onBlur]);\n  const onFilled = muiFormControl && muiFormControl.onFilled;\n  const onEmpty = muiFormControl && muiFormControl.onEmpty;\n  const checkDirty = React.useCallback(obj => {\n    if (isFilled(obj)) {\n      if (onFilled) {\n        onFilled();\n      }\n    } else if (onEmpty) {\n      onEmpty();\n    }\n  }, [onFilled, onEmpty]);\n  useEnhancedEffect(() => {\n    if (isControlled) {\n      checkDirty({\n        value\n      });\n    }\n  }, [value, checkDirty, isControlled]);\n\n  const handleFocus = event => {\n    // Fix a bug with IE 11 where the focus/blur events are triggered\n    // while the input is disabled.\n    if (fcs.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (inputPropsProp.onFocus) {\n      inputPropsProp.onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (inputPropsProp.onBlur) {\n      inputPropsProp.onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    } else {\n      setFocused(false);\n    }\n  };\n\n  const handleChange = (event, ...args) => {\n    if (!isControlled) {\n      const element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: Expected valid input target. Did you use a custom \\`inputComponent\\` and forget to forward refs? See https://material-ui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(1));\n      }\n\n      checkDirty({\n        value: element.value\n      });\n    }\n\n    if (inputPropsProp.onChange) {\n      inputPropsProp.onChange(event, ...args);\n    } // Perform in the willUpdate\n\n\n    if (onChange) {\n      onChange(event, ...args);\n    }\n  }; // Check the input state on mount, in case it was filled by the user\n  // or auto filled by the browser before the hydration (for SSR).\n\n\n  React.useEffect(() => {\n    checkDirty(inputRef.current);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleClick = event => {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  let InputComponent = inputComponent;\n\n  let inputProps = _extends({}, inputPropsProp, {\n    ref: handleInputRef\n  });\n\n  if (typeof InputComponent !== 'string') {\n    inputProps = _extends({\n      // Rename ref to inputRef as we don't know the\n      // provided `inputComponent` structure.\n      inputRef: handleInputRef,\n      type\n    }, inputProps, {\n      ref: null\n    });\n  } else if (multiline) {\n    if (rows && !maxRows && !minRows && !rowsMax && !rowsMin) {\n      InputComponent = 'textarea';\n    } else {\n      inputProps = _extends({\n        minRows: rows || minRows,\n        rowsMax,\n        maxRows\n      }, inputProps);\n      InputComponent = TextareaAutosize;\n    }\n  } else {\n    inputProps = _extends({\n      type\n    }, inputProps);\n  }\n\n  const handleAutoFill = event => {\n    // Provide a fake value as Chrome might not let you access it for security reasons.\n    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {\n      value: 'x'\n    });\n  };\n\n  React.useEffect(() => {\n    if (muiFormControl) {\n      muiFormControl.setAdornedStart(Boolean(startAdornment));\n    }\n  }, [muiFormControl, startAdornment]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[`color${capitalize(fcs.color || 'primary')}`], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd, fcs.margin === 'dense' && classes.marginDense),\n    onClick: handleClick,\n    ref: ref\n  }, other), startAdornment, /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-invalid\": fcs.error,\n    \"aria-describedby\": ariaDescribedby,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    disabled: fcs.disabled,\n    id: id,\n    onAnimationStart: handleAutoFill,\n    name: name,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: fcs.required,\n    rows: rows,\n    value: value,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp\n  }, inputProps, {\n    className: clsx(classes.input, inputPropsProp.className, fcs.disabled && classes.disabled, multiline && classes.inputMultiline, fcs.hiddenLabel && classes.inputHiddenLabel, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd, type === 'search' && classes.inputTypeSearch, fcs.margin === 'dense' && classes.inputMarginDense),\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus\n  }))), endAdornment, renderSuffix ? renderSuffix(_extends({}, fcs, {\n    startAdornment\n  })) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the input is blurred.\n   *\n   * Notice that the first argument (event) might be undefined.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderSuffix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   * @deprecated Use `minRows` instead.\n   */\n  rowsMin: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputBase'\n})(InputBase);"],"names":["styles","theme","light","palette","type","placeholder","color","opacity","transition","transitions","create","duration","shorter","placeholderHidden","placeholderVisible","root","_extends","typography","body1","text","primary","lineHeight","boxSizing","position","cursor","display","alignItems","disabled","formControl","focused","adornedStart","adornedEnd","error","marginDense","multiline","padding","paddingTop","colorSecondary","fullWidth","width","input","font","letterSpacing","border","background","height","margin","WebkitTapHighlightColor","minWidth","animationName","animationDuration","outline","boxShadow","inputMarginDense","inputMultiline","resize","inputTypeSearch","inputAdornedStart","inputAdornedEnd","inputHiddenLabel","useEnhancedEffect","window","React","useEffect","useLayoutEffect","InputBase","forwardRef","props","ref","ariaDescribedby","autoComplete","autoFocus","classes","className","defaultValue","endAdornment","id","inputComponent","inputProps","inputPropsProp","inputRef","inputRefProp","name","onBlur","onChange","onClick","onFocus","onKeyDown","onKeyUp","readOnly","renderSuffix","rows","rowsMax","rowsMin","maxRows","minRows","startAdornment","value","valueProp","other","_objectWithoutPropertiesLoose","current","isControlled","useRef","handleInputRefWarning","useCallback","instance","process","env","NODE_ENV","nodeName","focus","console","join","handleInputPropsRefProp","useForkRef","handleInputRefProp","handleInputRef","setFocused","useState","muiFormControl","useFormControl","registerEffect","fcs","formControlState","states","onFilled","onEmpty","checkDirty","obj","isFilled","InputComponent","TextareaAutosize","setAdornedStart","Boolean","createElement","clsx","capitalize","event","currentTarget","target","FormControlContext","Provider","onAnimationStart","required","hiddenLabel","args","element","Error","_formatMuiErrorMessage","stopPropagation","propTypes","PropTypes","string","bool","object","oneOf","any","node","elementType","refType","oneOfType","number","func","withStyles"],"mappings":"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"}