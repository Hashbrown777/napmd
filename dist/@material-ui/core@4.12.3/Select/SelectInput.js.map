{"version":3,"file":"SelectInput.js","sources":["../../../../node_modules/@material-ui/core/es/Select/SelectInput.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport { refType } from '@material-ui/utils';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\n * @ignore - internal component.\n */\n\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n    'aria-label': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    classes,\n    className,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp,\n    value: valueProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const [openState, setOpenState] = React.useState(false);\n  const handleRef = useForkRef(ref, inputRefProp);\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayNode.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [displayNode, value]);\n  React.useEffect(() => {\n    if (autoFocus && displayNode) {\n      displayNode.focus();\n    }\n  }, [autoFocus, displayNode]);\n  React.useEffect(() => {\n    if (displayNode) {\n      const label = ownerDocument(displayNode).getElementById(labelId);\n\n      if (label) {\n        const handler = () => {\n          if (getSelection().isCollapsed) {\n            displayNode.focus();\n          }\n        };\n\n        label.addEventListener('click', handler);\n        return () => {\n          label.removeEventListener('click', handler);\n        };\n      }\n    }\n\n    return undefined;\n  }, [labelId, displayNode]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayNode.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n\n    if (index === -1) {\n      return;\n    }\n\n    const child = childrenArray[index];\n    setValue(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    if (!multiple) {\n      update(false, event);\n    }\n\n    let newValue;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value === newValue) {\n      return;\n    }\n\n    setValue(newValue);\n\n    if (onChange) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value: newValue,\n          name\n        }\n      });\n      onChange(event, child);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`Material-UI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes.selectMenu, classes[variant], className, disabled && classes.disabled),\n    ref: setDisplayNode,\n    tabIndex: tabIndex,\n    role: \"button\",\n    \"aria-disabled\": disabled ? 'true' : undefined,\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n    onKeyDown: handleKeyDown,\n    onMouseDown: disabled || readOnly ? null : handleMouseDown,\n    onBlur: handleBlur,\n    onFocus: onFocus\n  }, SelectDisplayProps, {\n    // The id is required for proper a11y\n    id: buttonId\n  }), isEmpty(display) ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : display), /*#__PURE__*/React.createElement(\"input\", _extends({\n    value: Array.isArray(value) ? value.join(',') : value,\n    name: name,\n    ref: inputRef,\n    \"aria-hidden\": true,\n    onChange: handleChange,\n    tabIndex: -1,\n    className: classes.nativeInput,\n    autoFocus: autoFocus\n  }, other)), /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[`icon${capitalize(variant)}`], open && classes.iconOpen, disabled && classes.disabled)\n  }), /*#__PURE__*/React.createElement(Menu, _extends({\n    id: `menu-${name || ''}`,\n    anchorEl: displayNode,\n    open: open,\n    onClose: handleClose\n  }, MenuProps, {\n    MenuListProps: _extends({\n      'aria-labelledby': labelId,\n      role: 'listbox',\n      disableListWrap: true\n    }, MenuProps.MenuListProps),\n    PaperProps: _extends({}, MenuProps.PaperProps, {\n      style: _extends({\n        minWidth: menuMinWidth\n      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n    })\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control `select` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;"],"names":["areEqualValues","a","b","String","SelectInput","React","forwardRef","props","ref","ariaLabel","autoFocus","autoWidth","children","classes","className","defaultValue","disabled","displayEmpty","IconComponent","inputRef","inputRefProp","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","openProp","readOnly","renderValue","SelectDisplayProps","tabIndex","tabIndexProp","value","valueProp","variant","other","_objectWithoutPropertiesLoose","setValue","useControlled","controlled","default","useRef","displayNode","setDisplayNode","useState","current","isOpenControlled","menuMinWidthState","setMenuMinWidthState","openState","setOpenState","handleRef","useForkRef","useImperativeHandle","focus","node","useEffect","label","ownerDocument","getElementById","handler","getSelection","isCollapsed","addEventListener","removeEventListener","update","event","clientWidth","childrenArray","Children","toArray","handleItemClick","child","newValue","Array","isArray","slice","itemIndex","indexOf","push","splice","onClick","persist","Object","defineProperty","writable","display","displaySingle","displayMultiple","computeDisplay","foundMatch","isFilled","items","map","isValidElement","selected","process","env","NODE_ENV","isFragment","console","error","join","Error","_formatMuiErrorMessage","some","v","cloneElement","undefined","onKeyUp","key","preventDefault","role","values","warn","filter","x","menuMinWidth","buttonId","id","createElement","Fragment","_extends","clsx","root","select","selectMenu","Boolean","onKeyDown","onMouseDown","button","trim","isEmpty","dangerouslySetInnerHTML","__html","index","target","nativeInput","icon","capitalize","iconOpen","Menu","anchorEl","MenuListProps","disableListWrap","PaperProps","style","minWidth","propTypes","PropTypes","string","bool","object","isRequired","any","elementType","refType","func","oneOfType","number","type","oneOf"],"mappings":"qsDAeA,SAASA,GAAeC,EAAGC,GACzB,MAAiB,iBAANA,GAAwB,OAANA,EACpBD,IAAMC,EAGRC,OAAOF,KAAOE,OAAOD,SAWxBE,GAA2BC,GAAMC,YAAW,SAAqBC,EAAOC,GAC5E,MACE,aAAcC,EAASC,UACvBA,EAASC,UACTA,EAASC,SACTA,EAAQC,QACRA,EAAOC,UACPA,EAASC,aACTA,EAAYC,SACZA,EAAQC,aACRA,EAAYC,cACZA,EACAC,SAAUC,EAAYC,QACtBA,EAAOC,UACPA,EAAY,GAAEC,SACdA,EAAQC,KACRA,EAAIC,OACJA,EAAMC,SACNA,EAAQC,QACRA,EAAOC,QACPA,EAAOC,OACPA,EACAC,KAAMC,EAAQC,SACdA,EAAQC,YACRA,EAAWC,mBACXA,EAAqB,GACrBC,SAAUC,EACVC,MAAOC,EAASC,QAChBA,EAAU,YACRhC,EACEiC,EAAQC,gCAA8BlC,EAAO,CAAC,aAAc,YAAa,YAAa,WAAY,UAAW,YAAa,eAAgB,WAAY,eAAgB,gBAAiB,WAAY,UAAW,YAAa,WAAY,OAAQ,SAAU,WAAY,UAAW,UAAW,SAAU,OAAQ,WAAY,cAAe,qBAAsB,WAAY,OAAQ,QAAS,aAE1X8B,EAAOK,GAAYC,EAAc,CACtCC,WAAYN,EACZO,QAAS9B,EACTS,KAAM,WAEFL,EAAWd,GAAMyC,OAAO,OACvBC,EAAaC,GAAkB3C,GAAM4C,SAAS,OAEnDC,QAASC,GACP9C,GAAMyC,OAAmB,MAAZf,IACVqB,EAAmBC,GAAwBhD,GAAM4C,YACjDK,EAAWC,GAAgBlD,GAAM4C,UAAS,GAC3CO,EAAYC,EAAWjD,EAAKY,GAClCf,GAAMqD,oBAAoBF,GAAW,MACnCG,MAAO,KACLZ,EAAYY,SAEdC,KAAMzC,EAAS+B,QACfb,MAAAA,KACE,CAACU,EAAaV,IAClBhC,GAAMwD,WAAU,KACVnD,GAAaqC,GACfA,EAAYY,UAEb,CAACjD,EAAWqC,IACf1C,GAAMwD,WAAU,KACd,GAAId,EAAa,CACf,MAAMe,EAAQC,EAAchB,GAAaiB,eAAe3C,GAExD,GAAIyC,EAAO,CACT,MAAMG,EAAU,KACVC,eAAeC,aACjBpB,EAAYY,SAKhB,OADAG,EAAMM,iBAAiB,QAASH,GACzB,KACLH,EAAMO,oBAAoB,QAASJ,QAMxC,CAAC5C,EAAS0B,IAEb,MAAMuB,EAAS,CAACxC,EAAMyC,KAChBzC,EACED,GACFA,EAAO0C,GAEA5C,GACTA,EAAQ4C,GAGLpB,IACHE,EAAqB1C,EAAY,KAAOoC,EAAYyB,aACpDjB,EAAazB,KAoBX2C,EAAgBpE,GAAMqE,SAASC,QAAQ/D,GAiBvCgE,EAAkBC,GAASN,IAK/B,IAAIO,EAEJ,GANKvD,GACH+C,GAAO,EAAOC,GAKZhD,EAAU,CACZuD,EAAWC,MAAMC,QAAQ3C,GAASA,EAAM4C,QAAU,GAClD,MAAMC,EAAY7C,EAAM8C,QAAQN,EAAMtE,MAAM8B,QAEzB,IAAf6C,EACFJ,EAASM,KAAKP,EAAMtE,MAAM8B,OAE1ByC,EAASO,OAAOH,EAAW,QAG7BJ,EAAWD,EAAMtE,MAAM8B,MAGrBwC,EAAMtE,MAAM+E,SACdT,EAAMtE,MAAM+E,QAAQf,GAGlBlC,IAAUyC,IAIdpC,EAASoC,GAELpD,IACF6C,EAAMgB,UAENC,OAAOC,eAAelB,EAAO,SAAU,CACrCmB,UAAU,EACVrD,MAAO,CACLA,MAAOyC,EACPtD,KAAAA,KAGJE,EAAS6C,EAAOM,MAiBd/C,GAAuB,OAAhBiB,IAAyBI,EAAmBpB,EAAWuB,GAmBpE,IAAIqC,GACAC,UAFGpD,EAAM,gBAGb,MAAMqD,GAAkB,GACxB,IAAIC,IAAiB,EACjBC,IAAa,GAEbC,WAAS,CACX3D,MAAAA,KACIpB,KACAgB,EACF0D,GAAU1D,EAAYI,GAEtByD,IAAiB,GAIrB,MAAMG,GAAQxB,EAAcyB,KAAIrB,IAC9B,IAAmBxE,GAAM8F,eAAetB,GACtC,OAAO,KAST,IAAIuB,EAEJ,GAR6B,eAAzBC,QAAQC,IAAIC,UACVC,aAAW3B,IACb4B,QAAQC,MAAM,CAAC,0EAA2E,wCAAwCC,KAAK,OAMvIpF,EAAU,CACZ,IAAKwD,MAAMC,QAAQ3C,GACjB,MAAM,IAAIuE,MAA+B,eAAzBP,QAAQC,IAAIC,SAA4B,oGAA4GM,wBAAuB,IAG7LT,EAAW/D,EAAMyE,MAAKC,GAAK/G,GAAe+G,EAAGlC,EAAMtE,MAAM8B,SAErD+D,GAAYN,IACdD,GAAgBT,KAAKP,EAAMtE,MAAMK,eAGnCwF,EAAWpG,GAAeqC,EAAOwC,EAAMtE,MAAM8B,OAEzC+D,GAAYN,KACdF,GAAgBf,EAAMtE,MAAMK,UAQhC,OAJIwF,IACFL,IAAa,GAGK1F,GAAM2G,aAAanC,EAAO,CAC5C,gBAAiBuB,EAAW,YAASa,EACrC3B,QAASV,EAAgBC,GACzBqC,QAAS3C,IACW,MAAdA,EAAM4C,KAIR5C,EAAM6C,iBAGJvC,EAAMtE,MAAM2G,SACdrC,EAAMtE,MAAM2G,QAAQ3C,IAGxB8C,KAAM,SACNjB,SAAAA,EACA/D,WAAO4E,EAEP,aAAcpC,EAAMtE,MAAM8B,WAKD,eAAzBgE,QAAQC,IAAIC,UAEdlG,GAAMwD,WAAU,KACd,IAAKkC,KAAexE,GAAsB,KAAVc,EAAc,CAC5C,MAAMiF,EAAS7C,EAAcyB,KAAIrB,GAASA,EAAMtE,MAAM8B,QACtDoE,QAAQc,KAAK,CAAC,0DAA0DlF,sBAA0Bb,EAAO,UAAUA,OAAY,eAAgB,8EAA+E,4BAA4B8F,EAAOE,QAAOC,GAAU,MAALA,IAAWvB,KAAIuB,GAAK,KAAKA,QAAOd,KAAK,OAAS,SAASA,KAAK,UAE1U,CAACZ,GAAYtB,EAAelD,EAAUC,EAAMa,IAG7CyD,KACFH,GAAUpE,EAAWsE,GAAgBc,KAAK,MAAQf,IAIpD,IAMIzD,GANAuF,GAAetE,GAEdzC,GAAawC,GAAoBJ,IACpC2E,GAAe3E,EAAYyB,aAM3BrC,QAD0B,IAAjBC,EACEA,EAEApB,EAAW,KAAO,EAG/B,MAAM2G,GAAWzF,EAAmB0F,KAAOpG,EAAO,wBAAwBA,SAASyF,GACnF,OAAoB5G,GAAMwH,cAAcxH,GAAMyH,SAAU,KAAmBzH,GAAMwH,cAAc,MAAOE,WAAS,CAC7GjH,UAAWkH,WAAKnH,EAAQoH,KACxBpH,EAAQqH,OAAQrH,EAAQsH,WAAYtH,EAAQ0B,GAAUzB,EAAWE,GAAYH,EAAQG,UACrFR,IAAKwC,EACLb,SAAUA,GACVkF,KAAM,SACN,gBAAiBrG,EAAW,YAASiG,EACrC,gBAAiBnF,GAAO,YAASmF,EACjC,gBAAiB,UACjB,aAAcxG,EACd,kBAAmB,CAACY,EAASsG,IAAUH,OAAOY,SAASzB,KAAK,WAAQM,EACpEoB,UApJoB9D,IACpB,IAAKvC,EAAU,EAKyB,IAJpB,CAAC,IAAK,UAAW,YAEnC,SAEcmD,QAAQZ,EAAM4C,OAC1B5C,EAAM6C,iBACN9C,GAAO,EAAMC,MA6IjB+D,YAAatH,GAAYgB,EAAW,KAlOduC,IAED,IAAjBA,EAAMgE,SAKVhE,EAAM6C,iBACNrE,EAAYY,QACZW,GAAO,EAAMC,KA0Nb9C,OAvIiB8C,KAEZzC,IAAQL,IACX8C,EAAMgB,UAENC,OAAOC,eAAelB,EAAO,SAAU,CACrCmB,UAAU,EACVrD,MAAO,CACLA,MAAAA,EACAb,KAAAA,KAGJC,EAAO8C,KA4HT3C,QAASA,GACRM,EAAoB,CAErB0F,GAAID,KA5UR,SAAiBhC,GACf,OAAkB,MAAXA,GAAsC,iBAAZA,IAAyBA,EAAQ6C,OA4U9DC,CAAQ9C,IAGZtF,GAAMwH,cAAc,OAAQ,CAC1Ba,wBAAyB,CACvBC,OAAQ,aAEPhD,IAAuBtF,GAAMwH,cAAc,QAASE,WAAS,CAChE1F,MAAO0C,MAAMC,QAAQ3C,GAASA,EAAMsE,KAAK,KAAOtE,EAChDb,KAAMA,EACNhB,IAAKW,EACL,eAAe,EACfO,SAlOmB6C,IACnB,MAAMqE,EAAQnE,EAAcyB,KAAIrB,GAASA,EAAMtE,MAAM8B,QAAO8C,QAAQZ,EAAMsE,OAAOxG,OAEjF,IAAe,IAAXuG,EACF,OAGF,MAAM/D,EAAQJ,EAAcmE,GAC5BlG,EAASmC,EAAMtE,MAAM8B,OAEjBX,GACFA,EAAS6C,EAAOM,IAwNlB1C,UAAW,EACXrB,UAAWD,EAAQiI,YACnBpI,UAAWA,GACV8B,IAAsBnC,GAAMwH,cAAc3G,EAAe,CAC1DJ,UAAWkH,WAAKnH,EAAQkI,KAAMlI,EAAQ,OAAOmI,EAAWzG,MAAaT,IAAQjB,EAAQoI,SAAUjI,GAAYH,EAAQG,YACpGX,GAAMwH,cAAcqB,UAAMnB,WAAS,CAClDH,GAAI,QAAQpG,GAAQ,KACpB2H,SAAUpG,EACVjB,KAAMA,GACNH,QAlPkB4C,IAClBD,GAAO,EAAOC,KAkPbjD,EAAW,CACZ8H,cAAerB,WAAS,CACtB,kBAAmB1G,EACnBgG,KAAM,UACNgC,iBAAiB,GAChB/H,EAAU8H,eACbE,WAAYvB,WAAS,GAAIzG,EAAUgI,WAAY,CAC7CC,MAAOxB,WAAS,CACdyB,SAAU9B,IACe,MAAxBpG,EAAUgI,WAAqBhI,EAAUgI,WAAWC,MAAQ,UAE/DtD,cAEmB,eAAzBI,QAAQC,IAAIC,WAA4BnG,GAAYqJ,UAAY,CAI9D,aAAcC,WAAUC,OAKxBjJ,UAAWgJ,WAAUE,KAMrBjJ,UAAW+I,WAAUE,KAMrBhJ,SAAU8I,WAAU9F,KAMpB/C,QAAS6I,WAAUG,OAAOC,WAK1BhJ,UAAW4I,WAAUC,OAKrB5I,aAAc2I,WAAUK,IAKxB/I,SAAU0I,WAAUE,KAKpB3I,aAAcyI,WAAUE,KAKxB1I,cAAewI,WAAUM,YAAYF,WAMrC3I,SAAU8I,UAMV5I,QAASqI,WAAUC,OAKnBrI,UAAWoI,WAAUG,OAKrBtI,SAAUmI,WAAUE,KAKpBpI,KAAMkI,WAAUC,OAKhBlI,OAAQiI,WAAUQ,KASlBxI,SAAUgI,WAAUQ,KAQpBvI,QAAS+H,WAAUQ,KAKnBtI,QAAS8H,WAAUQ,KAQnBrI,OAAQ6H,WAAUQ,KAKlBpI,KAAM4H,WAAUE,KAKhB5H,SAAU0H,WAAUE,KAQpB3H,YAAayH,WAAUQ,KAKvBhI,mBAAoBwH,WAAUG,OAK9B1H,SAAUuH,WAAUS,UAAU,CAACT,WAAUU,OAAQV,WAAUC,SAK3DU,KAAMX,WAAUK,IAKhB1H,MAAOqH,WAAUK,IAKjBxH,QAASmH,WAAUY,MAAM,CAAC,WAAY,WAAY"}