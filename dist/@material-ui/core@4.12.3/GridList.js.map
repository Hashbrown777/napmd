{"version":3,"file":"GridList.js","sources":["../../../node_modules/@material-ui/core/es/GridList/GridList.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflowY: 'auto',\n    listStyle: 'none',\n    padding: 0,\n    WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n  }\n};\nlet warnedOnce = false;\n/**\n * ⚠️ The GridList component was renamed to ImageList to align with the current Material Design naming.\n *\n * You should use `import { ImageList } from '@material-ui/core'`\n * or `import ImageList from '@material-ui/core/ImageList'`.\n */\n\nconst GridList = /*#__PURE__*/React.forwardRef(function GridList(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: The GridList component was renamed to ImageList to align with the current Material Design naming.', '', \"You should use `import { ImageList } from '@material-ui/core'`\", \"or `import ImageList from '@material-ui/core/ImageList'`.\"].join('\\n'));\n    }\n  }\n\n  const {\n    cellHeight = 180,\n    children,\n    classes,\n    className,\n    cols = 2,\n    component: Component = 'ul',\n    spacing = 4,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"cellHeight\", \"children\", \"classes\", \"className\", \"cols\", \"component\", \"spacing\", \"style\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    style: _extends({\n      margin: -spacing / 2\n    }, style)\n  }, other), React.Children.map(children, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The GridList component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childCols = child.props.cols || 1;\n    const childRows = child.props.rows || 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      style: _extends({\n        width: `${100 / cols * childCols}%`,\n        height: cellHeight === 'auto' ? 'auto' : cellHeight * childRows + spacing,\n        padding: spacing / 2\n      }, child.props.style)\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridList.propTypes = {\n  /**\n   * Number of px for one cell height.\n   * You can set `'auto'` if you want to let the children determine the height.\n   */\n  cellHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n\n  /**\n   * Grid Tiles that will be in Grid List.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   */\n  cols: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Number of px for the spacing between tiles.\n   */\n  spacing: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridList'\n})(GridList);"],"names":["styles","root","display","flexWrap","overflowY","listStyle","padding","WebkitOverflowScrolling","warnedOnce","GridList","React","forwardRef","props","ref","process","env","NODE_ENV","console","error","join","cellHeight","children","classes","className","cols","component","Component","spacing","style","other","_objectWithoutPropertiesLoose","createElement","_extends","clsx","margin","Children","map","child","isValidElement","isFragment","childCols","childRows","rows","cloneElement","width","height","propTypes","PropTypes","oneOfType","number","oneOf","node","isRequired","object","string","elementType","withStyles","name"],"mappings":"qkCAOaA,EAAS,CAEpBC,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,UAAW,OACXC,UAAW,OACXC,QAAS,EACTC,wBAAyB,UAI7B,IAAIC,GAAa,EAQjB,MAAMC,EAAwBC,EAAMC,YAAW,SAAkBC,EAAOC,GACzC,eAAzBC,QAAQC,IAAIC,WACTR,IACHA,GAAa,EACbS,QAAQC,MAAM,CAAC,iHAAkH,GAAI,iEAAkE,6DAA6DC,KAAK,SAI7Q,MAAMC,WACJA,EAAa,IAAGC,SAChBA,EAAQC,QACRA,EAAOC,UACPA,EAASC,KACTA,EAAO,EACPC,UAAWC,EAAY,KAAIC,QAC3BA,EAAU,EAACC,MACXA,GACEhB,EACEiB,EAAQC,gCAA8BlB,EAAO,CAAC,aAAc,WAAY,UAAW,YAAa,OAAQ,YAAa,UAAW,UAEtI,OAAoBF,EAAMqB,cAAcL,EAAWM,WAAS,CAC1DT,UAAWU,UAAKX,EAAQrB,KAAMsB,GAC9BV,IAAKA,EACLe,MAAOI,WAAS,CACdE,QAASP,EAAU,GAClBC,IACFC,GAAQnB,EAAMyB,SAASC,IAAIf,GAAUgB,IACtC,IAAmB3B,EAAM4B,eAAeD,GACtC,OAAO,KAGoB,eAAzBvB,QAAQC,IAAIC,UACVuB,aAAWF,IACbpB,QAAQC,MAAM,CAAC,4EAA6E,wCAAwCC,KAAK,OAI7I,MAAMqB,EAAYH,EAAMzB,MAAMY,MAAQ,EAChCiB,EAAYJ,EAAMzB,MAAM8B,MAAQ,EACtC,OAAoBhC,EAAMiC,aAAaN,EAAO,CAC5CT,MAAOI,WAAS,CACdY,MAAU,IAAMpB,EAAOgB,EAAhB,IACPK,OAAuB,SAAfzB,EAAwB,OAASA,EAAaqB,EAAYd,EAClErB,QAASqB,EAAU,GAClBU,EAAMzB,MAAMgB,gBAII,eAAzBd,QAAQC,IAAIC,WAA4BP,EAASqC,UAAY,CAK3D1B,WAAY2B,UAAUC,UAAU,CAACD,UAAUE,OAAQF,UAAUG,MAAM,CAAC,WAKpE7B,SAAU0B,UAAUI,KAAKC,WAMzB9B,QAASyB,UAAUM,OAAOD,WAK1B7B,UAAWwB,UAAUO,OAKrB9B,KAAMuB,UAAUE,OAMhBxB,UAAWsB,UAEVQ,YAKD5B,QAASoB,UAAUE,OAKnBrB,MAAOmB,UAAUM,eAEJG,EAAWxD,EAAQ,CAChCyD,KAAM,eADOD,CAEZ/C"}