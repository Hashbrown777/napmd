{"version":3,"file":"SvgIcon.js","sources":["../../../node_modules/@material-ui/core/es/SvgIcon/SvgIcon.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    fill: 'currentColor',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(24),\n    transition: theme.transitions.create('fill', {\n      duration: theme.transitions.duration.shorter\n    })\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main\n  },\n\n  /* Styles applied to the root element if `color=\"action\"`. */\n  colorAction: {\n    color: theme.palette.action.active\n  },\n\n  /* Styles applied to the root element if `color=\"error\"`. */\n  colorError: {\n    color: theme.palette.error.main\n  },\n\n  /* Styles applied to the root element if `color=\"disabled\"`. */\n  colorDisabled: {\n    color: theme.palette.action.disabled\n  },\n\n  /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n  fontSizeInherit: {\n    fontSize: 'inherit'\n  },\n\n  /* Styles applied to the root element if `fontSize=\"small\"`. */\n  fontSizeSmall: {\n    fontSize: theme.typography.pxToRem(20)\n  },\n\n  /* Styles applied to the root element if `fontSize=\"large\"`. */\n  fontSizeLarge: {\n    fontSize: theme.typography.pxToRem(35)\n  }\n});\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'inherit',\n    component: Component = 'svg',\n    fontSize = 'medium',\n    htmlColor,\n    titleAccess,\n    viewBox = '0 0 24 24'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[`color${capitalize(color)}`], fontSize !== 'default' && fontSize !== 'medium' && classes[`fontSize${capitalize(fontSize)}`]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: chainPropTypes(PropTypes.oneOf(['default', 'inherit', 'large', 'medium', 'small']), props => {\n    const {\n      fontSize\n    } = props;\n\n    if (fontSize === 'default') {\n      throw new Error('Material-UI: `fontSize=\"default\"` is deprecated. Use `fontSize=\"medium\"` instead.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);"],"names":["styles","theme","root","userSelect","width","height","display","fill","flexShrink","fontSize","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","color","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","SvgIcon","React","forwardRef","props","ref","children","classes","className","component","Component","htmlColor","titleAccess","viewBox","other","_objectWithoutPropertiesLoose","createElement","_extends","clsx","capitalize","focusable","undefined","role","process","env","NODE_ENV","propTypes","PropTypes","node","object","string","oneOf","elementType","chainPropTypes","Error","shapeRendering","muiName","withStyles","name"],"mappings":"+kCAQaA,EAASC,KAEpBC,KAAM,CACJC,WAAY,OACZC,MAAO,MACPC,OAAQ,MACRC,QAAS,eACTC,KAAM,eACNC,WAAY,EACZC,SAAUR,EAAMS,WAAWC,QAAQ,IACnCC,WAAYX,EAAMY,YAAYC,OAAO,OAAQ,CAC3CC,SAAUd,EAAMY,YAAYE,SAASC,WAKzCC,aAAc,CACZC,MAAOjB,EAAMkB,QAAQC,QAAQC,MAI/BC,eAAgB,CACdJ,MAAOjB,EAAMkB,QAAQI,UAAUF,MAIjCG,YAAa,CACXN,MAAOjB,EAAMkB,QAAQM,OAAOC,QAI9BC,WAAY,CACVT,MAAOjB,EAAMkB,QAAQS,MAAMP,MAI7BQ,cAAe,CACbX,MAAOjB,EAAMkB,QAAQM,OAAOK,UAI9BC,gBAAiB,CACftB,SAAU,WAIZuB,cAAe,CACbvB,SAAUR,EAAMS,WAAWC,QAAQ,KAIrCsB,cAAe,CACbxB,SAAUR,EAAMS,WAAWC,QAAQ,OAGjCuB,EAAuBC,EAAMC,YAAW,SAAiBC,EAAOC,GACpE,MAAMC,SACJA,EAAQC,QACRA,EAAOC,UACPA,EAASvB,MACTA,EAAQ,UACRwB,UAAWC,EAAY,MAAKlC,SAC5BA,EAAW,SAAQmC,UACnBA,EAASC,YACTA,EAAWC,QACXA,EAAU,aACRT,EACEU,EAAQC,gCAA8BX,EAAO,CAAC,WAAY,UAAW,YAAa,QAAS,YAAa,WAAY,YAAa,cAAe,YAEtJ,OAAoBF,EAAMc,cAAcN,EAAWO,WAAS,CAC1DT,UAAWU,UAAKX,EAAQtC,KAAMuC,EAAqB,YAAVvB,GAAuBsB,EAAQ,QAAQY,EAAWlC,MAAwB,YAAbT,GAAuC,WAAbA,GAAyB+B,EAAQ,WAAWY,EAAW3C,OACvL4C,UAAW,QACXP,QAASA,EACT5B,MAAO0B,EACP,eAAeC,QAAcS,EAC7BC,KAAMV,EAAc,WAAQS,EAC5BhB,IAAKA,GACJS,GAAQR,EAAUM,EAA2BV,EAAMc,cAAc,QAAS,KAAMJ,GAAe,SAE3E,eAAzBW,QAAQC,IAAIC,WAA4BxB,EAAQyB,UAAY,CAS1DpB,SAAUqB,UAAUC,KAMpBrB,QAASoB,UAAUE,OAKnBrB,UAAWmB,UAAUG,OAMrB7C,MAAO0C,UAAUI,MAAM,CAAC,SAAU,WAAY,QAAS,UAAW,UAAW,cAM7EtB,UAAWkB,UAEVK,YAKDxD,SAAUyD,iBAAeN,UAAUI,MAAM,CAAC,UAAW,UAAW,QAAS,SAAU,WAAW3B,IAC5F,MAAM5B,SACJA,GACE4B,EAEJ,GAAiB,YAAb5B,EACF,MAAM,IAAI0D,MAAM,qFAGlB,OAAO,QAMTvB,UAAWgB,UAAUG,OAOrBK,eAAgBR,UAAUG,OAM1BlB,YAAae,UAAUG,OASvBjB,QAASc,UAAUG,SAErB7B,EAAQmC,QAAU,gBACHC,EAAWtE,EAAQ,CAChCuE,KAAM,cADOD,CAEZpC"}