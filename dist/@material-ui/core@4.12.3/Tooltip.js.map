{"version":3,"file":"Tooltip.js","sources":["../../../node_modules/@material-ui/core/es/Tooltip/Tooltip.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementAcceptingRef } from '@material-ui/utils';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/unstable_useId';\nimport setRef from '../utils/setRef';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport useTheme from '../styles/useTheme';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nfunction arrowGenerator() {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '0 100%'\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '100% 0'\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '100% 100%'\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '0 0'\n      }\n    }\n  };\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the Popper component. */\n  popper: {\n    zIndex: theme.zIndex.tooltip,\n    pointerEvents: 'none' // disable jss-rtl plugin\n\n  },\n\n  /* Styles applied to the Popper component if `interactive={true}`. */\n  popperInteractive: {\n    pointerEvents: 'auto'\n  },\n\n  /* Styles applied to the Popper component if `arrow={true}`. */\n  popperArrow: arrowGenerator(),\n\n  /* Styles applied to the tooltip (label wrapper) element. */\n  tooltip: {\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(10),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */\n  tooltipArrow: {\n    position: 'relative',\n    margin: '0'\n  },\n\n  /* Styles applied to the arrow element. */\n  arrow: {\n    overflow: 'hidden',\n    position: 'absolute',\n    width: '1em',\n    height: '0.71em'\n    /* = width / sqrt(2) = (length of the hypotenuse) */\n    ,\n    boxSizing: 'border-box',\n    color: alpha(theme.palette.grey[700], 0.9),\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'currentColor',\n      transform: 'rotate(45deg)'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n  touch: {\n    padding: '8px 16px',\n    fontSize: theme.typography.pxToRem(14),\n    lineHeight: `${round(16 / 14)}em`,\n    fontWeight: theme.typography.fontWeightRegular\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n  tooltipPlacementLeft: {\n    transformOrigin: 'right center',\n    margin: '0 24px ',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n  tooltipPlacementRight: {\n    transformOrigin: 'left center',\n    margin: '0 24px',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n  tooltipPlacementTop: {\n    transformOrigin: 'center bottom',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n  tooltipPlacementBottom: {\n    transformOrigin: 'center top',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  }\n});\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(props, ref) {\n  const {\n    arrow = false,\n    children,\n    classes,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    id: idProp,\n    interactive = false,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent = Popper,\n    PopperProps,\n    title,\n    TransitionComponent = Grow,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"arrow\", \"children\", \"classes\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"id\", \"interactive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const theme = useTheme();\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  const id = useId(idProp);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      clearTimeout(touchTimer.current);\n    };\n  }, []);\n\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleEnter = (forward = true) => event => {\n    const childrenProps = children.props;\n\n    if (event.type === 'mouseover' && childrenProps.onMouseOver && forward) {\n      childrenProps.onMouseOver(event);\n    }\n\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      event.persist();\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const {\n    isFocusVisible,\n    onBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [childIsFocusVisible, setChildIsFocusVisible] = React.useState(false);\n\n  const handleBlur = () => {\n    if (childIsFocusVisible) {\n      setChildIsFocusVisible(false);\n      onBlurVisible();\n    }\n  };\n\n  const handleFocus = (forward = true) => event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    if (isFocusVisible(event)) {\n      setChildIsFocusVisible(true);\n      handleEnter()(event);\n    }\n\n    const childrenProps = children.props;\n\n    if (childrenProps.onFocus && forward) {\n      childrenProps.onFocus(event);\n    }\n  };\n\n  const handleClose = event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  };\n\n  const handleLeave = (forward = true) => event => {\n    const childrenProps = children.props;\n\n    if (event.type === 'blur') {\n      if (childrenProps.onBlur && forward) {\n        childrenProps.onBlur(event);\n      }\n\n      handleBlur();\n    }\n\n    if (event.type === 'mouseleave' && childrenProps.onMouseLeave && event.currentTarget === childNode) {\n      childrenProps.onMouseLeave(event);\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    clearTimeout(touchTimer.current);\n    event.persist();\n    touchTimer.current = setTimeout(() => {\n      handleEnter()(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef); // can be removed once we drop support for non ref forwarding class components\n\n  const handleOwnRef = React.useCallback(instance => {\n    // #StrictMode ready\n    setRef(handleFocusRef, ReactDOM.findDOMNode(instance));\n  }, [handleFocusRef]);\n  const handleRef = useForkRef(children.ref, handleOwnRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  } // For accessibility and SEO concerns, we render the title to the DOM node when\n  // the tooltip is hidden. However, we have made a tradeoff when\n  // `disableHoverListener` is set. This title logic is disabled.\n  // It's allowing us to keep the implementation size minimal.\n  // We are open to change the tradeoff.\n\n\n  const shouldShowNativeTitle = !open && !disableHoverListener;\n\n  const childrenProps = _extends({\n    'aria-describedby': open ? id : null,\n    title: shouldShowNativeTitle && typeof title === 'string' ? title : null\n  }, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  });\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = handleEnter();\n    childrenProps.onMouseLeave = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onMouseOver = handleEnter(false);\n      interactiveWrapperListeners.onMouseLeave = handleLeave(false);\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = handleFocus();\n    childrenProps.onBlur = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onFocus = handleFocus(false);\n      interactiveWrapperListeners.onBlur = handleLeave(false);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n\n  const mergedPopperProps = React.useMemo(() => {\n    return deepmerge({\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      }\n    }, PopperProps);\n  }, [arrowRef, PopperProps]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/React.createElement(PopperComponent, _extends({\n    className: clsx(classes.popper, interactive && classes.popperInteractive, arrow && classes.popperArrow),\n    placement: placement,\n    anchorEl: childNode,\n    open: childNode ? open : false,\n    id: childrenProps['aria-describedby'],\n    transition: true\n  }, interactiveWrapperListeners, mergedPopperProps), ({\n    placement: placementInner,\n    TransitionProps: TransitionPropsInner\n  }) => /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    timeout: theme.transitions.duration.shorter\n  }, TransitionPropsInner, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.tooltip, classes[`tooltipPlacement${capitalize(placementInner.split('-')[0])}`], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)\n  }, title, arrow ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.arrow,\n    ref: setArrowRef\n  }) : null))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Makes a tooltip interactive, i.e. will not close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   */\n  interactive: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  flip: false\n})(Tooltip);"],"names":["round","value","Math","styles","theme","popper","zIndex","tooltip","pointerEvents","popperInteractive","popperArrow","top","left","marginTop","marginLeft","marginRight","transformOrigin","bottom","marginBottom","height","width","right","backgroundColor","alpha","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","pxToRem","lineHeight","maxWidth","wordWrap","fontWeight","fontWeightMedium","tooltipArrow","position","margin","arrow","overflow","boxSizing","content","display","transform","touch","fontWeightRegular","tooltipPlacementLeft","breakpoints","up","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","hystersisOpen","hystersisTimer","Tooltip","React","forwardRef","props","ref","children","classes","disableFocusListener","disableHoverListener","disableTouchListener","enterDelay","enterNextDelay","enterTouchDelay","id","idProp","interactive","leaveDelay","leaveTouchDelay","onClose","onOpen","open","openProp","placement","PopperComponent","Popper","PopperProps","title","TransitionComponent","Grow","TransitionProps","other","_objectWithoutPropertiesLoose","useTheme","childNode","setChildNode","useState","arrowRef","setArrowRef","ignoreNonTouchEvents","useRef","closeTimer","enterTimer","leaveTimer","touchTimer","openState","setOpenState","useControlled","controlled","default","name","state","process","env","NODE_ENV","current","isControlled","undefined","useEffect","disabled","tagName","toLowerCase","console","error","join","useId","clearTimeout","handleOpen","event","handleEnter","forward","childrenProps","type","onMouseOver","removeAttribute","persist","setTimeout","isFocusVisible","onBlurVisible","focusVisibleRef","useIsFocusVisible","childIsFocusVisible","setChildIsFocusVisible","handleFocus","currentTarget","onFocus","handleClose","transitions","duration","shortest","handleLeave","onBlur","onMouseLeave","detectTouchStart","onTouchStart","handleTouchStart","handleTouchEnd","onTouchEnd","handleUseRef","useForkRef","handleFocusRef","handleOwnRef","useCallback","instance","setRef","ReactDOM","findDOMNode","handleRef","shouldShowNativeTitle","_extends","className","clsx","interactiveWrapperListeners","mergedPopperProps","useMemo","deepmerge","popperOptions","modifiers","enabled","Boolean","element","createElement","Fragment","cloneElement","anchorEl","transition","placementInner","TransitionPropsInner","timeout","shorter","capitalize","split","propTypes","PropTypes","bool","elementAcceptingRef","isRequired","object","string","number","func","oneOf","elementType","node","withStyles","flip"],"mappings":"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"}