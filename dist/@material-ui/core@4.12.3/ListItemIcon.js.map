{"version":3,"file":"ListItemIcon.js","sources":["../../../node_modules/@material-ui/core/es/ListItemIcon/ListItemIcon.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    color: theme.palette.action.active,\n    flexShrink: 0,\n    display: 'inline-flex'\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n});\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  const {\n    classes,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\"]);\n\n  const context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);"],"names":["styles","theme","root","minWidth","color","palette","action","active","flexShrink","display","alignItemsFlexStart","marginTop","ListItemIcon","React","forwardRef","props","ref","classes","className","other","_objectWithoutPropertiesLoose","context","useContext","ListContext","createElement","_extends","clsx","alignItems","process","env","NODE_ENV","propTypes","children","PropTypes","node","object","string","withStyles","name"],"mappings":"+kCAOaA,EAASC,KAEpBC,KAAM,CACJC,SAAU,GACVC,MAAOH,EAAMI,QAAQC,OAAOC,OAC5BC,WAAY,EACZC,QAAS,eAIXC,oBAAqB,CACnBC,UAAW,KAOTC,EAA4BC,EAAMC,YAAW,SAAsBC,EAAOC,GAC9E,MAAMC,QACJA,EAAOC,UACPA,GACEH,EACEI,EAAQC,gCAA8BL,EAAO,CAAC,UAAW,cAEzDM,EAAUR,EAAMS,WAAWC,GACjC,OAAoBV,EAAMW,cAAc,MAAOC,WAAS,CACtDP,UAAWQ,UAAKT,EAAQf,KAAMgB,EAAkC,eAAvBG,EAAQM,YAA+BV,EAAQP,qBACxFM,IAAKA,GACJG,OAEoB,eAAzBS,QAAQC,IAAIC,WAA4BlB,EAAamB,UAAY,CAU/DC,SAAUC,UAAUC,KAMpBjB,QAASgB,UAAUE,OAKnBjB,UAAWe,UAAUG,eAERC,EAAWrC,EAAQ,CAChCsC,KAAM,mBADOD,CAEZzB"}