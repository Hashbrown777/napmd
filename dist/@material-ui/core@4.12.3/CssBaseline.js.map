{"version":3,"file":"CssBaseline.js","sources":["../../../node_modules/@material-ui/core/es/CssBaseline/CssBaseline.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport const html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport const body = theme => _extends({\n  color: theme.palette.text.primary\n}, theme.typography.body2, {\n  backgroundColor: theme.palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: theme.palette.common.white\n  }\n});\nexport const styles = theme => ({\n  '@global': {\n    html,\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: theme.palette.background.default\n      }\n    })\n  }\n});\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  const {\n    children = null,\n    classes\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);"],"names":["html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","body","theme","_extends","color","palette","text","primary","typography","body2","backgroundColor","background","default","common","white","styles","fontWeight","fontWeightBold","margin","CssBaseline","props","children","classes","React","createElement","Fragment","process","env","NODE_ENV","propTypes","PropTypes","node","object","exactProp","withStyles","name"],"mappings":"wiCAKaA,EAAO,CAClBC,oBAAqB,cAErBC,oBAAqB,YAIrBC,UAAW,cAEAC,EAAOC,GAASC,WAAS,CACpCC,MAAOF,EAAMG,QAAQC,KAAKC,SACzBL,EAAMM,WAAWC,MAAO,CACzBC,gBAAiBR,EAAMG,QAAQM,WAAWC,QAC1C,eAAgB,CAEdF,gBAAiBR,EAAMG,QAAQQ,OAAOC,SAG7BC,EAASb,KACpB,UAAW,CACTL,KAAAA,EACA,yBAA0B,CACxBG,UAAW,WAEb,YAAa,CACXgB,WAAYd,EAAMM,WAAWS,gBAE/BhB,KAAME,WAAS,CACbe,OAAQ,GACPjB,EAAKC,GAAQ,CAGd,cAAe,CACbQ,gBAAiBR,EAAMG,QAAQM,WAAWC,cASlD,SAASO,EAAYC,GAEnB,MAAMC,SACJA,EAAW,KAAIC,QACfA,GACEF,EAGJ,OAAoBG,EAAMC,cAAcD,EAAME,SAAU,KAAMJ,GAGvC,eAAzBK,QAAQC,IAAIC,WAA4BT,EAAYU,UAAY,CAS9DR,SAAUS,UAAUC,KAMpBT,QAASQ,UAAUE,SAGQ,eAAzBN,QAAQC,IAAIC,WAEdT,EAA4B,UAAIc,YAAUd,EAAYU,kBAGzCK,EAAWnB,EAAQ,CAChCoB,KAAM,kBADOD,CAEZf"}