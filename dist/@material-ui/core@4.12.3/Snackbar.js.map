{"version":3,"file":"Snackbar.js","sources":["../../../node_modules/@material-ui/core/es/Snackbar/Snackbar.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport const styles = theme => {\n  const top1 = {\n    top: 8\n  };\n  const bottom1 = {\n    bottom: 8\n  };\n  const right = {\n    justifyContent: 'flex-end'\n  };\n  const left = {\n    justifyContent: 'flex-start'\n  };\n  const top3 = {\n    top: 24\n  };\n  const bottom3 = {\n    bottom: 24\n  };\n  const right3 = {\n    right: 24\n  };\n  const left3 = {\n    left: 24\n  };\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, {\n      [theme.breakpoints.up('sm')]: _extends({}, top3, center)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, {\n      [theme.breakpoints.up('sm')]: _extends({}, bottom3, center)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, {\n      [theme.breakpoints.up('sm')]: _extends({\n        left: 'auto'\n      }, top3, right3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, {\n      [theme.breakpoints.up('sm')]: _extends({\n        left: 'auto'\n      }, bottom3, right3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, {\n      [theme.breakpoints.up('sm')]: _extends({\n        right: 'auto'\n      }, top3, left3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, {\n      [theme.breakpoints.up('sm')]: _extends({\n        right: 'auto'\n      }, bottom3, left3)\n    })\n  };\n};\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    autoHideDuration = null,\n    children,\n    classes,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onClose,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    },\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n  };\n\n  const handleEnter = () => {\n    setExited(false);\n  };\n\n  React.useEffect(() => {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[`anchorOrigin${capitalize(vertical)}${capitalize(horizontal)}`], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has entered.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired before the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has exited.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);"],"names":["styles","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","root","zIndex","snackbar","position","display","alignItems","anchorOriginTopCenter","_extends","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","Snackbar","React","forwardRef","props","ref","action","anchorOrigin","vertical","horizontal","autoHideDuration","children","classes","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","Grow","transitionDuration","enter","duration","enteringScreen","exit","leavingScreen","TransitionProps","other","_objectWithoutPropertiesLoose","timerAutoHide","useRef","exited","setExited","useState","handleClose","useEventCallback","args","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","window","addEventListener","removeEventListener","createElement","ClickAwayListener","onClickAway","event","clsx","capitalize","appear","in","createChainedFunction","timeout","direction","SnackbarContent","process","env","NODE_ENV","propTypes","PropTypes","node","shape","oneOf","isRequired","number","element","object","string","bool","key","any","func","deprecatedPropType","elementType","oneOfType","withStyles","flip","name"],"mappings":"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"}