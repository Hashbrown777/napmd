{"version":3,"file":"TouchRipple.js","sources":["../../../../node_modules/@material-ui/core/es/ButtonBase/TouchRipple.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Ripple from './Ripple';\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    position: 'absolute',\n    zIndex: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    borderRadius: 'inherit'\n  },\n\n  /* Styles applied to the internal `Ripple` components `ripple` class. */\n  ripple: {\n    opacity: 0,\n    position: 'absolute'\n  },\n\n  /* Styles applied to the internal `Ripple` components `rippleVisible` class. */\n  rippleVisible: {\n    opacity: 0.3,\n    transform: 'scale(1)',\n    animation: `$enter ${DURATION}ms ${theme.transitions.easing.easeInOut}`\n  },\n\n  /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */\n  ripplePulsate: {\n    animationDuration: `${theme.transitions.duration.shorter}ms`\n  },\n\n  /* Styles applied to the internal `Ripple` components `child` class. */\n  child: {\n    opacity: 1,\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n\n  /* Styles applied to the internal `Ripple` components `childLeaving` class. */\n  childLeaving: {\n    opacity: 0,\n    animation: `$exit ${DURATION}ms ${theme.transitions.easing.easeInOut}`\n  },\n\n  /* Styles applied to the internal `Ripple` components `childPulsate` class. */\n  childPulsate: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    animation: `$pulsate 2500ms ${theme.transitions.easing.easeInOut} 200ms infinite`\n  },\n  '@keyframes enter': {\n    '0%': {\n      transform: 'scale(0)',\n      opacity: 0.1\n    },\n    '100%': {\n      transform: 'scale(1)',\n      opacity: 0.3\n    }\n  },\n  '@keyframes exit': {\n    '0%': {\n      opacity: 1\n    },\n    '100%': {\n      opacity: 0\n    }\n  },\n  '@keyframes pulsate': {\n    '0%': {\n      transform: 'scale(1)'\n    },\n    '50%': {\n      transform: 'scale(0.92)'\n    },\n    '100%': {\n      transform: 'scale(1)'\n    }\n  }\n});\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nconst TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(props, ref) {\n  const {\n    center: centerProp = false,\n    classes,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"center\", \"classes\", \"className\"]);\n\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  const ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  const startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  const startCommit = React.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/React.createElement(Ripple, {\n      key: nextKey.current,\n      classes: classes,\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    })]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = React.useCallback((event = {}, options = {}, cb) => {\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n\n    } = options;\n\n    if (event.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n\n    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    } // Touche devices\n\n\n    if (event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(() => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  const pulsate = React.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = React.useCallback((event, cb) => {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      event.persist();\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(() => {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: container\n  }, other), /*#__PURE__*/React.createElement(TransitionGroup, {\n    component: null,\n    exit: true\n  }, ripples));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiTouchRipple'\n})( /*#__PURE__*/React.memo(TouchRipple));"],"names":["styles","theme","root","overflow","pointerEvents","position","zIndex","top","right","bottom","left","borderRadius","ripple","opacity","rippleVisible","transform","animation","transitions","easing","easeInOut","ripplePulsate","animationDuration","duration","shorter","child","display","width","height","backgroundColor","childLeaving","childPulsate","TouchRipple","React","forwardRef","props","ref","center","centerProp","classes","className","other","_objectWithoutPropertiesLoose","ripples","setRipples","useState","nextKey","useRef","rippleCallback","useEffect","current","ignoringMouseDown","startTimer","startTimerCommit","container","clearTimeout","startCommit","useCallback","params","pulsate","rippleX","rippleY","rippleSize","cb","oldRipples","createElement","Ripple","key","timeout","start","event","options","fakeElement","type","element","rect","getBoundingClientRect","clientX","clientY","touches","Math","round","sqrt","sizeX","max","abs","clientWidth","sizeY","clientHeight","setTimeout","stop","persist","length","slice","useImperativeHandle","_extends","clsx","TransitionGroup","component","exit","process","env","NODE_ENV","propTypes","PropTypes","bool","object","isRequired","string","withStyles","flip","name","memo"],"mappings":"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"}