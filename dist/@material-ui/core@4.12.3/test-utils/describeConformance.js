define(["chai","react","./findOutermostIntrinsic","react-test-renderer","./testRef"],(function(e,t,n,o,c){function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function s(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var a=s(t),i=r(o);function l(e,{component:t}){const o=n.default(e).getElement();return e.find(t).filterWhere((e=>e.contains(o)))}function u(){return Math.random().toString(36).slice(2)}const f={componentProp:function(t,n){describe("prop: component",(()=>{it("can render another root component with the `component` prop",(()=>{const{classes:o,mount:c,testComponentPropWith:r="em"}=n(),s=c(a.cloneElement(t,{component:r}));e.expect(l(s,{classes:o,component:r}).exists()).to.equal(!0)}))}))},mergeClassName:function(t,o){it("applies the className to the root component",(()=>{const{mount:c}=o(),r=u(),s=c(a.cloneElement(t,{className:r}));e.expect(n.default(s).hasClass(r)).to.equal(!0,"does have a custom `className`")}))},propsSpread:function(t,n){it("spreads props to the root component",(()=>{const{classes:o,inheritComponent:c,mount:r}=n(),s="data-test-props-spread",i=u(),f=l(r(a.cloneElement(t,{[s]:i})),{classes:o,component:c});e.expect(f.props()[s]).to.equal(i)}))},refForwarding:function(t,o){describe("ref",(()=>{it("attaches the ref",(()=>{const{inheritComponent:r,mount:s,refInstanceof:a}=o();c(t,s,((t,o)=>{if(e.expect(t).to.be.instanceof(a),r&&1===t.nodeType){const c=n.default(o);e.expect(t).to.equal(c.instance())}}))}))}))},rootClass:function(t,o){it("applies the root class to the root component if it has this class",(()=>{const{classes:c,mount:r}=o();if(null==c.root)return;const s=u(),i=r(a.cloneElement(t,{className:s}));e.expect(n.default(i).hasClass(c.root)).to.equal(!0),e.expect(n.default(i).hasClass(s)).to.equal(!0)}))},reactTestRenderer:function(e){it("should render without errors in ReactTestRenderer",(()=>{i.default.act((()=>{i.default.create(e,{createNodeMock:e=>document.createElement(e.type)})}))}))}};return function(e,t){const{after:n=(()=>{}),only:o=Object.keys(f),skip:c=[]}=t();describe("Material-UI component API",(()=>{after(n),Object.keys(f).filter((e=>-1!==o.indexOf(e)&&-1===c.indexOf(e))).forEach((n=>{(0,f[n])(e,t)}))}))}}));
//# sourceMappingURL=describeConformance.js.map
