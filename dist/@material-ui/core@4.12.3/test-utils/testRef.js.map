{"version":3,"file":"testRef.js","sources":["../../../../node_modules/@material-ui/core/es/test-utils/testRef.js"],"sourcesContent":["import * as React from 'react';\nimport { expect } from 'chai';\n\nfunction assertDOMNode(node) {\n  // duck typing a DOM node\n  expect(typeof node.nodeName).to.equal('string');\n}\n/**\n * Utility method to make assertions about the ref on an element\n * @param {React.ReactElement} element - The element should have a component wrapped\n *                                       in withStyles as the root\n * @param {function} mount - Should be returnvalue of createMount\n * @param {function} onRef - Callback, first arg is the ref.\n *                           Assert that the ref is a DOM node by default\n */\n\n\nexport default function testRef(element, mount, onRef = assertDOMNode) {\n  const ref = /*#__PURE__*/React.createRef();\n  const wrapper = mount( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(element, {\n    ref\n  })));\n  onRef(ref.current, wrapper);\n}"],"names":["assertDOMNode","node","expect","nodeName","to","equal","element","mount","onRef","ref","React","createRef","wrapper","createElement","Fragment","cloneElement","current"],"mappings":"iVAGA,SAASA,EAAcC,GAErBC,gBAAcD,EAAKE,UAAUC,GAAGC,MAAM,iBAYzB,SAAiBC,EAASC,EAAOC,EAAQR,GACtD,MAAMS,EAAmBC,EAAMC,YACzBC,EAAUL,EAAoBG,EAAMG,cAAcH,EAAMI,SAAU,KAAmBJ,EAAMK,aAAaT,EAAS,CACrHG,IAAAA,MAEFD,EAAMC,EAAIO,QAASJ"}