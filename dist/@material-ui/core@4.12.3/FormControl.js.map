{"version":3,"file":"FormControl.js","sources":["../../../node_modules/@material-ui/core/es/FormControl/FormControl.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'primary',\n    component: Component = 'div',\n    disabled = false,\n    error = false,\n    fullWidth = false,\n    focused: visuallyFocused,\n    hiddenLabel = false,\n    margin = 'none',\n    required = false,\n    size,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  });\n  const [_focused, setFocused] = React.useState(false);\n  const focused = visuallyFocused !== undefined ? visuallyFocused : _focused;\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  let registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const registeredInput = React.useRef(false);\n\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['Material-UI: There are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  const onFilled = React.useCallback(() => {\n    setFilled(true);\n  }, []);\n  const onEmpty = React.useCallback(() => {\n    setFilled(false);\n  }, []);\n  const childContext = {\n    adornedStart,\n    setAdornedStart,\n    color,\n    disabled,\n    error,\n    filled,\n    focused,\n    fullWidth,\n    hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: () => {\n      setFocused(false);\n    },\n    onEmpty,\n    onFilled,\n    onFocus: () => {\n      setFocused(true);\n    },\n    registerEffect,\n    required,\n    variant\n  };\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[`margin${capitalize(margin)}`], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will be displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);"],"names":["styles","root","display","flexDirection","position","minWidth","padding","margin","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","fullWidth","width","FormControl","React","forwardRef","props","ref","children","classes","className","color","component","Component","disabled","error","focused","visuallyFocused","hiddenLabel","required","size","variant","other","_objectWithoutPropertiesLoose","adornedStart","setAdornedStart","useState","initialAdornedStart","Children","forEach","child","isMuiElement","input","isAdornedStart","filled","setFilled","initialFilled","isFilled","_focused","setFocused","undefined","registerEffect","process","env","NODE_ENV","registeredInput","useRef","current","console","join","onFilled","useCallback","childContext","onBlur","onEmpty","onFocus","createElement","FormControlContext","Provider","value","_extends","clsx","capitalize","propTypes","PropTypes","node","object","string","oneOf","elementType","bool","withStyles","name"],"mappings":"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"}