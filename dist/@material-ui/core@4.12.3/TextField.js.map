{"version":3,"file":"TextField.js","sources":["../../../node_modules/@material-ui/core/es/TextField/TextField.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  const {\n    autoComplete,\n    autoFocus = false,\n    children,\n    classes,\n    className,\n    color = 'primary',\n    defaultValue,\n    disabled = false,\n    error = false,\n    FormHelperTextProps,\n    fullWidth = false,\n    helperText,\n    hiddenLabel,\n    id,\n    InputLabelProps,\n    inputProps,\n    InputProps,\n    inputRef,\n    label,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required = false,\n    rows,\n    rowsMax,\n    maxRows,\n    minRows,\n    select = false,\n    SelectProps,\n    type,\n    value,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"maxRows\", \"minRows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  const InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      const displayRequired = InputLabelProps?.required ?? required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && '\\u00a0*');\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   * @deprecated Use `minRows` instead.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);"],"names":["variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","styles","root","TextField","React","forwardRef","props","ref","autoComplete","autoFocus","children","classes","className","color","defaultValue","disabled","error","FormHelperTextProps","fullWidth","helperText","hiddenLabel","id","InputLabelProps","inputProps","InputProps","inputRef","label","multiline","name","onBlur","onChange","onFocus","placeholder","required","rows","rowsMax","maxRows","minRows","select","SelectProps","type","value","variant","other","_objectWithoutPropertiesLoose","process","env","NODE_ENV","console","InputMore","shrink","notched","displayRequired","createElement","Fragment","native","undefined","helperTextId","inputLabelId","InputComponent","InputElement","_extends","FormControl","clsx","InputLabel","htmlFor","Select","labelId","input","FormHelperText","propTypes","PropTypes","string","bool","node","object","oneOf","any","refType","margin","oneOfType","number","func","size","withStyles"],"mappings":"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"}