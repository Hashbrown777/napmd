{"version":3,"file":"TablePagination.js","sources":["../../../node_modules/@material-ui/core/es/TablePagination/TablePagination.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    color: theme.palette.text.primary,\n    fontSize: theme.typography.pxToRem(14),\n    overflow: 'auto',\n    // Increase the specificity to override TableCell.\n    '&:last-child': {\n      padding: 0\n    }\n  },\n\n  /* Styles applied to the Toolbar component. */\n  toolbar: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n\n  /* Styles applied to the spacer element. */\n  spacer: {\n    flex: '1 1 100%'\n  },\n\n  /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n  caption: {\n    flexShrink: 0\n  },\n  // TODO v5: `.selectRoot` should be merged with `.input`\n\n  /* Styles applied to the Select component root element. */\n  selectRoot: {\n    marginRight: 32,\n    marginLeft: 8\n  },\n\n  /* Styles applied to the Select component `select` class. */\n  select: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n\n  },\n  // TODO v5: remove\n\n  /* Styles applied to the Select component `icon` class. */\n  selectIcon: {},\n\n  /* Styles applied to the `InputBase` component. */\n  input: {\n    color: 'inherit',\n    fontSize: 'inherit',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the MenuItem component. */\n  menuItem: {},\n\n  /* Styles applied to the internal `TablePaginationActions` component. */\n  actions: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n});\n\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count\n}) => `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`;\n\nconst defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  const {\n    ActionsComponent = TablePaginationActions,\n    backIconButtonProps,\n    backIconButtonText = 'Previous page',\n    classes,\n    className,\n    colSpan: colSpanProp,\n    component: Component = TableCell,\n    count,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelRowsPerPage = 'Rows per page:',\n    nextIconButtonProps,\n    nextIconButtonText = 'Next page',\n    onChangePage,\n    onPageChange,\n    onChangeRowsPerPage: onChangeRowsPerPageProp,\n    onRowsPerPageChange: onRowsPerPageChangeProp,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = defaultRowsPerPageOptions,\n    SelectProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onPageChange\", \"onChangeRowsPerPage\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  const onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp;\n  let colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId();\n  const labelId = useId();\n  const MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/React.createElement(MenuItemComponent, {\n    className: classes.menuItem,\n    key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n    value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n  }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    onPageChange: onPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   * @deprecated Use the onPageChange prop instead.\n   */\n  onChangePage: deprecatedPropType(PropTypes.func, 'Use the `onPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @deprecated Use the onRowsPerPageChange prop instead.\n   */\n  onChangeRowsPerPage: deprecatedPropType(PropTypes.func, 'Use the `onRowsPerPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);"],"names":["styles","theme","root","color","palette","text","primary","fontSize","typography","pxToRem","overflow","padding","toolbar","minHeight","paddingRight","spacer","flex","caption","flexShrink","selectRoot","marginRight","marginLeft","select","paddingLeft","textAlign","textAlignLast","selectIcon","input","menuItem","actions","defaultLabelDisplayedRows","from","to","count","defaultRowsPerPageOptions","TablePagination","React","forwardRef","props","ref","ActionsComponent","TablePaginationActions","backIconButtonProps","backIconButtonText","classes","className","colSpan","colSpanProp","component","Component","TableCell","labelDisplayedRows","labelRowsPerPage","nextIconButtonProps","nextIconButtonText","onChangePage","onPageChange","onChangeRowsPerPage","onChangeRowsPerPageProp","onRowsPerPageChange","onRowsPerPageChangeProp","page","rowsPerPage","rowsPerPageOptions","SelectProps","other","_objectWithoutPropertiesLoose","selectId","useId","labelId","MenuItemComponent","native","MenuItem","createElement","_extends","clsx","Toolbar","length","Typography","variant","id","Select","icon","InputBase","value","onChange","map","rowsPerPageOption","key","label","Math","min","title","process","env","NODE_ENV","propTypes","PropTypes","elementType","object","string","isRequired","number","func","node","deprecatedPropType","chainPropTypes","newLastPage","max","ceil","Error","array","withStyles","name"],"mappings":"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"}