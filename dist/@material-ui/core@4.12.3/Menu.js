define(["exports","../extends","../objectWithoutPropertiesLoose","react","react-is","prop-types","clsx","@material-ui/utils","./styles/withStyles","./Popover","./MenuList","react-dom","./utils/setRef","./styles/useTheme","./utils/deprecatedPropType","@material-ui/styles","./styles/defaultTheme","./styles/createTheme","./styles/createBreakpoints","./styles/createMixins","./styles/createPalette","./colors/common","./colors/grey","./colors/indigo","./colors/pink","./colors/red","./colors/orange","./colors/blue","./colors/green","./styles/colorManipulator","./styles/createTypography","./styles/shadows","./styles/shape","./styles/createSpacing","@material-ui/system","./styles/transitions","./styles/zIndex","./utils/debounce","./utils/ownerDocument","./utils/ownerWindow","./utils/createChainedFunction","./Modal","./Portal","./utils/useForkRef","./utils/useEventCallback","./Modal/ModalManager","./utils/getScrollbarSize","./Unstable_TrapFocus","./Modal/SimpleBackdrop","./Grow","react-transition-group","./transitions/utils","./Paper","./List","./List/ListContext"],(function(e,t,o,n,s,r,a,i,l,u,c,d,p,f,m,y,b,P,h,g,E,T,v,M,j,x,O,C,F,_,D,w,L,k,S,U,N,I,R,z,W,A,V,B,H,K,q,G,J,Q,X,Y,Z,$,ee){function te(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function oe(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(o){if("default"!==o){var n=Object.getOwnPropertyDescriptor(e,o);Object.defineProperty(t,o,n.get?n:{enumerable:!0,get:function(){return e[o]}})}})),t.default=e,Object.freeze(t)}var ne=oe(n),se=te(r),re=te(a),ae=oe(d);const ie={vertical:"top",horizontal:"right"},le={vertical:"top",horizontal:"left"},ue={paper:{maxHeight:"calc(100% - 96px)",WebkitOverflowScrolling:"touch"},list:{outline:0}},ce=ne.forwardRef((function(e,n){const{autoFocus:r=!0,children:a,classes:i,disableAutoFocusItem:l=!1,MenuListProps:d={},onClose:m,onEntering:y,open:b,PaperProps:P={},PopoverClasses:h,transitionDuration:g="auto",TransitionProps:{onEntering:E}={},variant:T="selectedMenu"}=e,v=o._objectWithoutPropertiesLoose(e.TransitionProps,["onEntering"]),M=o._objectWithoutPropertiesLoose(e,["autoFocus","children","classes","disableAutoFocusItem","MenuListProps","onClose","onEntering","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","variant"]),j=f(),x=r&&!l&&b,O=ne.useRef(null),C=ne.useRef(null);let F=-1;ne.Children.map(a,((e,t)=>{ne.isValidElement(e)&&("production"!==process.env.NODE_ENV&&s.isFragment(e)&&console.error(["Material-UI: The Menu component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),e.props.disabled||("menu"!==T&&e.props.selected||-1===F)&&(F=t))}));const _=ne.Children.map(a,((e,t)=>t===F?ne.cloneElement(e,{ref:t=>{C.current=ae.findDOMNode(t),p(e.ref,t)}}):e));return ne.createElement(u.default,t._extends({getContentAnchorEl:()=>C.current,classes:h,onClose:m,TransitionProps:t._extends({onEntering:(e,t)=>{O.current&&O.current.adjustStyleForScrollbar(e,j),y&&y(e,t),E&&E(e,t)}},v),anchorOrigin:"rtl"===j.direction?ie:le,transformOrigin:"rtl"===j.direction?ie:le,PaperProps:t._extends({},P,{classes:t._extends({},P.classes,{root:i.paper})}),open:b,ref:n,transitionDuration:g},M),ne.createElement(c,t._extends({onKeyDown:e=>{"Tab"===e.key&&(e.preventDefault(),m&&m(e,"tabKeyDown"))},actions:O,autoFocus:r&&(-1===F||l),autoFocusItem:x,variant:T},d,{className:re.default(i.list,d.className)}),_))}));"production"!==process.env.NODE_ENV&&(ce.propTypes={anchorEl:se.default.oneOfType([i.HTMLElementType,se.default.func]),autoFocus:se.default.bool,children:se.default.node,classes:se.default.object,disableAutoFocusItem:se.default.bool,MenuListProps:se.default.object,onClose:se.default.func,onEnter:m(se.default.func,"Use the `TransitionProps` prop instead."),onEntered:m(se.default.func,"Use the `TransitionProps` prop instead."),onEntering:m(se.default.func,"Use the `TransitionProps` prop instead."),onExit:m(se.default.func,"Use the `TransitionProps` prop instead."),onExited:m(se.default.func,"Use the `TransitionProps` prop instead."),onExiting:m(se.default.func,"Use the `TransitionProps` prop instead."),open:se.default.bool.isRequired,PaperProps:se.default.object,PopoverClasses:se.default.object,transitionDuration:se.default.oneOfType([se.default.oneOf(["auto"]),se.default.number,se.default.shape({appear:se.default.number,enter:se.default.number,exit:se.default.number})]),TransitionProps:se.default.object,variant:se.default.oneOf(["menu","selectedMenu"])});var de=l(ue,{name:"MuiMenu"})(ce);e.default=de,e.styles=ue,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=Menu.js.map
