{"version":3,"file":"ExpansionPanelActions.js","sources":["../../../node_modules/@material-ui/core/es/ExpansionPanelActions/ExpansionPanelActions.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nlet warnedOnce = false;\n/**\n * ⚠️ The ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.\n *\n * You should use `import { AccordionActions } from '@material-ui/core'`\n * or `import AccordionActions from '@material-ui/core/AccordionActions'`.\n */\n\nconst ExpansionPanelActions = /*#__PURE__*/React.forwardRef(function ExpansionPanelActions(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.', '', \"You should use `import { AccordionActions } from '@material-ui/core'`\", \"or `import AccordionActions from '@material-ui/core/AccordionActions'`\"].join('\\n'));\n    }\n  }\n\n  const {\n    classes,\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"disableSpacing\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelActions'\n})(ExpansionPanelActions);"],"names":["styles","root","display","alignItems","padding","justifyContent","spacing","marginLeft","warnedOnce","ExpansionPanelActions","React","forwardRef","props","ref","process","env","NODE_ENV","console","error","join","classes","className","disableSpacing","other","_objectWithoutPropertiesLoose","createElement","_extends","clsx","propTypes","children","PropTypes","node","object","string","bool","withStyles","name"],"mappings":"wjCAMaA,EAAS,CAEpBC,KAAM,CACJC,QAAS,OACTC,WAAY,SACZC,QAAS,EACTC,eAAgB,YAIlBC,QAAS,CACP,yBAA0B,CACxBC,WAAY,KAIlB,IAAIC,GAAa,EAQjB,MAAMC,EAAqCC,EAAMC,YAAW,SAA+BC,EAAOC,GACnE,eAAzBC,QAAQC,IAAIC,WACTR,IACHA,GAAa,EACbS,QAAQC,MAAM,CAAC,2HAA4H,GAAI,wEAAyE,0EAA0EC,KAAK,SAI3S,MAAMC,QACJA,EAAOC,UACPA,EAASC,eACTA,GAAiB,GACfV,EACEW,EAAQC,gCAA8BZ,EAAO,CAAC,UAAW,YAAa,mBAE5E,OAAoBF,EAAMe,cAAc,MAAOC,WAAS,CACtDL,UAAWM,UAAKP,EAAQnB,KAAMoB,GAAYC,GAAkBF,EAAQd,SACpEO,IAAKA,GACJU,OAEoB,eAAzBT,QAAQC,IAAIC,WAA4BP,EAAsBmB,UAAY,CASxEC,SAAUC,UAAUC,KAMpBX,QAASU,UAAUE,OAKnBX,UAAWS,UAAUG,OAKrBX,eAAgBQ,UAAUI,aAEbC,EAAWnC,EAAQ,CAChCoC,KAAM,4BADOD,CAEZ1B"}