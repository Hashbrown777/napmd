{"version":3,"file":"Tabs.js","sources":["../../../node_modules/@material-ui/core/es/Tabs/Tabs.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport useTheme from '../styles/useTheme';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden',\n    minHeight: 48,\n    WebkitOverflowScrolling: 'touch',\n    // Add iOS momentum scrolling.\n    display: 'flex'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the flex container element. */\n  flexContainer: {\n    display: 'flex'\n  },\n\n  /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\n  flexContainerVertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n  centered: {\n    justifyContent: 'center'\n  },\n\n  /* Styles applied to the tablist element. */\n  scroller: {\n    position: 'relative',\n    display: 'inline-block',\n    flex: '1 1 auto',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n  fixed: {\n    overflowX: 'hidden',\n    width: '100%'\n  },\n\n  /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\n  scrollable: {\n    overflowX: 'scroll',\n    // Hide dimensionless scrollbar on MacOS\n    scrollbarWidth: 'none',\n    // Firefox\n    '&::-webkit-scrollbar': {\n      display: 'none' // Safari + Chrome\n\n    }\n  },\n\n  /* Styles applied to the `ScrollButtonComponent` component. */\n  scrollButtons: {},\n\n  /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"` or scrollButtons=\"desktop\"`. */\n  scrollButtonsDesktop: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n\n  /* Styles applied to the `TabIndicator` component. */\n  indicator: {}\n});\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, ref) {\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    classes,\n    className,\n    component: Component = 'div',\n    indicatorColor = 'secondary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent = TabScrollButton,\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    TabIndicatorProps = {},\n    TabScrollButtonProps,\n    textColor = 'inherit',\n    value,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\"]);\n\n  const theme = useTheme();\n  const scrollable = variant === 'scrollable';\n  const isRtl = theme.direction === 'rtl';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState({});\n  const [displayScroll, setDisplayScroll] = React.useState({\n    start: false,\n    end: false\n  });\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    marginBottom: null\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    let tabMeta;\n\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`Material-UI: The value provided to the Tabs component is invalid.`, `None of the Tabs' children match with \\`${value}\\`.`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    const newIndicatorStyle = {\n      [start]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    };\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  const scroll = scrollValue => {\n    animate(scrollStart, tabsRef.current, scrollValue);\n  };\n\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-tabsRef.current[clientSize]);\n  };\n\n  const handleEndScrollClick = () => {\n    moveTabsScroll(tabsRef.current[clientSize]);\n  };\n\n  const handleScrollbarSizeChange = React.useCallback(scrollbarHeight => {\n    setScrollerStyle({\n      overflow: null,\n      marginBottom: -scrollbarHeight\n    });\n  }, []);\n\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/React.createElement(ScrollbarSize, {\n      className: classes.scrollable,\n      onChange: handleScrollbarSizeChange\n    }) : null;\n    const scrollButtonsActive = displayScroll.start || displayScroll.end;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayScroll.start,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }, TabScrollButtonProps)) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayScroll.end,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }, TabScrollButtonProps)) : null;\n    return conditionalElements;\n  };\n\n  const scrollSelectedIntoView = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart);\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart);\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== 'off') {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n        scrollWidth,\n        clientWidth\n      } = tabsRef.current;\n      let showStartScroll;\n      let showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        const scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  const handleTabsScroll = React.useCallback(debounce(() => {\n    updateScrollButtonState();\n  }));\n  React.useEffect(() => {\n    return () => {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(() => {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n  const indicator = /*#__PURE__*/React.createElement(TabIndicator, _extends({\n    className: classes.indicator,\n    orientation: orientation,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue\n    });\n  });\n\n  const handleKeyDown = event => {\n    const {\n      target\n    } = event; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    const role = target.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    let newFocusTarget = null;\n    let previousItemKey = orientation !== \"vertical\" ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation !== \"vertical\" ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation !== \"vertical\" && theme.direction === 'rtl') {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;\n        break;\n\n      case nextItemKey:\n        newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;\n        break;\n\n      case 'Home':\n        newFocusTarget = tabListRef.current.firstChild;\n        break;\n\n      case 'End':\n        newFocusTarget = tabListRef.current.lastChild;\n        break;\n\n      default:\n        break;\n    }\n\n    if (newFocusTarget !== null) {\n      newFocusTarget.focus();\n      event.preventDefault();\n    }\n  };\n\n  const conditionalElements = getConditionalElements();\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, vertical && classes.vertical),\n    ref: ref\n  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.scroller, scrollable ? classes.scrollable : classes.fixed),\n    style: scrollerStyle,\n    ref: tabsRef,\n    onScroll: handleTabsScroll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\n    onKeyDown: handleKeyDown,\n    ref: tabListRef,\n    role: \"tablist\"\n  }, children), mounted && indicator), conditionalElements.scrollButtonEnd);\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This property is intended for large views.\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Determines the color of the indicator.\n   */\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `desktop` will only present them on medium and larger viewports.\n   * - `on` will always present them.\n   * - `off` will never present them.\n   */\n  scrollButtons: PropTypes.oneOf(['auto', 'desktop', 'off', 'on']),\n\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\n   * Props applied to the tab indicator element.\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this property to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs'\n})(Tabs);"],"names":["styles","theme","root","overflow","minHeight","WebkitOverflowScrolling","display","vertical","flexDirection","flexContainer","flexContainerVertical","centered","justifyContent","scroller","position","flex","whiteSpace","fixed","overflowX","width","scrollable","scrollbarWidth","scrollButtons","scrollButtonsDesktop","breakpoints","down","indicator","Tabs","React","forwardRef","props","ref","ariaLabel","ariaLabelledBy","action","children","childrenProp","classes","className","component","Component","indicatorColor","onChange","orientation","ScrollButtonComponent","TabScrollButton","selectionFollowsFocus","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant","other","_objectWithoutPropertiesLoose","useTheme","isRtl","direction","scrollStart","start","end","clientSize","size","process","env","NODE_ENV","console","error","mounted","setMounted","useState","indicatorStyle","setIndicatorStyle","displayScroll","setDisplayScroll","scrollerStyle","setScrollerStyle","marginBottom","valueToIndex","Map","tabsRef","useRef","tabListRef","getTabsMeta","tabsNode","current","tabsMeta","tabMeta","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollTop","scrollLeftNormalized","getNormalizedScrollLeft","scrollWidth","top","bottom","left","right","length","tab","get","keys","Array","from","join","updateIndicatorState","useEventCallback","startValue","correction","newIndicatorStyle","isNaN","dStart","Math","abs","dSize","scroll","scrollValue","animate","moveTabsScroll","delta","detectScrollType","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","useCallback","scrollbarHeight","scrollSelectedIntoView","nextScrollStart","updateScrollButtonState","scrollHeight","clientHeight","showStartScroll","showEndScroll","useEffect","handleResize","debounce","win","ownerWindow","addEventListener","clear","removeEventListener","handleTabsScroll","useImperativeHandle","updateIndicator","updateScrollButtons","createElement","TabIndicator","_extends","color","style","childIndex","Children","map","child","isValidElement","isFragment","childValue","undefined","set","selected","cloneElement","fullWidth","conditionalElements","scrollbarSizeListener","ScrollbarSize","scrollButtonsActive","showScrollButtons","scrollButtonStart","onClick","disabled","clsx","scrollButtonEnd","getConditionalElements","onScroll","onKeyDown","event","target","getAttribute","newFocusTarget","previousItemKey","nextItemKey","key","previousElementSibling","lastChild","nextElementSibling","firstChild","focus","preventDefault","role","propTypes","refType","PropTypes","string","bool","node","object","elementType","oneOf","func","any","withStyles","name"],"mappings":"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"}