{"version":3,"file":"Divider.js","sources":["../../../node_modules/@material-ui/core/es/Divider/Divider.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    height: 1,\n    margin: 0,\n    // Reset browser default style.\n    border: 'none',\n    flexShrink: 0,\n    backgroundColor: theme.palette.divider\n  },\n\n  /* Styles applied to the root element if `absolute={true}`. */\n  absolute: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `variant=\"inset\"`. */\n  inset: {\n    marginLeft: 72\n  },\n\n  /* Styles applied to the root element if `light={true}`. */\n  light: {\n    backgroundColor: alpha(theme.palette.divider, 0.08)\n  },\n\n  /* Styles applied to the root element if `variant=\"middle\"`. */\n  middle: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    height: '100%',\n    width: 1\n  },\n\n  /* Styles applied to the root element if `flexItem={true}`. */\n  flexItem: {\n    alignSelf: 'stretch',\n    height: 'auto'\n  }\n});\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  const {\n    absolute = false,\n    classes,\n    className,\n    component: Component = 'hr',\n    flexItem = false,\n    light = false,\n    orientation = 'horizontal',\n    role = Component !== 'hr' ? 'separator' : undefined,\n    variant = 'fullWidth'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);"],"names":["styles","theme","root","height","margin","border","flexShrink","backgroundColor","palette","divider","absolute","position","bottom","left","width","inset","marginLeft","light","alpha","middle","spacing","marginRight","vertical","flexItem","alignSelf","Divider","React","forwardRef","props","ref","classes","className","component","Component","orientation","role","undefined","variant","other","_objectWithoutPropertiesLoose","createElement","_extends","clsx","process","env","NODE_ENV","propTypes","PropTypes","bool","children","node","object","string","elementType","oneOf","withStyles","name"],"mappings":"wjCAOaA,EAASC,KAEpBC,KAAM,CACJC,OAAQ,EACRC,OAAQ,EAERC,OAAQ,OACRC,WAAY,EACZC,gBAAiBN,EAAMO,QAAQC,SAIjCC,SAAU,CACRC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,QAITC,MAAO,CACLC,WAAY,IAIdC,MAAO,CACLV,gBAAiBW,QAAMjB,EAAMO,QAAQC,QAAS,MAIhDU,OAAQ,CACNH,WAAYf,EAAMmB,QAAQ,GAC1BC,YAAapB,EAAMmB,QAAQ,IAI7BE,SAAU,CACRnB,OAAQ,OACRW,MAAO,GAITS,SAAU,CACRC,UAAW,UACXrB,OAAQ,UAGNsB,EAAuBC,EAAMC,YAAW,SAAiBC,EAAOC,GACpE,MAAMnB,SACJA,GAAW,EAAKoB,QAChBA,EAAOC,UACPA,EACAC,UAAWC,EAAY,KAAIV,SAC3BA,GAAW,EAAKN,MAChBA,GAAQ,EAAKiB,YACbA,EAAc,aAAYC,KAC1BA,GAAqB,OAAdF,EAAqB,iBAAcG,GAASC,QACnDA,EAAU,aACRT,EACEU,EAAQC,gCAA8BX,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,cAAe,OAAQ,YAEjJ,OAAoBF,EAAMc,cAAcP,EAAWQ,WAAS,CAC1DV,UAAWW,UAAKZ,EAAQ5B,KAAM6B,EAAuB,cAAZM,GAA2BP,EAAQO,GAAU3B,GAAYoB,EAAQpB,SAAUa,GAAYO,EAAQP,SAAUN,GAASa,EAAQb,MAAuB,aAAhBiB,GAA8BJ,EAAQR,UAChNa,KAAMA,EACNN,IAAKA,GACJS,OAEoB,eAAzBK,QAAQC,IAAIC,WAA4BpB,EAAQqB,UAAY,CAS1DpC,SAAUqC,UAAUC,KAKpBC,SAAUF,UAAUG,KAMpBpB,QAASiB,UAAUI,OAKnBpB,UAAWgB,UAAUK,OAMrBpB,UAAWe,UAEVM,YAMD9B,SAAUwB,UAAUC,KAKpB/B,MAAO8B,UAAUC,KAKjBd,YAAaa,UAAUO,MAAM,CAAC,aAAc,aAK5CnB,KAAMY,UAAUK,OAKhBf,QAASU,UAAUO,MAAM,CAAC,YAAa,QAAS,mBAEnCC,EAAWvD,EAAQ,CAChCwD,KAAM,cADOD,CAEZ9B"}