{"version":3,"file":"DialogContent.js","sources":["../../../node_modules/@material-ui/core/es/DialogContent/DialogContent.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    WebkitOverflowScrolling: 'touch',\n    // Add iOS momentum scrolling.\n    overflowY: 'auto',\n    padding: '8px 24px',\n    '&:first-child': {\n      // dialog without title\n      paddingTop: 20\n    }\n  },\n\n  /* Styles applied to the root element if `dividers={true}`. */\n  dividers: {\n    padding: '16px 24px',\n    borderTop: `1px solid ${theme.palette.divider}`,\n    borderBottom: `1px solid ${theme.palette.divider}`\n  }\n});\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  const {\n    classes,\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);"],"names":["styles","theme","root","flex","WebkitOverflowScrolling","overflowY","padding","paddingTop","dividers","borderTop","palette","divider","borderBottom","DialogContent","React","forwardRef","props","ref","classes","className","other","_objectWithoutPropertiesLoose","createElement","_extends","clsx","process","env","NODE_ENV","propTypes","children","PropTypes","node","object","string","bool","withStyles","name"],"mappings":"wjCAMaA,EAASC,KAEpBC,KAAM,CACJC,KAAM,WACNC,wBAAyB,QAEzBC,UAAW,OACXC,QAAS,WACT,gBAAiB,CAEfC,WAAY,KAKhBC,SAAU,CACRF,QAAS,YACTG,UAAW,aAAaR,EAAMS,QAAQC,UACtCC,aAAc,aAAaX,EAAMS,QAAQC,aAGvCE,EAA6BC,EAAMC,YAAW,SAAuBC,EAAOC,GAChF,MAAMC,QACJA,EAAOC,UACPA,EAASX,SACTA,GAAW,GACTQ,EACEI,EAAQC,gCAA8BL,EAAO,CAAC,UAAW,YAAa,aAE5E,OAAoBF,EAAMQ,cAAc,MAAOC,WAAS,CACtDJ,UAAWK,UAAKN,EAAQhB,KAAMiB,EAAWX,GAAYU,EAAQV,UAC7DS,IAAKA,GACJG,OAEoB,eAAzBK,QAAQC,IAAIC,WAA4Bd,EAAce,UAAY,CAShEC,SAAUC,UAAUC,KAMpBb,QAASY,UAAUE,OAKnBb,UAAWW,UAAUG,OAKrBzB,SAAUsB,UAAUI,aAEPC,EAAWnC,EAAQ,CAChCoC,KAAM,oBADOD,CAEZtB"}