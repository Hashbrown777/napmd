{"version":3,"file":"ListItem.js","sources":["../../../node_modules/@material-ui/core/es/ListItem/ListItem.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport const styles = theme => ({\n  /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    position: 'relative',\n    textDecoration: 'none',\n    width: '100%',\n    boxSizing: 'border-box',\n    textAlign: 'left',\n    paddingTop: 8,\n    paddingBottom: 8,\n    '&$focusVisible': {\n      backgroundColor: theme.palette.action.selected\n    },\n    '&$selected, &$selected:hover': {\n      backgroundColor: theme.palette.action.selected\n    },\n    '&$disabled': {\n      opacity: 0.5\n    }\n  },\n\n  /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n  container: {\n    position: 'relative'\n  },\n\n  /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n  focusVisible: {},\n\n  /* Styles applied to the `component` element if dense. */\n  dense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  },\n\n  /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    alignItems: 'flex-start'\n  },\n\n  /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the inner `component` element if `divider={true}`. */\n  divider: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    backgroundClip: 'padding-box'\n  },\n\n  /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n  gutters: {\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n\n  /* Styles applied to the inner `component` element if `button={true}`. */\n  button: {\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.shortest\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n\n  /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n  secondaryAction: {\n    // Add some space to avoid collision as `ListItemSecondaryAction`\n    // is absolutely positioned.\n    paddingRight: 48\n  },\n\n  /* Pseudo-class applied to the root element if `selected={true}`. */\n  selected: {}\n});\nconst useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nconst ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  const {\n    alignItems = 'center',\n    autoFocus = false,\n    button = false,\n    children: childrenProp,\n    classes,\n    className,\n    component: componentProp,\n    ContainerComponent = 'li',\n    ContainerProps: {\n      className: ContainerClassName\n    } = {},\n    dense = false,\n    disabled = false,\n    disableGutters = false,\n    divider = false,\n    focusVisibleClassName,\n    selected = false\n  } = props,\n        ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, [\"className\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    alignItems\n  };\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const children = React.Children.toArray(childrenProp);\n  const hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  const handleOwnRef = React.useCallback(instance => {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  const handleRef = useForkRef(handleOwnRef, ref);\n\n  const componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled\n  }, other);\n\n  let Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    let secondaryActionIndex = -1;\n\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);"],"names":["styles","theme","root","display","justifyContent","alignItems","position","textDecoration","width","boxSizing","textAlign","paddingTop","paddingBottom","backgroundColor","palette","action","selected","opacity","container","focusVisible","dense","alignItemsFlexStart","disabled","divider","borderBottom","backgroundClip","gutters","paddingLeft","paddingRight","button","transition","transitions","create","duration","shortest","hover","secondaryAction","useEnhancedEffect","window","React","useEffect","useLayoutEffect","ListItem","forwardRef","props","ref","autoFocus","children","childrenProp","classes","className","component","componentProp","ContainerComponent","ContainerProps","ContainerClassName","disableGutters","focusVisibleClassName","_objectWithoutPropertiesLoose","other","context","useContext","ListContext","childContext","listItemRef","useRef","current","focus","process","env","NODE_ENV","console","error","Children","toArray","hasSecondaryAction","length","isMuiElement","handleOwnRef","useCallback","instance","ReactDOM","findDOMNode","handleRef","useForkRef","componentProps","_extends","clsx","Component","ButtonBase","createElement","Provider","value","pop","propTypes","PropTypes","oneOf","bool","chainPropTypes","node","secondaryActionIndex","i","child","Error","object","isRequired","string","elementType","withStyles","name"],"mappings":"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"}