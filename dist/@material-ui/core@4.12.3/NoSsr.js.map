{"version":3,"file":"NoSsr.js","sources":["../../../node_modules/@material-ui/core/es/NoSsr/NoSsr.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nconst useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nfunction NoSsr(props) {\n  const {\n    children,\n    defer = false,\n    fallback = null\n  } = props;\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(() => {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mountedState ? children : fallback);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nexport default NoSsr;"],"names":["useEnhancedEffect","window","process","env","NODE_ENV","React","useLayoutEffect","useEffect","NoSsr","props","children","defer","fallback","mountedState","setMountedState","useState","createElement","Fragment","propTypes","PropTypes","node","bool","exactProp"],"mappings":"gcAGA,MAAMA,EAAsC,oBAAXC,QAAmD,SAAzBC,QAAQC,IAAIC,SAAsBC,EAAMC,gBAAkBD,EAAME,UAW3H,SAASC,EAAMC,GACb,MAAMC,SACJA,EAAQC,MACRA,GAAQ,EAAKC,SACbA,EAAW,MACTH,GACGI,EAAcC,GAAmBT,EAAMU,UAAS,GAYvD,OAXAf,GAAkB,KACXW,GACHG,GAAgB,KAEjB,CAACH,IACJN,EAAME,WAAU,KACVI,GACFG,GAAgB,KAEjB,CAACH,IAEgBN,EAAMW,cAAcX,EAAMY,SAAU,KAAMJ,EAAeH,EAAWE,SAGjE,eAAzBV,QAAQC,IAAIC,WAA4BI,EAAMU,UAAY,CASxDR,SAAUS,UAAUC,KAMpBT,MAAOQ,UAAUE,KAKjBT,SAAUO,UAAUC,OAGO,eAAzBlB,QAAQC,IAAIC,WAEdI,EAAsB,UAAIc,YAAUd,EAAMU"}