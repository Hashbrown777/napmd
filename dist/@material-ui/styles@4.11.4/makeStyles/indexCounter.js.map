{"version":3,"file":"indexCounter.js","sources":["../../../../node_modules/@material-ui/styles/es/makeStyles/indexCounter.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\n// Global index counter to preserve source order.\n// We create the style sheet during the creation of the component,\n// children are handled after the parents, so the order of style elements would be parent->child.\n// It is a problem though when a parent passes a className\n// which needs to override any child's styles.\n// StyleSheet of the child has a higher specificity, because of the source order.\n// So our solution is to render sheets them in the reverse order child->sheet, so\n// that parent has a higher specificity.\nlet indexCounter = -1e9;\nexport function increment() {\n  indexCounter += 1;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (indexCounter >= 0) {\n      console.warn(['Material-UI: You might have a memory leak.', 'The indexCounter is not supposed to grow that much.'].join('\\n'));\n    }\n  }\n\n  return indexCounter;\n}"],"names":["indexCounter","process","env","NODE_ENV","console","warn","join"],"mappings":"gCASA,IAAIA,GAAgB,gBACb,WASL,OARAA,GAAgB,EAEa,eAAzBC,QAAQC,IAAIC,UACVH,GAAgB,GAClBI,QAAQC,KAAK,CAAC,6CAA8C,uDAAuDC,KAAK,OAIrHN"}