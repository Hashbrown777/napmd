{"version":3,"file":"withTheme.js","sources":["../../../node_modules/@material-ui/styles/es/withTheme/withTheme.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport useTheme from '../useTheme';\nexport function withThemeCreator(options = {}) {\n  const {\n    defaultTheme\n  } = options;\n\n  const withTheme = Component => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (Component === undefined) {\n        throw new Error(['You are calling withTheme(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n      }\n    }\n\n    const WithTheme = /*#__PURE__*/React.forwardRef(function WithTheme(props, ref) {\n      const {\n        innerRef\n      } = props,\n            other = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      const theme = useTheme() || defaultTheme;\n      return /*#__PURE__*/React.createElement(Component, _extends({\n        theme: theme,\n        ref: innerRef || ref\n      }, other));\n    });\n    process.env.NODE_ENV !== \"production\" ? WithTheme.propTypes = {\n      /**\n       * Use that prop to pass a ref to the decorated component.\n       * @deprecated\n       */\n      innerRef: chainPropTypes(PropTypes.oneOfType([PropTypes.func, PropTypes.object]), props => {\n        if (props.innerRef == null) {\n          return null;\n        }\n\n        return new Error('Material-UI: The `innerRef` prop is deprecated and will be removed in v5. ' + 'Refs are now automatically forwarded to the inner component.');\n      })\n    } : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      WithTheme.displayName = `WithTheme(${getDisplayName(Component)})`;\n    }\n\n    hoistNonReactStatics(WithTheme, Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Exposed for test purposes.\n      WithTheme.Naked = Component;\n    }\n\n    return WithTheme;\n  };\n\n  return withTheme;\n} // Provide the theme object as a prop to the input component.\n// It's an alternative API to useTheme().\n// We encourage the usage of useTheme() where possible.\n\nconst withTheme = withThemeCreator();\nexport default withTheme;"],"names":["withThemeCreator","options","defaultTheme","Component","process","env","NODE_ENV","undefined","Error","join","WithTheme","React","forwardRef","props","ref","innerRef","other","_objectWithoutPropertiesLoose","theme","useTheme","createElement","_extends","propTypes","chainPropTypes","PropTypes","oneOfType","func","object","displayName","getDisplayName","hoistNonReactStatics","Naked","withTheme"],"mappings":"gUAOO,SAASA,EAAiBC,EAAU,IACzC,MAAMC,aACJA,GACED,EAiDJ,OA/CkBE,IAChB,GAA6B,eAAzBC,QAAQC,IAAIC,eACIC,IAAdJ,EACF,MAAM,IAAIK,MAAM,CAAC,oEAAqE,wCAAwCC,KAAK,OAIvI,MAAMC,EAAyBC,UAAMC,YAAW,SAAmBC,EAAOC,GACxE,MAAMC,SACJA,GACEF,EACEG,EAAQC,gCAA8BJ,EAAO,CAAC,aAE9CK,EAAQC,KAAcjB,EAC5B,OAAoBS,UAAMS,cAAcjB,EAAWkB,WAAS,CAC1DH,MAAOA,EACPJ,IAAKC,GAAYD,GAChBE,OA2BL,MAzByB,eAAzBZ,QAAQC,IAAIC,WAA4BI,EAAUY,UAAY,CAK5DP,SAAUQ,iBAAeC,UAAUC,UAAU,CAACD,UAAUE,KAAMF,UAAUG,UAAUd,GAC1D,MAAlBA,EAAME,SACD,KAGF,IAAIP,MAAM,8IAIQ,eAAzBJ,QAAQC,IAAIC,WACdI,EAAUkB,YAAc,aAAaC,iBAAe1B,OAGtD2B,UAAqBpB,EAAWP,GAEH,eAAzBC,QAAQC,IAAIC,WAEdI,EAAUqB,MAAQ5B,GAGbO,SAQLsB,EAAYhC"}