define(["../extends","@material-ui/utils"],(function(e,o){return function(n={}){const{baseClasses:t,newClasses:s,Component:r}=n;if(!s)return t;const i=e._extends({},t);return"production"!==process.env.NODE_ENV&&"string"==typeof s?(console.error([`Material-UI: The value \`${s}\` provided to the classes prop of ${o.getDisplayName(r)} is incorrect.`,"You might want to use the className prop instead."].join("\n")),t):(Object.keys(s).forEach((e=>{"production"!==process.env.NODE_ENV&&(!t[e]&&s[e]&&console.error([`Material-UI: The key \`${e}\` provided to the classes prop is not implemented in ${o.getDisplayName(r)}.`,`You can only override one of the following: ${Object.keys(t).join(",")}.`].join("\n")),s[e]&&"string"!=typeof s[e]&&console.error([`Material-UI: The key \`${e}\` provided to the classes prop is not valid for ${o.getDisplayName(r)}.`,`You need to provide a non empty string instead of: ${s[e]}.`].join("\n"))),s[e]&&(i[e]=`${t[e]} ${s[e]}`)})),i)}}));
//# sourceMappingURL=mergeClasses.js.map
