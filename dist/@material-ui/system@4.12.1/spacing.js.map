{"version":3,"file":"spacing.js","sources":["../../../node_modules/@material-ui/system/es/spacing.js"],"sourcesContent":["import responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport merge from './merge';\nimport memoize from './memoize';\nconst properties = {\n  m: 'margin',\n  p: 'padding'\n};\nconst directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nconst aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nconst getCssProperties = memoize(prop => {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  const [a, b] = prop.split('');\n  const property = properties[a];\n  const direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nconst spacingKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY'];\nexport function createUnarySpacing(theme) {\n  const themeSpacing = theme.spacing || 8;\n\n  if (typeof themeSpacing === 'number') {\n    return abs => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(`Material-UI: Expected spacing argument to be a number, got ${abs}.`);\n        }\n      }\n\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (abs > themeSpacing.length - 1) {\n          console.error([`Material-UI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\n'));\n        }\n      }\n\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([`Material-UI: The \\`theme.spacing\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\n'));\n  }\n\n  return () => undefined;\n}\n\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return `-${transformed}`;\n}\n\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\n\nfunction spacing(props) {\n  const theme = props.theme;\n  const transformer = createUnarySpacing(theme);\n  return Object.keys(props).map(prop => {\n    // Using a hash computation over an array iteration could be faster, but with only 28 items,\n    // it's doesn't worth the bundle size.\n    if (spacingKeys.indexOf(prop) === -1) {\n      return null;\n    }\n\n    const cssProperties = getCssProperties(prop);\n    const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n    const propValue = props[prop];\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  }).reduce(merge, {});\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;"],"names":["properties","m","p","directions","t","r","b","l","x","y","aliases","marginX","marginY","paddingX","paddingY","getCssProperties","memoize","prop","length","a","split","property","direction","Array","isArray","map","dir","spacingKeys","createUnarySpacing","theme","themeSpacing","spacing","abs","process","env","NODE_ENV","console","error","JSON","stringify","join","getStyleFromPropValue","cssProperties","transformer","propValue","reduce","acc","cssProperty","transformed","Math","getValue","props","Object","keys","indexOf","styleFromPropValue","handleBreakpoints","merge","propTypes","obj","key","responsivePropType","filterProps"],"mappings":"sKAIA,MAAMA,EAAa,CACjBC,EAAG,SACHC,EAAG,WAECC,EAAa,CACjBC,EAAG,MACHC,EAAG,QACHC,EAAG,SACHC,EAAG,OACHC,EAAG,CAAC,OAAQ,SACZC,EAAG,CAAC,MAAO,WAEPC,EAAU,CACdC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,SAAU,MAKNC,EAAmBC,GAAQC,IAE/B,GAAIA,EAAKC,OAAS,EAAG,CACnB,IAAIR,EAAQO,GAGV,MAAO,CAACA,GAFRA,EAAOP,EAAQO,GAMnB,MAAOE,EAAGb,GAAKW,EAAKG,MAAM,IACpBC,EAAWrB,EAAWmB,GACtBG,EAAYnB,EAAWG,IAAM,GACnC,OAAOiB,MAAMC,QAAQF,GAAaA,EAAUG,KAAIC,GAAOL,EAAWK,IAAO,CAACL,EAAWC,MAEjFK,EAAc,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,SAAU,YAAa,cAAe,eAAgB,aAAc,UAAW,UAAW,UAAW,aAAc,eAAgB,gBAAiB,cAAe,WAAY,YAC/Q,SAASC,EAAmBC,GACjC,MAAMC,EAAeD,EAAME,SAAW,EAEtC,MAA4B,iBAAjBD,EACFE,IACwB,eAAzBC,QAAQC,IAAIC,UACK,iBAARH,GACTI,QAAQC,MAAM,8DAA8DL,MAIzEF,EAAeE,GAItBT,MAAMC,QAAQM,GACTE,IACwB,eAAzBC,QAAQC,IAAIC,UACVH,EAAMF,EAAaZ,OAAS,GAC9BkB,QAAQC,MAAM,CAAC,oCAAoCL,gBAAmB,6BAA6BM,KAAKC,UAAUT,MAAkB,GAAGE,OAASF,EAAaZ,OAAS,0CAA0CsB,KAAK,OAIlNV,EAAaE,IAII,mBAAjBF,EACFA,GAGoB,eAAzBG,QAAQC,IAAIC,UACdC,QAAQC,MAAM,CAAC,6CAA6CP,iBAA6B,kDAAkDU,KAAK,OAG3I,QAsBT,SAASC,EAAsBC,EAAeC,GAC5C,OAAOC,GAAaF,EAAcG,QAAO,CAACC,EAAKC,KAC7CD,EAAIC,GArBR,SAAkBJ,EAAaC,GAC7B,GAAyB,iBAAdA,GAAuC,MAAbA,EACnC,OAAOA,EAGT,MACMI,EAAcL,EADRM,KAAKjB,IAAIY,IAGrB,OAAIA,GAAa,EACRI,EAGkB,iBAAhBA,GACDA,EAGH,IAAIA,IAKUE,CAASP,EAAaC,GAClCE,IACN,IAGL,SAASf,EAAQoB,GACf,MACMR,EAAcf,EADNuB,EAAMtB,OAEpB,OAAOuB,OAAOC,KAAKF,GAAO1B,KAAIR,IAG5B,IAAmC,IAA/BU,EAAY2B,QAAQrC,GACtB,OAAO,KAGT,MACMsC,EAAqBd,EADL1B,EAAiBE,GACyB0B,GAC1DC,EAAYO,EAAMlC,GACxB,OAAOuC,oBAAkBL,EAAOP,EAAWW,MAC1CV,OAAOY,EAAO,IAGnB1B,EAAQ2B,UAAqC,eAAzBzB,QAAQC,IAAIC,SAA4BR,EAAYkB,QAAO,CAACc,EAAKC,KACnFD,EAAIC,GAAOC,EACJF,IACN,IAAM,GACT5B,EAAQ+B,YAAcnC"}