{"version":3,"file":"breakpoints.js","sources":["../../../node_modules/@material-ui/system/es/breakpoints.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport merge from './merge'; // The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\n\nconst values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n};\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: key => `@media (min-width:${values[key]}px)`\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!props.theme) {\n      console.error('Material-UI: You are calling a style function without a theme value.');\n    }\n  }\n\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (typeof propValue === 'object') {\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      acc[themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);\n      return acc;\n    }, {});\n  }\n\n  const output = styleFromPropValue(propValue);\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  const newStyleFunction = props => {\n    const base = styleFunction(props);\n    const themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme: props.theme\n        }, props[key]));\n      }\n\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\n\nexport default breakpoints;"],"names":["values","xs","sm","md","lg","xl","defaultBreakpoints","keys","up","key","styleFunction","newStyleFunction","props","base","themeBreakpoints","theme","breakpoints","extended","reduce","acc","_extends","merge","propTypes","process","env","NODE_ENV","PropTypes","object","filterProps","propValue","styleFromPropValue","console","error","Array","isArray","item","index","Object","breakpoint"],"mappings":"gMAKA,MAAMA,EAAS,CACbC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,GAAI,MAEAC,EAAqB,CAGzBC,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BC,GAAIC,GAAO,qBAAqBT,EAAOS,mBA6BzC,SAAqBC,GACnB,MAAMC,EAAmBC,IACvB,MAAMC,EAAOH,EAAcE,GACrBE,EAAmBF,EAAMG,MAAMC,aAAeV,EAC9CW,EAAWH,EAAiBP,KAAKW,QAAO,CAACC,EAAKV,KAC9CG,EAAMH,MACRU,EAAMA,GAAO,IACTL,EAAiBN,GAAGC,IAAQC,EAAcU,WAAS,CACrDL,MAAOH,EAAMG,OACZH,EAAMH,MAGJU,IACN,MACH,OAAOE,EAAMR,EAAMI,IAWrB,OARAN,EAAiBW,UAAqC,eAAzBC,QAAQC,IAAIC,SAA4BL,WAAS,GAAIV,EAAcY,UAAW,CACzGrB,GAAIyB,UAAUC,OACdzB,GAAIwB,UAAUC,OACdxB,GAAIuB,UAAUC,OACdvB,GAAIsB,UAAUC,OACdtB,GAAIqB,UAAUC,SACX,GACLhB,EAAiBiB,YAAc,CAAC,KAAM,KAAM,KAAM,KAAM,QAASlB,EAAckB,aACxEjB,uBApDF,SAA2BC,EAAOiB,EAAWC,GAOlD,GAN6B,eAAzBP,QAAQC,IAAIC,WACTb,EAAMG,OACTgB,QAAQC,MAAM,yEAIdC,MAAMC,QAAQL,GAAY,CAC5B,MAAMf,EAAmBF,EAAMG,MAAMC,aAAeV,EACpD,OAAOuB,EAAUX,QAAO,CAACC,EAAKgB,EAAMC,KAClCjB,EAAIL,EAAiBN,GAAGM,EAAiBP,KAAK6B,KAAWN,EAAmBD,EAAUO,IAC/EjB,IACN,IAGL,GAAyB,iBAAdU,EAAwB,CACjC,MAAMf,EAAmBF,EAAMG,MAAMC,aAAeV,EACpD,OAAO+B,OAAO9B,KAAKsB,GAAWX,QAAO,CAACC,EAAKmB,KACzCnB,EAAIL,EAAiBN,GAAG8B,IAAeR,EAAmBD,EAAUS,IAC7DnB,IACN,IAIL,OADeW,EAAmBD"}