{"version":3,"file":"constructs-56674672.js","sources":["../node_modules/micromark/lib/constructs.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n"],"names":["document","list","blockQuote","contentInitial","definition","flowInitial","codeIndented","flow","headingAtx","thematicBreak","setextUnderline","htmlFlow","codeFenced","string","characterReference","characterEscape","text","lineEnding","labelStartImage","attention","autolink","htmlText","labelStartLink","hardBreakEscape","labelEnd","codeText","insideSpan","null","resolveText","attentionMarkers","disable"],"mappings":"8GA4BaA,EAAW,CACtB,GAAMC,OACN,GAAMA,OACN,GAAMA,OACN,GAAMA,OACN,GAAMA,OACN,GAAMA,OACN,GAAMA,OACN,GAAMA,OACN,GAAMA,OACN,GAAMA,OACN,GAAMA,OACN,GAAMA,OACN,GAAMA,OACN,GAAMC,cAIKC,EAAiB,CAC5B,GAAMC,cAIKC,EAAc,CACzB,EAAE,GAAIC,eACN,EAAE,GAAIA,eACN,GAAMA,gBAIKC,EAAO,CAClB,GAAMC,aACN,GAAMC,gBACN,GAAM,CAACC,kBAAiBD,iBACxB,GAAME,WACN,GAAMD,kBACN,GAAMD,gBACN,GAAMG,aACN,IAAOA,cAIIC,EAAS,CACpB,GAAMC,qBACN,GAAMC,mBAIKC,EAAO,CAClB,EAAE,GAAIC,aACN,EAAE,GAAIA,aACN,EAAE,GAAIA,aACN,GAAMC,kBACN,GAAMJ,qBACN,GAAMK,YACN,GAAM,CAACC,WAAUC,YACjB,GAAMC,iBACN,GAAM,CAACC,kBAAiBR,mBACxB,GAAMS,WACN,GAAML,YACN,GAAMM,YAIKC,EAAa,CACxBC,KAAM,CAACR,YAAWS,aAIPC,EAAmB,CAC9BF,KAAM,CAAC,GAAI,KAIAG,EAAU,CACrBH,KAAM"}