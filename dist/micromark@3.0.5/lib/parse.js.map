{"version":3,"file":"parse.js","sources":["../../../node_modules/micromark/lib/parse.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n"],"names":["options","parser","defined","lazy","constructs","combineExtensions","defaultConstructs","concat","extensions","content","create","document","flow","string","text","initial","from","createTokenizer"],"mappings":"mXAmBO,SAAeA,EAAU,IAG9B,MAMMC,EAAS,CACbC,QAAS,GACTC,KAAM,GACNC,WATiBC,oBAEjB,CAACC,qBAAmBC,OAAOP,EAAQQ,YAAc,KAQjDC,QAASC,EAAOD,WAChBE,SAAUD,EAAOC,YACjBC,KAAMF,EAAOE,QACbC,OAAQH,EAAOG,UACfC,KAAMJ,EAAOI,SAEf,OAAOb,EAKP,SAASS,EAAOK,GACd,OAGA,SAAiBC,GACf,OAAOC,kBAAgBhB,EAAQc,EAASC"}