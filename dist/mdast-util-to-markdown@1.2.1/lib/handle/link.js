define(["exports","../util/check-quote","../util/format-link-as-autolink","../util/container-phrasing","../util/safe","mdast-util-to-string","../util/pattern-compile","../util/pattern-in-scope"],(function(t,e,n,r,i,a,o,l){function u(t,a,o){const l=e.checkQuote(o),u='"'===l?"Quote":"Apostrophe";let s,f,c;if(n.formatLinkAsAutolink(t,o)){const e=o.stack;return o.stack=[],s=o.enter("autolink"),c="<"+r.containerPhrasing(t,o,{before:"<",after:">"})+">",s(),o.stack=e,c}return s=o.enter("link"),f=o.enter("label"),c="["+r.containerPhrasing(t,o,{before:"[",after:"]"})+"](",f(),!t.url&&t.title||/[ \t\r\n]/.test(t.url)?(f=o.enter("destinationLiteral"),c+="<"+i.safe(o,t.url,{before:"<",after:">"})+">"):(f=o.enter("destinationRaw"),c+=i.safe(o,t.url,{before:"(",after:t.title?" ":")"})),f(),t.title&&(f=o.enter("title"+u),c+=" "+l+i.safe(o,t.title,{before:l,after:l})+l,f()),c+=")",s(),c}u.peek=function(t,e,r){return n.formatLinkAsAutolink(t,r)?"<":"["},t.link=u,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=link.js.map
