{"version":3,"file":"strong.js","sources":["../../../../node_modules/mdast-util-to-markdown/lib/handle/strong.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @type {Handle}\n * @param {Strong} node\n */\nexport function strong(node, _, context) {\n  const marker = checkStrong(context)\n  const exit = context.enter('strong')\n  const value = containerPhrasing(node, context, {\n    before: marker,\n    after: marker\n  })\n  exit()\n  return marker + marker + value + marker + marker\n}\n\n/**\n * @type {Handle}\n * @param {Strong} _\n */\nfunction strongPeek(_, _1, context) {\n  return context.options.strong || '*'\n}\n"],"names":["strong","node","_","context","marker","checkStrong","exit","enter","value","containerPhrasing","before","after","peek","_1","options"],"mappings":"wFAkBO,SAASA,EAAOC,EAAMC,EAAGC,GAC9B,MAAMC,EAASC,cAAYF,GACrBG,EAAOH,EAAQI,MAAM,UACrBC,EAAQC,oBAAkBR,EAAME,EAAS,CAC7CO,OAAQN,EACRO,MAAOP,IAGT,OADAE,IACOF,EAASA,EAASI,EAAQJ,EAASA,EAlB5CJ,EAAOY,KAyBP,SAAoBV,EAAGW,EAAIV,GACzB,OAAOA,EAAQW,QAAQd,QAAU"}