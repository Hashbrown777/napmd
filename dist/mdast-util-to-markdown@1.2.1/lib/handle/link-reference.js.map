{"version":3,"file":"link-reference.js","sources":["../../../../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js"],"sourcesContent":["/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {safe} from '../util/safe.js'\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @type {Handle}\n * @param {LinkReference} node\n */\nexport function linkReference(node, _, context) {\n  const type = node.referenceType\n  const exit = context.enter('linkReference')\n  let subexit = context.enter('label')\n  const text = containerPhrasing(node, context, {before: '[', after: ']'})\n  let value = '[' + text + ']'\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  const reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n"],"names":["linkReference","node","_","context","type","referenceType","exit","enter","subexit","text","containerPhrasing","before","after","value","stack","reference","safe","association","peek"],"mappings":"kMAeO,SAASA,EAAcC,EAAMC,EAAGC,GACrC,MAAMC,EAAOH,EAAKI,cACZC,EAAOH,EAAQI,MAAM,iBAC3B,IAAIC,EAAUL,EAAQI,MAAM,SAC5B,MAAME,EAAOC,oBAAkBT,EAAME,EAAS,CAACQ,OAAQ,IAAKC,MAAO,MACnE,IAAIC,EAAQ,IAAMJ,EAAO,IAEzBD,IAEA,MAAMM,EAAQX,EAAQW,MACtBX,EAAQW,MAAQ,GAChBN,EAAUL,EAAQI,MAAM,aACxB,MAAMQ,EAAYC,OAAKb,EAASc,cAAYhB,GAAO,CAACU,OAAQ,IAAKC,MAAO,MAWxE,OAVAJ,IACAL,EAAQW,MAAQA,EAChBR,IAEa,SAATF,GAAoBK,GAAQA,IAASM,EAErB,aAATX,IACTS,GAAS,MAFTA,GAAS,IAAME,EAAY,IAKtBF,EA7BTb,EAAckB,KAmCd,WACE,MAAO"}