{"version":3,"file":"configure.js","sources":["../../../node_modules/mdast-util-to-markdown/lib/configure.js"],"sourcesContent":["/**\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n */\n\n/**\n * @param {Context} base\n * @param {Options} extension\n * @returns {Context}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {string} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      /* c8 ignore next 2 */\n      // @ts-expect-error: hush.\n      base[key] = [...(base[key] || []), ...(extension[key] || [])]\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      // @ts-expect-error: hush.\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n"],"names":["configure","base","extension","key","index","extensions","length","Object","assign","options"],"mappings":"4CAUO,SAASA,EAAUC,EAAMC,GAC9B,IAEIC,EAFAC,GAAS,EAKb,GAAIF,EAAUG,WACZ,OAASD,EAAQF,EAAUG,WAAWC,QACpCN,EAAUC,EAAMC,EAAUG,WAAWD,IAIzC,IAAKD,KAAOD,EACE,eAARC,IAEe,WAARA,GAA4B,SAARA,EAG7BF,EAAKE,GAAO,IAAKF,EAAKE,IAAQ,MAASD,EAAUC,IAAQ,IACxC,aAARA,EACTF,EAAKE,GAAOI,OAAOC,OAAOP,EAAKE,GAAMD,EAAUC,IAAQ,IAGvDF,EAAKQ,QAAQN,GAAOD,EAAUC,IAIlC,OAAOF"}