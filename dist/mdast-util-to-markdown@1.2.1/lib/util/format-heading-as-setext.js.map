{"version":3,"file":"format-heading-as-setext.js","sources":["../../../../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {visit, EXIT} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, context) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, (node) => {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (context.options.setext || literalWithBreak)\n  )\n}\n"],"names":["node","context","literalWithBreak","visit","test","value","type","EXIT","Boolean","depth","toString","options","setext"],"mappings":"sGAaO,SAA+BA,EAAMC,GAC1C,IAAIC,GAAmB,EAcvB,OAVAC,QAAMH,GAAOA,IACX,GACG,UAAWA,GAAQ,WAAWI,KAAKJ,EAAKK,QAC3B,UAAdL,EAAKM,KAGL,OADAJ,GAAmB,EACZK,UAIJC,UACHR,EAAKS,OAAST,EAAKS,MAAQ,IAC3BC,WAASV,KACRC,EAAQU,QAAQC,QAAUV"}