{"version":3,"file":"format-code-as-indented.js","sources":["../../../../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Context} Context\n */\n\n/**\n * @param {Code} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, context) {\n  return Boolean(\n    !context.options.fences &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n"],"names":["node","context","Boolean","options","fences","value","lang","test"],"mappings":"uDAUO,SAA8BA,EAAMC,GACzC,OAAOC,SACJD,EAAQE,QAAQC,QACfJ,EAAKK,QAEJL,EAAKM,MAEN,WAAWC,KAAKP,EAAKK,SAEpB,0CAA0CE,KAAKP,EAAKK"}