{"version":3,"file":"indent-lines.js","sources":["../../../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js"],"sourcesContent":["/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array.<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n"],"names":["eol","value","map","result","match","start","line","exec","one","slice","index","push","length","join"],"mappings":"gCAQA,MAAMA,EAAM,0BAOL,SAAqBC,EAAOC,GAEjC,MAAMC,EAAS,GACf,IAGIC,EAHAC,EAAQ,EACRC,EAAO,EAIX,KAAQF,EAAQJ,EAAIO,KAAKN,IACvBO,EAAIP,EAAMQ,MAAMJ,EAAOD,EAAMM,QAC7BP,EAAOQ,KAAKP,EAAM,IAClBC,EAAQD,EAAMM,MAAQN,EAAM,GAAGQ,OAC/BN,IAKF,OAFAE,EAAIP,EAAMQ,MAAMJ,IAETF,EAAOU,KAAK,IAKnB,SAASL,EAAIP,GACXE,EAAOQ,KAAKT,EAAID,EAAOK,GAAOL"}