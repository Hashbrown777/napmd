{"version":3,"file":"mdast-util-gfm-task-list-item@1.0.0.js","sources":["../node_modules/mdast-util-gfm-task-list-item/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  // Weâ€™re always in a paragraph, in a list item.\n  this.stack[this.stack.length - 2].checked =\n    token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n  /** @type {Paragraph} */\n  // @ts-expect-error: must be true.\n  const node = this.stack[this.stack.length - 1]\n  /** @type {BlockContent[]} */\n  // @ts-expect-error: check whether `parent` is a `listItem` later.\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else {\n        // @ts-expect-error: must be true.\n        head.position.start.column++\n        // @ts-expect-error: must be true.\n        head.position.start.offset++\n        // @ts-expect-error: must be true.\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context) {\n  const head = node.children[0]\n  let value = listItem(node, parent, context)\n\n  if (typeof node.checked === 'boolean' && head && head.type === 'paragraph') {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + '[' + (node.checked ? 'x' : ' ') + '] '\n  }\n}\n"],"names":["gfmTaskListItemFromMarkdown","exit","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","paragraph","token","parent","this","stack","length","node","siblings","children","head","firstParaghraph","index","type","checked","sibling","value","slice","shift","position","start","column","offset","Object","assign","gfmTaskListItemToMarkdown","unsafe","atBreak","character","after","handlers","listItem","context","replace","$0"],"mappings":"yFAaaA,EAA8B,CACzCC,KAAM,CACJC,0BAA2BC,EAC3BC,4BAA6BD,EAC7BE,UAkBJ,SAAuCC,GACrC,MAAMC,EAASC,KAAKC,MAAMD,KAAKC,MAAMC,OAAS,GAGxCC,EAAOH,KAAKC,MAAMD,KAAKC,MAAMC,OAAS,GAGtCE,EAAWL,EAAOM,SAClBC,EAAOH,EAAKE,SAAS,GAC3B,IAEIE,EAFAC,GAAS,EAIb,GACET,GACgB,aAAhBA,EAAOU,MACmB,kBAAnBV,EAAOW,SACdJ,GACc,SAAdA,EAAKG,KACL,CACA,OAASD,EAAQJ,EAASF,QAAQ,CAChC,MAAMS,EAAUP,EAASI,GACzB,GAAqB,cAAjBG,EAAQF,KAAsB,CAChCF,EAAkBI,EAClB,OAIAJ,IAAoBJ,IAEtBG,EAAKM,MAAQN,EAAKM,MAAMC,MAAM,GAEJ,IAAtBP,EAAKM,MAAMV,OACbC,EAAKE,SAASS,SAGdR,EAAKS,SAASC,MAAMC,SAEpBX,EAAKS,SAASC,MAAME,SAEpBf,EAAKY,SAASC,MAAQG,OAAOC,OAAO,GAAId,EAAKS,SAASC,SAK5DhB,KAAKP,KAAKK,MA1DCuB,EAA4B,CACvCC,OAAQ,CAAC,CAACC,SAAS,EAAMC,UAAW,IAAKC,MAAO,UAChDC,SAAU,CAACC,SA+Db,SAAkCxB,EAAMJ,EAAQ6B,GAC9C,MAAMtB,EAAOH,EAAKE,SAAS,GAC3B,IAAIO,EAAQe,WAASxB,EAAMJ,EAAQ6B,GAEP,kBAAjBzB,EAAKO,SAAyBJ,GAAsB,cAAdA,EAAKG,OACpDG,EAAQA,EAAMiB,QAAQ,mCASxB,SAAeC,GACb,OAAOA,EAAK,KAAO3B,EAAKO,QAAU,IAAM,KAAO,SAPjD,OAAOE,KAnET,SAASjB,EAAUG,GAEjBE,KAAKC,MAAMD,KAAKC,MAAMC,OAAS,GAAGQ,QACjB,8BAAfZ,EAAMW"}