{"version":3,"file":"AsyncGenerator.js","sources":["../../../../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js"],"sourcesContent":["import AwaitValue from \"./AwaitValue.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nAsyncGenerator.prototype[typeof Symbol === \"function\" && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n};\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};"],"names":["AsyncGenerator","gen","front","back","resume","key","arg","result","value","wrappedAwait","AwaitValue","Promise","resolve","wrapped","then","settle","done","err","type","reject","next","this","_invoke","request","undefined","prototype","Symbol","asyncIterator"],"mappings":"qCACe,SAASA,EAAeC,GACrC,IAAIC,EAAOC,EAqBX,SAASC,EAAOC,EAAKC,GACnB,IACE,IAAIC,EAASN,EAAII,GAAKC,GAClBE,EAAQD,EAAOC,MACfC,EAAeD,aAAiBE,EACpCC,QAAQC,QAAQH,EAAeD,EAAMK,QAAUL,GAAOM,MAAK,SAAUR,GAC/DG,EACFL,EAAe,WAARC,EAAmB,SAAW,OAAQC,GAI/CS,EAAOR,EAAOS,KAAO,SAAW,SAAUV,MACzC,SAAUW,GACXb,EAAO,QAASa,MAElB,MAAOA,GACPF,EAAO,QAASE,IAIpB,SAASF,EAAOG,EAAMV,GACpB,OAAQU,GACN,IAAK,SACHhB,EAAMU,QAAQ,CACZJ,MAAOA,EACPQ,MAAM,IAER,MAEF,IAAK,QACHd,EAAMiB,OAAOX,GACb,MAEF,QACEN,EAAMU,QAAQ,CACZJ,MAAOA,EACPQ,MAAM,KAKZd,EAAQA,EAAMkB,MAGZhB,EAAOF,EAAMG,IAAKH,EAAMI,KAExBH,EAAO,KAIXkB,KAAKC,QArEL,SAAcjB,EAAKC,GACjB,OAAO,IAAIK,SAAQ,SAAUC,EAASO,GACpC,IAAII,EAAU,CACZlB,IAAKA,EACLC,IAAKA,EACLM,QAASA,EACTO,OAAQA,EACRC,KAAM,MAGJjB,EACFA,EAAOA,EAAKiB,KAAOG,GAEnBrB,EAAQC,EAAOoB,EACfnB,EAAOC,EAAKC,QAyDW,mBAAlBL,EAAY,SACrBoB,KAAa,YAAIG,UAIrBxB,EAAeyB,UAA4B,mBAAXC,QAAyBA,OAAOC,eAAiB,mBAAqB,WACpG,OAAON,MAGTrB,EAAeyB,UAAUL,KAAO,SAAUd,GACxC,OAAOe,KAAKC,QAAQ,OAAQhB,IAG9BN,EAAeyB,UAAiB,MAAI,SAAUnB,GAC5C,OAAOe,KAAKC,QAAQ,QAAShB,IAG/BN,EAAeyB,UAAkB,OAAI,SAAUnB,GAC7C,OAAOe,KAAKC,QAAQ,SAAUhB"}