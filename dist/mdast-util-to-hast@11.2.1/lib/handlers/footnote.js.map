{"version":3,"file":"footnote.js","sources":["../../../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, itâ€™s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n"],"names":["h","node","footnoteById","footnoteOrder","no","identifier","String","push","type","children","position","footnoteReference"],"mappings":"sFAWO,SAAkBA,EAAGC,GAC1B,MAAMC,EAAeF,EAAEE,aACjBC,EAAgBH,EAAEG,cACxB,IAAIC,EAAK,EAET,KAAOA,KAAMF,GAAcE,IAE3B,MAAMC,EAAaC,OAAOF,GAa1B,OATAD,EAAcI,KAAKF,GAEnBH,EAAaG,GAAc,CACzBG,KAAM,qBACNH,WAAAA,EACAI,SAAU,CAAC,CAACD,KAAM,YAAaC,SAAUR,EAAKQ,WAC9CC,SAAUT,EAAKS,UAGVC,oBAAkBX,EAAG,CAC1BQ,KAAM,oBACNH,WAAAA,EACAK,SAAUT,EAAKS"}