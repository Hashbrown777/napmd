{"version":3,"file":"html-text.js","sources":["../../../node_modules/micromark-core-commonmark/lib/html-text.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We canâ€™t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n"],"names":["htmlText","name","tokenize","effects","ok","nok","self","this","marker","buffer","index","returnState","code","enter","consume","open","declarationOpen","tagCloseStart","instruction","asciiAlpha","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","markdownLineEnding","atLineEnding","end","charCodeAt","length","cdata","cdataClose","cdataEnd","instructionClose","tagClose","asciiAlphanumeric","tagCloseBetween","markdownSpace","markdownLineEndingOrSpace","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","undefined","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","exit","factorySpace","afterPrefix","parser","constructs","disable","null","includes"],"mappings":"+FAgBaA,EAAW,CACtBC,KAAM,WACNC,SAIF,SAA0BC,EAASC,EAAIC,GACrC,MAAMC,EAAOC,KAGb,IAAIC,EAGAC,EAGAC,EAGAC,EACJ,OAGA,SAAeC,GAIb,OAHAT,EAAQU,MAAM,YACdV,EAAQU,MAAM,gBACdV,EAAQW,QAAQF,GACTG,GAIT,SAASA,EAAKH,GACZ,OAAa,KAATA,GACFT,EAAQW,QAAQF,GACTI,GAGI,KAATJ,GACFT,EAAQW,QAAQF,GACTK,GAGI,KAATL,GACFT,EAAQW,QAAQF,GACTM,GAGLC,aAAWP,IACbT,EAAQW,QAAQF,GACTQ,GAGFf,EAAIO,GAIb,SAASI,EAAgBJ,GACvB,OAAa,KAATA,GACFT,EAAQW,QAAQF,GACTS,GAGI,KAATT,GACFT,EAAQW,QAAQF,GAChBH,EAAS,SACTC,EAAQ,EACDY,GAGLH,aAAWP,IACbT,EAAQW,QAAQF,GACTW,GAGFlB,EAAIO,GAIb,SAASS,EAAYT,GACnB,OAAa,KAATA,GACFT,EAAQW,QAAQF,GACTY,GAGFnB,EAAIO,GAIb,SAASY,EAAaZ,GACpB,OAAa,OAATA,GAA0B,KAATA,EACZP,EAAIO,GAGA,KAATA,GACFT,EAAQW,QAAQF,GACTa,GAGFC,EAAQd,GAIjB,SAASa,EAAiBb,GACxB,OAAa,OAATA,GAA0B,KAATA,EACZP,EAAIO,GAGNc,EAAQd,GAIjB,SAASc,EAAQd,GACf,OAAa,OAATA,EACKP,EAAIO,GAGA,KAATA,GACFT,EAAQW,QAAQF,GACTe,GAGLC,qBAAmBhB,IACrBD,EAAce,EACPG,EAAajB,KAGtBT,EAAQW,QAAQF,GACTc,GAIT,SAASC,EAAaf,GACpB,OAAa,KAATA,GACFT,EAAQW,QAAQF,GACTkB,GAGFJ,EAAQd,GAIjB,SAASU,EAAUV,GACjB,OAAIA,IAASH,EAAOsB,WAAWrB,MAC7BP,EAAQW,QAAQF,GACTF,IAAUD,EAAOuB,OAASC,EAAQX,GAGpCjB,EAAIO,GAIb,SAASqB,EAAMrB,GACb,OAAa,OAATA,EACKP,EAAIO,GAGA,KAATA,GACFT,EAAQW,QAAQF,GACTsB,GAGLN,qBAAmBhB,IACrBD,EAAcsB,EACPJ,EAAajB,KAGtBT,EAAQW,QAAQF,GACTqB,GAIT,SAASC,EAAWtB,GAClB,OAAa,KAATA,GACFT,EAAQW,QAAQF,GACTuB,GAGFF,EAAMrB,GAIf,SAASuB,EAASvB,GAChB,OAAa,KAATA,EACKkB,EAAIlB,GAGA,KAATA,GACFT,EAAQW,QAAQF,GACTuB,GAGFF,EAAMrB,GAIf,SAASW,EAAYX,GACnB,OAAa,OAATA,GAA0B,KAATA,EACZkB,EAAIlB,GAGTgB,qBAAmBhB,IACrBD,EAAcY,EACPM,EAAajB,KAGtBT,EAAQW,QAAQF,GACTW,GAIT,SAASL,EAAYN,GACnB,OAAa,OAATA,EACKP,EAAIO,GAGA,KAATA,GACFT,EAAQW,QAAQF,GACTwB,GAGLR,qBAAmBhB,IACrBD,EAAcO,EACPW,EAAajB,KAGtBT,EAAQW,QAAQF,GACTM,GAIT,SAASkB,EAAiBxB,GACxB,OAAgB,KAATA,EAAckB,EAAIlB,GAAQM,EAAYN,GAI/C,SAASK,EAAcL,GACrB,OAAIO,aAAWP,IACbT,EAAQW,QAAQF,GACTyB,GAGFhC,EAAIO,GAIb,SAASyB,EAASzB,GAChB,OAAa,KAATA,GAAe0B,oBAAkB1B,IACnCT,EAAQW,QAAQF,GACTyB,GAGFE,EAAgB3B,GAIzB,SAAS2B,EAAgB3B,GACvB,OAAIgB,qBAAmBhB,IACrBD,EAAc4B,EACPV,EAAajB,IAGlB4B,gBAAc5B,IAChBT,EAAQW,QAAQF,GACT2B,GAGFT,EAAIlB,GAIb,SAASQ,EAAQR,GACf,OAAa,KAATA,GAAe0B,oBAAkB1B,IACnCT,EAAQW,QAAQF,GACTQ,GAGI,KAATR,GAAwB,KAATA,GAAe6B,4BAA0B7B,GACnD8B,EAAe9B,GAGjBP,EAAIO,GAIb,SAAS8B,EAAe9B,GACtB,OAAa,KAATA,GACFT,EAAQW,QAAQF,GACTkB,GAGI,KAATlB,GAAwB,KAATA,GAAeO,aAAWP,IAC3CT,EAAQW,QAAQF,GACT+B,GAGLf,qBAAmBhB,IACrBD,EAAc+B,EACPb,EAAajB,IAGlB4B,gBAAc5B,IAChBT,EAAQW,QAAQF,GACT8B,GAGFZ,EAAIlB,GAIb,SAAS+B,EAAqB/B,GAC5B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACA0B,oBAAkB1B,IAElBT,EAAQW,QAAQF,GACT+B,GAGFC,EAA0BhC,GAInC,SAASgC,EAA0BhC,GACjC,OAAa,KAATA,GACFT,EAAQW,QAAQF,GACTiC,GAGLjB,qBAAmBhB,IACrBD,EAAciC,EACPf,EAAajB,IAGlB4B,gBAAc5B,IAChBT,EAAQW,QAAQF,GACTgC,GAGFF,EAAe9B,GAIxB,SAASiC,EAA4BjC,GACnC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOP,EAAIO,GAGA,KAATA,GAAwB,KAATA,GACjBT,EAAQW,QAAQF,GAChBJ,EAASI,EACFkC,GAGLlB,qBAAmBhB,IACrBD,EAAckC,EACPhB,EAAajB,IAGlB4B,gBAAc5B,IAChBT,EAAQW,QAAQF,GACTiC,IAGT1C,EAAQW,QAAQF,GAChBJ,OAASuC,EACFC,GAIT,SAASF,EAA4BlC,GACnC,OAAIA,IAASJ,GACXL,EAAQW,QAAQF,GACTqC,GAGI,OAATrC,EACKP,EAAIO,GAGTgB,qBAAmBhB,IACrBD,EAAcmC,EACPjB,EAAajB,KAGtBT,EAAQW,QAAQF,GACTkC,GAIT,SAASG,EAAiCrC,GACxC,OAAa,KAATA,GAAwB,KAATA,GAAe6B,4BAA0B7B,GACnD8B,EAAe9B,GAGjBP,EAAIO,GAIb,SAASoC,EAA8BpC,GACrC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOP,EAAIO,GAGA,KAATA,GAAe6B,4BAA0B7B,GACpC8B,EAAe9B,IAGxBT,EAAQW,QAAQF,GACToC,GAMT,SAASnB,EAAajB,GAKpB,OAJAT,EAAQ+C,KAAK,gBACb/C,EAAQU,MAAM,cACdV,EAAQW,QAAQF,GAChBT,EAAQ+C,KAAK,cACNC,eACLhD,EACAiD,EACA,aACA9C,EAAK+C,OAAOC,WAAWC,QAAQC,KAAKC,SAAS,qBACzCV,EACA,GAKR,SAASK,EAAYxC,GAEnB,OADAT,EAAQU,MAAM,gBACPF,EAAYC,GAIrB,SAASkB,EAAIlB,GACX,OAAa,KAATA,GACFT,EAAQW,QAAQF,GAChBT,EAAQ+C,KAAK,gBACb/C,EAAQ+C,KAAK,YACN9C,GAGFC,EAAIO"}