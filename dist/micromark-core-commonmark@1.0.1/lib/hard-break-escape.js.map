{"version":3,"file":"hard-break-escape.js","sources":["../../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n"],"names":["hardBreakEscape","name","tokenize","effects","ok","nok","code","enter","consume","open","markdownLineEnding","exit"],"mappings":"mEAQaA,EAAkB,CAC7BC,KAAM,kBACNC,SAIF,SAAiCC,EAASC,EAAIC,GAC5C,OAGA,SAAeC,GAIb,OAHAH,EAAQI,MAAM,mBACdJ,EAAQI,MAAM,gBACdJ,EAAQK,QAAQF,GACTG,GAIT,SAASA,EAAKH,GACZ,OAAII,qBAAmBJ,IACrBH,EAAQQ,KAAK,gBACbR,EAAQQ,KAAK,mBACNP,EAAGE,IAGLD,EAAIC"}