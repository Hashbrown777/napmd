{"version":3,"file":"autolink.js","sources":["../../../node_modules/micromark-core-commonmark/lib/autolink.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n"],"names":["autolink","name","tokenize","effects","ok","nok","size","code","enter","consume","exit","open","asciiAlpha","schemeOrEmailAtext","asciiAtext","emailAtext","asciiAlphanumeric","schemeInsideOrEmailAtext","urlInside","end","asciiControl","emailAtSignOrDot","emailLabel","type","emailValue"],"mappings":"mEAaaA,EAAW,CACtBC,KAAM,WACNC,SAIF,SAA0BC,EAASC,EAAIC,GACrC,IAAIC,EAAO,EACX,OAGA,SAAeC,GAMb,OALAJ,EAAQK,MAAM,YACdL,EAAQK,MAAM,kBACdL,EAAQM,QAAQF,GAChBJ,EAAQO,KAAK,kBACbP,EAAQK,MAAM,oBACPG,GAIT,SAASA,EAAKJ,GACZ,OAAIK,aAAWL,IACbJ,EAAQM,QAAQF,GACTM,GAGFC,aAAWP,GAAQQ,EAAWR,GAAQF,EAAIE,GAInD,SAASM,EAAmBN,GAC1B,OAAgB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAeS,oBAAkBT,GAClEU,EAAyBV,GACzBQ,EAAWR,GAIjB,SAASU,EAAyBV,GAChC,OAAa,KAATA,GACFJ,EAAQM,QAAQF,GACTW,IAIG,KAATX,GAAwB,KAATA,GAAwB,KAATA,GAAeS,oBAAkBT,KAChED,IAAS,IAETH,EAAQM,QAAQF,GACTU,GAGFF,EAAWR,GAIpB,SAASW,EAAUX,GACjB,OAAa,KAATA,GACFJ,EAAQO,KAAK,oBACNS,EAAIZ,IAGA,OAATA,GAA0B,KAATA,GAAwB,KAATA,GAAea,eAAab,GACvDF,EAAIE,IAGbJ,EAAQM,QAAQF,GACTW,GAIT,SAASH,EAAWR,GAClB,OAAa,KAATA,GACFJ,EAAQM,QAAQF,GAChBD,EAAO,EACAe,GAGLP,aAAWP,IACbJ,EAAQM,QAAQF,GACTQ,GAGFV,EAAIE,GAIb,SAASc,EAAiBd,GACxB,OAAOS,oBAAkBT,GAAQe,EAAWf,GAAQF,EAAIE,GAI1D,SAASe,EAAWf,GAClB,OAAa,KAATA,GACFJ,EAAQM,QAAQF,GAChBD,EAAO,EACAe,GAGI,KAATd,GAEFJ,EAAQO,KAAK,oBAAoBa,KAAO,gBACjCJ,EAAIZ,IAGNiB,EAAWjB,GAIpB,SAASiB,EAAWjB,GAClB,OAAc,KAATA,GAAeS,oBAAkBT,KAAUD,IAAS,IACvDH,EAAQM,QAAQF,GACA,KAATA,EAAciB,EAAaF,GAG7BjB,EAAIE,GAIb,SAASY,EAAIZ,GAKX,OAJAJ,EAAQK,MAAM,kBACdL,EAAQM,QAAQF,GAChBJ,EAAQO,KAAK,kBACbP,EAAQO,KAAK,YACNN"}