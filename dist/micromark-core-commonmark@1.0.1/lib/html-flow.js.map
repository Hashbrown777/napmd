{"version":3,"file":"html-flow.js","sources":["../../../node_modules/micromark-core-commonmark/lib/html-flow.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n"],"names":["htmlFlow","name","tokenize","effects","ok","nok","self","this","kind","startTag","buffer","index","marker","code","enter","consume","open","declarationStart","tagCloseStart","interrupt","continuationDeclarationInside","asciiAlpha","String","fromCharCode","tagName","commentOpenInside","cdataOpenInside","charCodeAt","length","continuation","markdownLineEndingOrSpace","htmlRawNames","includes","toLowerCase","htmlBlockNames","basicSelfClosing","parser","lazy","now","line","completeAttributeNameBefore","completeClosingTagAfter","asciiAlphanumeric","markdownSpace","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","markdownLineEnding","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","check","nextBlankConstruct","exit","htmlContinueStart","done","attempt","htmlLineEnd","partial","lineStart","continuationRawEndTag","resolveTo","events","type","start","splice","concrete","blankLine"],"mappings":"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"}