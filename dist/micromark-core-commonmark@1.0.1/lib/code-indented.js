define(["exports","micromark-factory-space","micromark-util-character"],(function(e,n,t){const i={name:"codeIndented",tokenize:function(e,i,o){const c=this;return function(t){return e.enter("codeIndented"),n.factorySpace(e,l,"linePrefix",5)(t)};function l(e){const n=c.events[c.events.length-1];return n&&"linePrefix"===n[1].type&&n[2].sliceSerialize(n[1],!0).length>=4?u(e):o(e)}function u(n){return null===n?a(n):t.markdownLineEnding(n)?e.attempt(r,u,a)(n):(e.enter("codeFlowValue"),d(n))}function d(n){return null===n||t.markdownLineEnding(n)?(e.exit("codeFlowValue"),u(n)):(e.consume(n),d)}function a(n){return e.exit("codeIndented"),i(n)}}},r={tokenize:function(e,i,r){const o=this;return c;function c(i){return o.parser.lazy[o.now().line]?r(i):t.markdownLineEnding(i)?(e.enter("lineEnding"),e.consume(i),e.exit("lineEnding"),c):n.factorySpace(e,l,"linePrefix",5)(i)}function l(e){const n=o.events[o.events.length-1];return n&&"linePrefix"===n[1].type&&n[2].sliceSerialize(n[1],!0).length>=4?i(e):t.markdownLineEnding(e)?c(e):r(e)}},partial:!0};e.codeIndented=i,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=code-indented.js.map
