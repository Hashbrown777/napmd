define(["exports"],(function(t){const e={null:"",left:' align="left"',right:' align="right"',center:' align="center"'},a={enter:{table(t){this.lineEndingIfNeeded(),this.tag("<table>"),this.setData("tableAlign",t._align)},tableBody(){this.setData("slurpOneLineEnding"),this.tag("<tbody>")},tableData(){const t=e[this.getData("tableAlign")[this.getData("tableColumn")]];void 0===t?this.buffer():(this.lineEndingIfNeeded(),this.tag("<td"+t+">"))},tableHead(){this.lineEndingIfNeeded(),this.tag("<thead>")},tableHeader(){this.lineEndingIfNeeded(),this.tag("<th"+e[this.getData("tableAlign")[this.getData("tableColumn")]]+">")},tableRow(){this.setData("tableColumn",0),this.lineEndingIfNeeded(),this.tag("<tr>")}},exit:{codeTextData(t){let e=this.sliceSerialize(t);this.getData("tableAlign")&&(e=e.replace(/\\([\\|])/g,i)),this.raw(this.encode(e))},table(){this.setData("tableAlign"),this.setData("slurpAllLineEndings"),this.lineEndingIfNeeded(),this.tag("</table>")},tableBody(){this.lineEndingIfNeeded(),this.tag("</tbody>")},tableData(){const t=this.getData("tableColumn");t in this.getData("tableAlign")?(this.tag("</td>"),this.setData("tableColumn",t+1)):this.resume()},tableHead(){this.lineEndingIfNeeded(),this.tag("</thead>"),this.setData("slurpOneLineEnding",!0)},tableHeader(){this.tag("</th>"),this.setData("tableColumn",this.getData("tableColumn")+1)},tableRow(){const t=this.getData("tableAlign");let a=this.getData("tableColumn");for(;a<t.length;)this.lineEndingIfNeeded(),this.tag("<td"+e[t[a]]+"></td>"),a++;this.setData("tableColumn",a),this.lineEndingIfNeeded(),this.tag("</tr>")}}};function i(t,e){return"|"===e?e:t}t.gfmTableHtml=a,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=html.js.map
