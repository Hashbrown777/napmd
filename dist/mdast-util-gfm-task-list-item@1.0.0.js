define(["exports","mdast-util-to-markdown/lib/handle/list-item"],(function(t,e){const s={exit:{taskListCheckValueChecked:i,taskListCheckValueUnchecked:i,paragraph:function(t){const e=this.stack[this.stack.length-2],s=this.stack[this.stack.length-1],a=e.children,i=s.children[0];let n,c=-1;if(e&&"listItem"===e.type&&"boolean"==typeof e.checked&&i&&"text"===i.type){for(;++c<a.length;){const t=a[c];if("paragraph"===t.type){n=t;break}}n===s&&(i.value=i.value.slice(1),0===i.value.length?s.children.shift():(i.position.start.column++,i.position.start.offset++,s.position.start=Object.assign({},i.position.start)))}this.exit(t)}}},a={unsafe:[{atBreak:!0,character:"-",after:"[:|-]"}],handlers:{listItem:function(t,s,a){const i=t.children[0];let n=e.listItem(t,s,a);"boolean"==typeof t.checked&&i&&"paragraph"===i.type&&(n=n.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/,(function(e){return e+"["+(t.checked?"x":" ")+"] "})));return n}}};function i(t){this.stack[this.stack.length-2].checked="taskListCheckValueChecked"===t.type}t.gfmTaskListItemFromMarkdown=s,t.gfmTaskListItemToMarkdown=a,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=mdast-util-gfm-task-list-item@1.0.0.js.map
